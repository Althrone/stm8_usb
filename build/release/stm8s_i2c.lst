                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_i2c
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _I2C_DeInit
                                     13 	.globl _I2C_Init
                                     14 	.globl _I2C_Cmd
                                     15 	.globl _I2C_GeneralCallCmd
                                     16 	.globl _I2C_GenerateSTART
                                     17 	.globl _I2C_GenerateSTOP
                                     18 	.globl _I2C_SoftwareResetCmd
                                     19 	.globl _I2C_StretchClockCmd
                                     20 	.globl _I2C_AcknowledgeConfig
                                     21 	.globl _I2C_ITConfig
                                     22 	.globl _I2C_FastModeDutyCycleConfig
                                     23 	.globl _I2C_ReceiveData
                                     24 	.globl _I2C_Send7bitAddress
                                     25 	.globl _I2C_SendData
                                     26 	.globl _I2C_CheckEvent
                                     27 	.globl _I2C_GetLastEvent
                                     28 	.globl _I2C_GetFlagStatus
                                     29 	.globl _I2C_ClearFlag
                                     30 	.globl _I2C_GetITStatus
                                     31 	.globl _I2C_ClearITPendingBit
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DATA
                                     36 ;--------------------------------------------------------
                                     37 ; ram data
                                     38 ;--------------------------------------------------------
                                     39 	.area INITIALIZED
                                     40 ;--------------------------------------------------------
                                     41 ; absolute external ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area DABS (ABS)
                                     44 
                                     45 ; default segment ordering for linker
                                     46 	.area HOME
                                     47 	.area GSINIT
                                     48 	.area GSFINAL
                                     49 	.area CONST
                                     50 	.area INITIALIZER
                                     51 	.area CODE
                                     52 
                                     53 ;--------------------------------------------------------
                                     54 ; global & static initialisations
                                     55 ;--------------------------------------------------------
                                     56 	.area HOME
                                     57 	.area GSINIT
                                     58 	.area GSFINAL
                                     59 	.area GSINIT
                                     60 ;--------------------------------------------------------
                                     61 ; Home
                                     62 ;--------------------------------------------------------
                                     63 	.area HOME
                                     64 	.area HOME
                                     65 ;--------------------------------------------------------
                                     66 ; code
                                     67 ;--------------------------------------------------------
                                     68 	.area CODE
                                     69 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 67: void I2C_DeInit(void)
                                     70 ;	-----------------------------------------
                                     71 ;	 function I2C_DeInit
                                     72 ;	-----------------------------------------
      000000                         73 _I2C_DeInit:
                                     74 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 69: I2C->CR1 = I2C_CR1_RESET_VALUE;
      000000 35 00 52 10      [ 1]   75 	mov	0x5210+0, #0x00
                                     76 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 70: I2C->CR2 = I2C_CR2_RESET_VALUE;
      000004 35 00 52 11      [ 1]   77 	mov	0x5211+0, #0x00
                                     78 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 71: I2C->FREQR = I2C_FREQR_RESET_VALUE;
      000008 35 00 52 12      [ 1]   79 	mov	0x5212+0, #0x00
                                     80 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 72: I2C->OARL = I2C_OARL_RESET_VALUE;
      00000C 35 00 52 13      [ 1]   81 	mov	0x5213+0, #0x00
                                     82 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 73: I2C->OARH = I2C_OARH_RESET_VALUE;
      000010 35 00 52 14      [ 1]   83 	mov	0x5214+0, #0x00
                                     84 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 74: I2C->ITR = I2C_ITR_RESET_VALUE;
      000014 35 00 52 1A      [ 1]   85 	mov	0x521a+0, #0x00
                                     86 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 75: I2C->CCRL = I2C_CCRL_RESET_VALUE;
      000018 35 00 52 1B      [ 1]   87 	mov	0x521b+0, #0x00
                                     88 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 76: I2C->CCRH = I2C_CCRH_RESET_VALUE;
      00001C 35 00 52 1C      [ 1]   89 	mov	0x521c+0, #0x00
                                     90 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 77: I2C->TRISER = I2C_TRISER_RESET_VALUE;
      000020 35 02 52 1D      [ 1]   91 	mov	0x521d+0, #0x02
                                     92 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 78: }
      000024 81               [ 4]   93 	ret
                                     94 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 96: void I2C_Init(uint32_t OutputClockFrequencyHz, uint16_t OwnAddress, 
                                     95 ;	-----------------------------------------
                                     96 ;	 function I2C_Init
                                     97 ;	-----------------------------------------
      000025                         98 _I2C_Init:
      000025 52 07            [ 2]   99 	sub	sp, #7
                                    100 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 102: uint8_t tmpccrh = 0;
      000027 0F 05            [ 1]  101 	clr	(0x05, sp)
                                    102 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 105: assert_param(IS_I2C_ACK_OK(Ack));
      000029 0D 11            [ 1]  103 	tnz	(0x11, sp)
      00002B 27 17            [ 1]  104 	jreq	00114$
      00002D 7B 11            [ 1]  105 	ld	a, (0x11, sp)
      00002F 4A               [ 1]  106 	dec	a
      000030 27 12            [ 1]  107 	jreq	00114$
      000032 7B 11            [ 1]  108 	ld	a, (0x11, sp)
      000034 A1 02            [ 1]  109 	cp	a, #0x02
      000036 27 0C            [ 1]  110 	jreq	00114$
      000038 4B 69            [ 1]  111 	push	#0x69
      00003A 5F               [ 1]  112 	clrw	x
      00003B 89               [ 2]  113 	pushw	x
      00003C 4B 00            [ 1]  114 	push	#0x00
      00003E AEr00r00         [ 2]  115 	ldw	x, #(___str_0+0)
      000041 CDr00r00         [ 4]  116 	call	_assert_failed
      000044                        117 00114$:
                                    118 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 106: assert_param(IS_I2C_ADDMODE_OK(AddMode));
      000044 0D 12            [ 1]  119 	tnz	(0x12, sp)
      000046 27 12            [ 1]  120 	jreq	00122$
      000048 7B 12            [ 1]  121 	ld	a, (0x12, sp)
      00004A A1 80            [ 1]  122 	cp	a, #0x80
      00004C 27 0C            [ 1]  123 	jreq	00122$
      00004E 4B 6A            [ 1]  124 	push	#0x6a
      000050 5F               [ 1]  125 	clrw	x
      000051 89               [ 2]  126 	pushw	x
      000052 4B 00            [ 1]  127 	push	#0x00
      000054 AEr00r00         [ 2]  128 	ldw	x, #(___str_0+0)
      000057 CDr00r00         [ 4]  129 	call	_assert_failed
      00005A                        130 00122$:
                                    131 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 107: assert_param(IS_I2C_OWN_ADDRESS_OK(OwnAddress));
      00005A 1E 0E            [ 2]  132 	ldw	x, (0x0e, sp)
      00005C A3 03 FF         [ 2]  133 	cpw	x, #0x03ff
      00005F 23 0C            [ 2]  134 	jrule	00127$
      000061 4B 6B            [ 1]  135 	push	#0x6b
      000063 5F               [ 1]  136 	clrw	x
      000064 89               [ 2]  137 	pushw	x
      000065 4B 00            [ 1]  138 	push	#0x00
      000067 AEr00r00         [ 2]  139 	ldw	x, #(___str_0+0)
      00006A CDr00r00         [ 4]  140 	call	_assert_failed
      00006D                        141 00127$:
                                    142 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 108: assert_param(IS_I2C_DUTYCYCLE_OK(I2C_DutyCycle));  
      00006D 0D 10            [ 1]  143 	tnz	(0x10, sp)
      00006F 27 12            [ 1]  144 	jreq	00129$
      000071 7B 10            [ 1]  145 	ld	a, (0x10, sp)
      000073 A1 40            [ 1]  146 	cp	a, #0x40
      000075 27 0C            [ 1]  147 	jreq	00129$
      000077 4B 6C            [ 1]  148 	push	#0x6c
      000079 5F               [ 1]  149 	clrw	x
      00007A 89               [ 2]  150 	pushw	x
      00007B 4B 00            [ 1]  151 	push	#0x00
      00007D AEr00r00         [ 2]  152 	ldw	x, #(___str_0+0)
      000080 CDr00r00         [ 4]  153 	call	_assert_failed
      000083                        154 00129$:
                                    155 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 109: assert_param(IS_I2C_INPUT_CLOCK_FREQ_OK(InputClockFrequencyMHz));
      000083 7B 13            [ 1]  156 	ld	a, (0x13, sp)
      000085 A1 01            [ 1]  157 	cp	a, #0x01
      000087 25 06            [ 1]  158 	jrc	00133$
      000089 7B 13            [ 1]  159 	ld	a, (0x13, sp)
      00008B A1 10            [ 1]  160 	cp	a, #0x10
      00008D 23 0C            [ 2]  161 	jrule	00134$
      00008F                        162 00133$:
      00008F 4B 6D            [ 1]  163 	push	#0x6d
      000091 5F               [ 1]  164 	clrw	x
      000092 89               [ 2]  165 	pushw	x
      000093 4B 00            [ 1]  166 	push	#0x00
      000095 AEr00r00         [ 2]  167 	ldw	x, #(___str_0+0)
      000098 CDr00r00         [ 4]  168 	call	_assert_failed
      00009B                        169 00134$:
                                    170 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 110: assert_param(IS_I2C_OUTPUT_CLOCK_FREQ_OK(OutputClockFrequencyHz));
      00009B 1E 0C            [ 2]  171 	ldw	x, (0x0c, sp)
      00009D A3 00 01         [ 2]  172 	cpw	x, #0x0001
      0000A0 7B 0B            [ 1]  173 	ld	a, (0x0b, sp)
      0000A2 A2 00            [ 1]  174 	sbc	a, #0x00
      0000A4 7B 0A            [ 1]  175 	ld	a, (0x0a, sp)
      0000A6 A2 00            [ 1]  176 	sbc	a, #0x00
      0000A8 25 0E            [ 1]  177 	jrc	00138$
      0000AA AE 1A 80         [ 2]  178 	ldw	x, #0x1a80
      0000AD 13 0C            [ 2]  179 	cpw	x, (0x0c, sp)
      0000AF A6 06            [ 1]  180 	ld	a, #0x06
      0000B1 12 0B            [ 1]  181 	sbc	a, (0x0b, sp)
      0000B3 4F               [ 1]  182 	clr	a
      0000B4 12 0A            [ 1]  183 	sbc	a, (0x0a, sp)
      0000B6 24 0C            [ 1]  184 	jrnc	00139$
      0000B8                        185 00138$:
      0000B8 4B 6E            [ 1]  186 	push	#0x6e
      0000BA 5F               [ 1]  187 	clrw	x
      0000BB 89               [ 2]  188 	pushw	x
      0000BC 4B 00            [ 1]  189 	push	#0x00
      0000BE AEr00r00         [ 2]  190 	ldw	x, #(___str_0+0)
      0000C1 CDr00r00         [ 4]  191 	call	_assert_failed
      0000C4                        192 00139$:
                                    193 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 115: I2C->FREQR &= (uint8_t)(~I2C_FREQR_FREQ);
      0000C4 C6 52 12         [ 1]  194 	ld	a, 0x5212
      0000C7 A4 C0            [ 1]  195 	and	a, #0xc0
      0000C9 C7 52 12         [ 1]  196 	ld	0x5212, a
                                    197 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 117: I2C->FREQR |= InputClockFrequencyMHz;
      0000CC C6 52 12         [ 1]  198 	ld	a, 0x5212
      0000CF 1A 13            [ 1]  199 	or	a, (0x13, sp)
      0000D1 C7 52 12         [ 1]  200 	ld	0x5212, a
                                    201 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 121: I2C->CR1 &= (uint8_t)(~I2C_CR1_PE);
      0000D4 72 11 52 10      [ 1]  202 	bres	0x5210, #0
                                    203 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 124: I2C->CCRH &= (uint8_t)(~(I2C_CCRH_FS | I2C_CCRH_DUTY | I2C_CCRH_CCR));
      0000D8 C6 52 1C         [ 1]  204 	ld	a, 0x521c
      0000DB A4 30            [ 1]  205 	and	a, #0x30
      0000DD C7 52 1C         [ 1]  206 	ld	0x521c, a
                                    207 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 125: I2C->CCRL &= (uint8_t)(~I2C_CCRL_CCR);
      0000E0 C6 52 1B         [ 1]  208 	ld	a, 0x521b
      0000E3 35 00 52 1B      [ 1]  209 	mov	0x521b+0, #0x00
                                    210 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 136: result = (uint16_t) ((InputClockFrequencyMHz * 1000000) / (OutputClockFrequencyHz * 3));
      0000E7 7B 13            [ 1]  211 	ld	a, (0x13, sp)
      0000E9 5F               [ 1]  212 	clrw	x
      0000EA 0F 01            [ 1]  213 	clr	(0x01, sp)
      0000EC 88               [ 1]  214 	push	a
      0000ED 89               [ 2]  215 	pushw	x
      0000EE 4F               [ 1]  216 	clr	a
      0000EF 88               [ 1]  217 	push	a
      0000F0 4B 40            [ 1]  218 	push	#0x40
      0000F2 4B 42            [ 1]  219 	push	#0x42
      0000F4 4B 0F            [ 1]  220 	push	#0x0f
      0000F6 4B 00            [ 1]  221 	push	#0x00
      0000F8 CDr00r00         [ 4]  222 	call	__mullong
      0000FB 5B 08            [ 2]  223 	addw	sp, #8
      0000FD 1F 03            [ 2]  224 	ldw	(0x03, sp), x
      0000FF 17 01            [ 2]  225 	ldw	(0x01, sp), y
                                    226 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 128: if (OutputClockFrequencyHz > I2C_MAX_STANDARD_FREQ) /* FAST MODE */
      000101 AE 86 A0         [ 2]  227 	ldw	x, #0x86a0
      000104 13 0C            [ 2]  228 	cpw	x, (0x0c, sp)
      000106 A6 01            [ 1]  229 	ld	a, #0x01
      000108 12 0B            [ 1]  230 	sbc	a, (0x0b, sp)
      00010A 4F               [ 1]  231 	clr	a
      00010B 12 0A            [ 1]  232 	sbc	a, (0x0a, sp)
      00010D 24 76            [ 1]  233 	jrnc	00109$
                                    234 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 131: tmpccrh = I2C_CCRH_FS;
      00010F A6 80            [ 1]  235 	ld	a, #0x80
      000111 6B 05            [ 1]  236 	ld	(0x05, sp), a
                                    237 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 133: if (I2C_DutyCycle == I2C_DUTYCYCLE_2)
      000113 0D 10            [ 1]  238 	tnz	(0x10, sp)
      000115 26 21            [ 1]  239 	jrne	00102$
                                    240 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 136: result = (uint16_t) ((InputClockFrequencyMHz * 1000000) / (OutputClockFrequencyHz * 3));
      000117 1E 0C            [ 2]  241 	ldw	x, (0x0c, sp)
      000119 89               [ 2]  242 	pushw	x
      00011A 1E 0C            [ 2]  243 	ldw	x, (0x0c, sp)
      00011C 89               [ 2]  244 	pushw	x
      00011D 4B 03            [ 1]  245 	push	#0x03
      00011F 5F               [ 1]  246 	clrw	x
      000120 89               [ 2]  247 	pushw	x
      000121 4B 00            [ 1]  248 	push	#0x00
      000123 CDr00r00         [ 4]  249 	call	__mullong
      000126 5B 08            [ 2]  250 	addw	sp, #8
      000128 89               [ 2]  251 	pushw	x
      000129 90 89            [ 2]  252 	pushw	y
      00012B 1E 07            [ 2]  253 	ldw	x, (0x07, sp)
      00012D 89               [ 2]  254 	pushw	x
      00012E 1E 07            [ 2]  255 	ldw	x, (0x07, sp)
      000130 89               [ 2]  256 	pushw	x
      000131 CDr00r00         [ 4]  257 	call	__divulong
      000134 5B 08            [ 2]  258 	addw	sp, #8
      000136 20 26            [ 2]  259 	jra	00103$
      000138                        260 00102$:
                                    261 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 141: result = (uint16_t) ((InputClockFrequencyMHz * 1000000) / (OutputClockFrequencyHz * 25));
      000138 1E 0C            [ 2]  262 	ldw	x, (0x0c, sp)
      00013A 89               [ 2]  263 	pushw	x
      00013B 1E 0C            [ 2]  264 	ldw	x, (0x0c, sp)
      00013D 89               [ 2]  265 	pushw	x
      00013E 4B 19            [ 1]  266 	push	#0x19
      000140 5F               [ 1]  267 	clrw	x
      000141 89               [ 2]  268 	pushw	x
      000142 4B 00            [ 1]  269 	push	#0x00
      000144 CDr00r00         [ 4]  270 	call	__mullong
      000147 5B 08            [ 2]  271 	addw	sp, #8
      000149 9F               [ 1]  272 	ld	a, xl
      00014A 88               [ 1]  273 	push	a
      00014B 9E               [ 1]  274 	ld	a, xh
      00014C 88               [ 1]  275 	push	a
      00014D 90 89            [ 2]  276 	pushw	y
      00014F 1E 07            [ 2]  277 	ldw	x, (0x07, sp)
      000151 89               [ 2]  278 	pushw	x
      000152 1E 07            [ 2]  279 	ldw	x, (0x07, sp)
      000154 89               [ 2]  280 	pushw	x
      000155 CDr00r00         [ 4]  281 	call	__divulong
      000158 5B 08            [ 2]  282 	addw	sp, #8
                                    283 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 143: tmpccrh |= I2C_CCRH_DUTY;
      00015A A6 C0            [ 1]  284 	ld	a, #0xc0
      00015C 6B 05            [ 1]  285 	ld	(0x05, sp), a
      00015E                        286 00103$:
                                    287 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 147: if (result < (uint16_t)0x01)
      00015E A3 00 01         [ 2]  288 	cpw	x, #0x0001
      000161 24 02            [ 1]  289 	jrnc	00105$
                                    290 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 150: result = (uint16_t)0x0001;
      000163 5F               [ 1]  291 	clrw	x
      000164 5C               [ 1]  292 	incw	x
      000165                        293 00105$:
                                    294 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 156: tmpval = ((InputClockFrequencyMHz * 3) / 10) + 1;
      000165 7B 13            [ 1]  295 	ld	a, (0x13, sp)
      000167 6B 07            [ 1]  296 	ld	(0x07, sp), a
      000169 0F 06            [ 1]  297 	clr	(0x06, sp)
      00016B 89               [ 2]  298 	pushw	x
      00016C 1E 08            [ 2]  299 	ldw	x, (0x08, sp)
      00016E 58               [ 2]  300 	sllw	x
      00016F 72 FB 08         [ 2]  301 	addw	x, (0x08, sp)
      000172 51               [ 1]  302 	exgw	x, y
      000173 4B 0A            [ 1]  303 	push	#0x0a
      000175 4B 00            [ 1]  304 	push	#0x00
      000177 93               [ 1]  305 	ldw	x, y
      000178 CDr00r00         [ 4]  306 	call	__divsint
      00017B 90 93            [ 1]  307 	ldw	y, x
      00017D 9F               [ 1]  308 	ld	a, xl
      00017E 85               [ 2]  309 	popw	x
      00017F 4C               [ 1]  310 	inc	a
                                    311 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 157: I2C->TRISER = (uint8_t)tmpval;
      000180 C7 52 1D         [ 1]  312 	ld	0x521d, a
      000183 20 23            [ 2]  313 	jra	00110$
      000185                        314 00109$:
                                    315 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 164: result = (uint16_t)((InputClockFrequencyMHz * 1000000) / (OutputClockFrequencyHz << (uint8_t)1));
      000185 1E 0C            [ 2]  316 	ldw	x, (0x0c, sp)
      000187 16 0A            [ 2]  317 	ldw	y, (0x0a, sp)
      000189 58               [ 2]  318 	sllw	x
      00018A 90 59            [ 2]  319 	rlcw	y
      00018C 89               [ 2]  320 	pushw	x
      00018D 90 89            [ 2]  321 	pushw	y
      00018F 1E 07            [ 2]  322 	ldw	x, (0x07, sp)
      000191 89               [ 2]  323 	pushw	x
      000192 1E 07            [ 2]  324 	ldw	x, (0x07, sp)
      000194 89               [ 2]  325 	pushw	x
      000195 CDr00r00         [ 4]  326 	call	__divulong
      000198 5B 08            [ 2]  327 	addw	sp, #8
                                    328 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 167: if (result < (uint16_t)0x0004)
      00019A A3 00 04         [ 2]  329 	cpw	x, #0x0004
      00019D 24 03            [ 1]  330 	jrnc	00107$
                                    331 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 170: result = (uint16_t)0x0004;
      00019F AE 00 04         [ 2]  332 	ldw	x, #0x0004
      0001A2                        333 00107$:
                                    334 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 176: I2C->TRISER = (uint8_t)(InputClockFrequencyMHz + (uint8_t)1);
      0001A2 7B 13            [ 1]  335 	ld	a, (0x13, sp)
      0001A4 4C               [ 1]  336 	inc	a
      0001A5 C7 52 1D         [ 1]  337 	ld	0x521d, a
      0001A8                        338 00110$:
                                    339 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 181: I2C->CCRL = (uint8_t)result;
      0001A8 9F               [ 1]  340 	ld	a, xl
      0001A9 C7 52 1B         [ 1]  341 	ld	0x521b, a
                                    342 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 182: I2C->CCRH = (uint8_t)((uint8_t)((uint8_t)(result >> 8) & I2C_CCRH_CCR) | tmpccrh);
      0001AC 9E               [ 1]  343 	ld	a, xh
      0001AD A4 0F            [ 1]  344 	and	a, #0x0f
      0001AF 1A 05            [ 1]  345 	or	a, (0x05, sp)
      0001B1 C7 52 1C         [ 1]  346 	ld	0x521c, a
                                    347 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 185: I2C->CR1 |= I2C_CR1_PE;
      0001B4 72 10 52 10      [ 1]  348 	bset	0x5210, #0
                                    349 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 188: I2C_AcknowledgeConfig(Ack);
      0001B8 7B 11            [ 1]  350 	ld	a, (0x11, sp)
      0001BA CDr02rD9         [ 4]  351 	call	_I2C_AcknowledgeConfig
                                    352 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 191: I2C->OARL = (uint8_t)(OwnAddress);
      0001BD 7B 0F            [ 1]  353 	ld	a, (0x0f, sp)
      0001BF C7 52 13         [ 1]  354 	ld	0x5213, a
                                    355 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 192: I2C->OARH = (uint8_t)((uint8_t)(AddMode | I2C_OARH_ADDCONF) |
      0001C2 7B 12            [ 1]  356 	ld	a, (0x12, sp)
      0001C4 AA 40            [ 1]  357 	or	a, #0x40
      0001C6 6B 07            [ 1]  358 	ld	(0x07, sp), a
                                    359 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 193: (uint8_t)((OwnAddress & (uint16_t)0x0300) >> (uint8_t)7));
      0001C8 4F               [ 1]  360 	clr	a
      0001C9 97               [ 1]  361 	ld	xl, a
      0001CA 7B 0E            [ 1]  362 	ld	a, (0x0e, sp)
      0001CC A4 03            [ 1]  363 	and	a, #0x03
      0001CE 95               [ 1]  364 	ld	xh, a
      0001CF A6 80            [ 1]  365 	ld	a, #0x80
      0001D1 62               [ 2]  366 	div	x, a
      0001D2 9F               [ 1]  367 	ld	a, xl
      0001D3 1A 07            [ 1]  368 	or	a, (0x07, sp)
      0001D5 C7 52 14         [ 1]  369 	ld	0x5214, a
                                    370 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 194: }
      0001D8 1E 08            [ 2]  371 	ldw	x, (8, sp)
      0001DA 5B 13            [ 2]  372 	addw	sp, #19
      0001DC FC               [ 2]  373 	jp	(x)
                                    374 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 202: void I2C_Cmd(FunctionalState NewState)
                                    375 ;	-----------------------------------------
                                    376 ;	 function I2C_Cmd
                                    377 ;	-----------------------------------------
      0001DD                        378 _I2C_Cmd:
      0001DD 88               [ 1]  379 	push	a
                                    380 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 205: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0001DE 6B 01            [ 1]  381 	ld	(0x01, sp), a
      0001E0 27 10            [ 1]  382 	jreq	00107$
      0001E2 0D 01            [ 1]  383 	tnz	(0x01, sp)
      0001E4 26 0C            [ 1]  384 	jrne	00107$
      0001E6 4B CD            [ 1]  385 	push	#0xcd
      0001E8 5F               [ 1]  386 	clrw	x
      0001E9 89               [ 2]  387 	pushw	x
      0001EA 4B 00            [ 1]  388 	push	#0x00
      0001EC AEr00r00         [ 2]  389 	ldw	x, #(___str_0+0)
      0001EF CDr00r00         [ 4]  390 	call	_assert_failed
      0001F2                        391 00107$:
                                    392 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 210: I2C->CR1 |= I2C_CR1_PE;
      0001F2 C6 52 10         [ 1]  393 	ld	a, 0x5210
                                    394 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 207: if (NewState != DISABLE)
      0001F5 0D 01            [ 1]  395 	tnz	(0x01, sp)
      0001F7 27 07            [ 1]  396 	jreq	00102$
                                    397 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 210: I2C->CR1 |= I2C_CR1_PE;
      0001F9 AA 01            [ 1]  398 	or	a, #0x01
      0001FB C7 52 10         [ 1]  399 	ld	0x5210, a
      0001FE 20 05            [ 2]  400 	jra	00104$
      000200                        401 00102$:
                                    402 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 215: I2C->CR1 &= (uint8_t)(~I2C_CR1_PE);
      000200 A4 FE            [ 1]  403 	and	a, #0xfe
      000202 C7 52 10         [ 1]  404 	ld	0x5210, a
      000205                        405 00104$:
                                    406 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 217: }
      000205 84               [ 1]  407 	pop	a
      000206 81               [ 4]  408 	ret
                                    409 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 225: void I2C_GeneralCallCmd(FunctionalState NewState)
                                    410 ;	-----------------------------------------
                                    411 ;	 function I2C_GeneralCallCmd
                                    412 ;	-----------------------------------------
      000207                        413 _I2C_GeneralCallCmd:
      000207 88               [ 1]  414 	push	a
                                    415 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 228: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000208 6B 01            [ 1]  416 	ld	(0x01, sp), a
      00020A 27 10            [ 1]  417 	jreq	00107$
      00020C 0D 01            [ 1]  418 	tnz	(0x01, sp)
      00020E 26 0C            [ 1]  419 	jrne	00107$
      000210 4B E4            [ 1]  420 	push	#0xe4
      000212 5F               [ 1]  421 	clrw	x
      000213 89               [ 2]  422 	pushw	x
      000214 4B 00            [ 1]  423 	push	#0x00
      000216 AEr00r00         [ 2]  424 	ldw	x, #(___str_0+0)
      000219 CDr00r00         [ 4]  425 	call	_assert_failed
      00021C                        426 00107$:
                                    427 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 233: I2C->CR1 |= I2C_CR1_ENGC;
      00021C C6 52 10         [ 1]  428 	ld	a, 0x5210
                                    429 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 230: if (NewState != DISABLE)
      00021F 0D 01            [ 1]  430 	tnz	(0x01, sp)
      000221 27 07            [ 1]  431 	jreq	00102$
                                    432 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 233: I2C->CR1 |= I2C_CR1_ENGC;
      000223 AA 40            [ 1]  433 	or	a, #0x40
      000225 C7 52 10         [ 1]  434 	ld	0x5210, a
      000228 20 05            [ 2]  435 	jra	00104$
      00022A                        436 00102$:
                                    437 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 238: I2C->CR1 &= (uint8_t)(~I2C_CR1_ENGC);
      00022A A4 BF            [ 1]  438 	and	a, #0xbf
      00022C C7 52 10         [ 1]  439 	ld	0x5210, a
      00022F                        440 00104$:
                                    441 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 240: }
      00022F 84               [ 1]  442 	pop	a
      000230 81               [ 4]  443 	ret
                                    444 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 250: void I2C_GenerateSTART(FunctionalState NewState)
                                    445 ;	-----------------------------------------
                                    446 ;	 function I2C_GenerateSTART
                                    447 ;	-----------------------------------------
      000231                        448 _I2C_GenerateSTART:
      000231 88               [ 1]  449 	push	a
                                    450 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 253: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000232 6B 01            [ 1]  451 	ld	(0x01, sp), a
      000234 27 10            [ 1]  452 	jreq	00107$
      000236 0D 01            [ 1]  453 	tnz	(0x01, sp)
      000238 26 0C            [ 1]  454 	jrne	00107$
      00023A 4B FD            [ 1]  455 	push	#0xfd
      00023C 5F               [ 1]  456 	clrw	x
      00023D 89               [ 2]  457 	pushw	x
      00023E 4B 00            [ 1]  458 	push	#0x00
      000240 AEr00r00         [ 2]  459 	ldw	x, #(___str_0+0)
      000243 CDr00r00         [ 4]  460 	call	_assert_failed
      000246                        461 00107$:
                                    462 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 258: I2C->CR2 |= I2C_CR2_START;
      000246 C6 52 11         [ 1]  463 	ld	a, 0x5211
                                    464 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 255: if (NewState != DISABLE)
      000249 0D 01            [ 1]  465 	tnz	(0x01, sp)
      00024B 27 07            [ 1]  466 	jreq	00102$
                                    467 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 258: I2C->CR2 |= I2C_CR2_START;
      00024D AA 01            [ 1]  468 	or	a, #0x01
      00024F C7 52 11         [ 1]  469 	ld	0x5211, a
      000252 20 05            [ 2]  470 	jra	00104$
      000254                        471 00102$:
                                    472 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 263: I2C->CR2 &= (uint8_t)(~I2C_CR2_START);
      000254 A4 FE            [ 1]  473 	and	a, #0xfe
      000256 C7 52 11         [ 1]  474 	ld	0x5211, a
      000259                        475 00104$:
                                    476 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 265: }
      000259 84               [ 1]  477 	pop	a
      00025A 81               [ 4]  478 	ret
                                    479 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 273: void I2C_GenerateSTOP(FunctionalState NewState)
                                    480 ;	-----------------------------------------
                                    481 ;	 function I2C_GenerateSTOP
                                    482 ;	-----------------------------------------
      00025B                        483 _I2C_GenerateSTOP:
      00025B 88               [ 1]  484 	push	a
                                    485 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 276: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00025C 6B 01            [ 1]  486 	ld	(0x01, sp), a
      00025E 27 10            [ 1]  487 	jreq	00107$
      000260 0D 01            [ 1]  488 	tnz	(0x01, sp)
      000262 26 0C            [ 1]  489 	jrne	00107$
      000264 4B 14            [ 1]  490 	push	#0x14
      000266 4B 01            [ 1]  491 	push	#0x01
      000268 5F               [ 1]  492 	clrw	x
      000269 89               [ 2]  493 	pushw	x
      00026A AEr00r00         [ 2]  494 	ldw	x, #(___str_0+0)
      00026D CDr00r00         [ 4]  495 	call	_assert_failed
      000270                        496 00107$:
                                    497 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 281: I2C->CR2 |= I2C_CR2_STOP;
      000270 C6 52 11         [ 1]  498 	ld	a, 0x5211
                                    499 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 278: if (NewState != DISABLE)
      000273 0D 01            [ 1]  500 	tnz	(0x01, sp)
      000275 27 07            [ 1]  501 	jreq	00102$
                                    502 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 281: I2C->CR2 |= I2C_CR2_STOP;
      000277 AA 02            [ 1]  503 	or	a, #0x02
      000279 C7 52 11         [ 1]  504 	ld	0x5211, a
      00027C 20 05            [ 2]  505 	jra	00104$
      00027E                        506 00102$:
                                    507 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 286: I2C->CR2 &= (uint8_t)(~I2C_CR2_STOP);
      00027E A4 FD            [ 1]  508 	and	a, #0xfd
      000280 C7 52 11         [ 1]  509 	ld	0x5211, a
      000283                        510 00104$:
                                    511 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 288: }
      000283 84               [ 1]  512 	pop	a
      000284 81               [ 4]  513 	ret
                                    514 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 296: void I2C_SoftwareResetCmd(FunctionalState NewState)
                                    515 ;	-----------------------------------------
                                    516 ;	 function I2C_SoftwareResetCmd
                                    517 ;	-----------------------------------------
      000285                        518 _I2C_SoftwareResetCmd:
      000285 88               [ 1]  519 	push	a
                                    520 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 299: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000286 6B 01            [ 1]  521 	ld	(0x01, sp), a
      000288 27 10            [ 1]  522 	jreq	00107$
      00028A 0D 01            [ 1]  523 	tnz	(0x01, sp)
      00028C 26 0C            [ 1]  524 	jrne	00107$
      00028E 4B 2B            [ 1]  525 	push	#0x2b
      000290 4B 01            [ 1]  526 	push	#0x01
      000292 5F               [ 1]  527 	clrw	x
      000293 89               [ 2]  528 	pushw	x
      000294 AEr00r00         [ 2]  529 	ldw	x, #(___str_0+0)
      000297 CDr00r00         [ 4]  530 	call	_assert_failed
      00029A                        531 00107$:
                                    532 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 304: I2C->CR2 |= I2C_CR2_SWRST;
      00029A C6 52 11         [ 1]  533 	ld	a, 0x5211
                                    534 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 301: if (NewState != DISABLE)
      00029D 0D 01            [ 1]  535 	tnz	(0x01, sp)
      00029F 27 07            [ 1]  536 	jreq	00102$
                                    537 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 304: I2C->CR2 |= I2C_CR2_SWRST;
      0002A1 AA 80            [ 1]  538 	or	a, #0x80
      0002A3 C7 52 11         [ 1]  539 	ld	0x5211, a
      0002A6 20 05            [ 2]  540 	jra	00104$
      0002A8                        541 00102$:
                                    542 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 309: I2C->CR2 &= (uint8_t)(~I2C_CR2_SWRST);
      0002A8 A4 7F            [ 1]  543 	and	a, #0x7f
      0002AA C7 52 11         [ 1]  544 	ld	0x5211, a
      0002AD                        545 00104$:
                                    546 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 311: }
      0002AD 84               [ 1]  547 	pop	a
      0002AE 81               [ 4]  548 	ret
                                    549 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 320: void I2C_StretchClockCmd(FunctionalState NewState)
                                    550 ;	-----------------------------------------
                                    551 ;	 function I2C_StretchClockCmd
                                    552 ;	-----------------------------------------
      0002AF                        553 _I2C_StretchClockCmd:
      0002AF 88               [ 1]  554 	push	a
                                    555 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 323: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0002B0 6B 01            [ 1]  556 	ld	(0x01, sp), a
      0002B2 27 10            [ 1]  557 	jreq	00107$
      0002B4 0D 01            [ 1]  558 	tnz	(0x01, sp)
      0002B6 26 0C            [ 1]  559 	jrne	00107$
      0002B8 4B 43            [ 1]  560 	push	#0x43
      0002BA 4B 01            [ 1]  561 	push	#0x01
      0002BC 5F               [ 1]  562 	clrw	x
      0002BD 89               [ 2]  563 	pushw	x
      0002BE AEr00r00         [ 2]  564 	ldw	x, #(___str_0+0)
      0002C1 CDr00r00         [ 4]  565 	call	_assert_failed
      0002C4                        566 00107$:
                                    567 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 328: I2C->CR1 &= (uint8_t)(~I2C_CR1_NOSTRETCH);
      0002C4 C6 52 10         [ 1]  568 	ld	a, 0x5210
                                    569 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 325: if (NewState != DISABLE)
      0002C7 0D 01            [ 1]  570 	tnz	(0x01, sp)
      0002C9 27 07            [ 1]  571 	jreq	00102$
                                    572 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 328: I2C->CR1 &= (uint8_t)(~I2C_CR1_NOSTRETCH);
      0002CB A4 7F            [ 1]  573 	and	a, #0x7f
      0002CD C7 52 10         [ 1]  574 	ld	0x5210, a
      0002D0 20 05            [ 2]  575 	jra	00104$
      0002D2                        576 00102$:
                                    577 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 334: I2C->CR1 |= I2C_CR1_NOSTRETCH;
      0002D2 AA 80            [ 1]  578 	or	a, #0x80
      0002D4 C7 52 10         [ 1]  579 	ld	0x5210, a
      0002D7                        580 00104$:
                                    581 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 336: }
      0002D7 84               [ 1]  582 	pop	a
      0002D8 81               [ 4]  583 	ret
                                    584 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 345: void I2C_AcknowledgeConfig(I2C_Ack_TypeDef Ack)
                                    585 ;	-----------------------------------------
                                    586 ;	 function I2C_AcknowledgeConfig
                                    587 ;	-----------------------------------------
      0002D9                        588 _I2C_AcknowledgeConfig:
                                    589 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 348: assert_param(IS_I2C_ACK_OK(Ack));
      0002D9 97               [ 1]  590 	ld	xl, a
      0002DA 4A               [ 1]  591 	dec	a
      0002DB 26 05            [ 1]  592 	jrne	00153$
      0002DD A6 01            [ 1]  593 	ld	a, #0x01
      0002DF 95               [ 1]  594 	ld	xh, a
      0002E0 20 02            [ 2]  595 	jra	00154$
      0002E2                        596 00153$:
      0002E2 4F               [ 1]  597 	clr	a
      0002E3 95               [ 1]  598 	ld	xh, a
      0002E4                        599 00154$:
      0002E4 9F               [ 1]  600 	ld	a, xl
      0002E5 4D               [ 1]  601 	tnz	a
      0002E6 27 19            [ 1]  602 	jreq	00110$
      0002E8 9E               [ 1]  603 	ld	a, xh
      0002E9 4D               [ 1]  604 	tnz	a
      0002EA 26 15            [ 1]  605 	jrne	00110$
      0002EC 9F               [ 1]  606 	ld	a, xl
      0002ED A1 02            [ 1]  607 	cp	a, #0x02
      0002EF 27 10            [ 1]  608 	jreq	00110$
      0002F1 89               [ 2]  609 	pushw	x
      0002F2 4B 5C            [ 1]  610 	push	#0x5c
      0002F4 4B 01            [ 1]  611 	push	#0x01
      0002F6 4B 00            [ 1]  612 	push	#0x00
      0002F8 4B 00            [ 1]  613 	push	#0x00
      0002FA AEr00r00         [ 2]  614 	ldw	x, #(___str_0+0)
      0002FD CDr00r00         [ 4]  615 	call	_assert_failed
      000300 85               [ 2]  616 	popw	x
      000301                        617 00110$:
                                    618 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 353: I2C->CR2 &= (uint8_t)(~I2C_CR2_ACK);
      000301 C6 52 11         [ 1]  619 	ld	a, 0x5211
                                    620 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 350: if (Ack == I2C_ACK_NONE)
      000304 41               [ 1]  621 	exg	a, xl
      000305 4D               [ 1]  622 	tnz	a
      000306 41               [ 1]  623 	exg	a, xl
      000307 26 06            [ 1]  624 	jrne	00105$
                                    625 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 353: I2C->CR2 &= (uint8_t)(~I2C_CR2_ACK);
      000309 A4 FB            [ 1]  626 	and	a, #0xfb
      00030B C7 52 11         [ 1]  627 	ld	0x5211, a
      00030E 81               [ 4]  628 	ret
      00030F                        629 00105$:
                                    630 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 358: I2C->CR2 |= I2C_CR2_ACK;
      00030F AA 04            [ 1]  631 	or	a, #0x04
      000311 C7 52 11         [ 1]  632 	ld	0x5211, a
                                    633 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 353: I2C->CR2 &= (uint8_t)(~I2C_CR2_ACK);
      000314 C6 52 11         [ 1]  634 	ld	a, 0x5211
                                    635 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 360: if (Ack == I2C_ACK_CURR)
      000317 88               [ 1]  636 	push	a
      000318 9E               [ 1]  637 	ld	a, xh
      000319 4D               [ 1]  638 	tnz	a
      00031A 84               [ 1]  639 	pop	a
      00031B 27 06            [ 1]  640 	jreq	00102$
                                    641 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 363: I2C->CR2 &= (uint8_t)(~I2C_CR2_POS);
      00031D A4 F7            [ 1]  642 	and	a, #0xf7
      00031F C7 52 11         [ 1]  643 	ld	0x5211, a
      000322 81               [ 4]  644 	ret
      000323                        645 00102$:
                                    646 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 368: I2C->CR2 |= I2C_CR2_POS;
      000323 AA 08            [ 1]  647 	or	a, #0x08
      000325 C7 52 11         [ 1]  648 	ld	0x5211, a
                                    649 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 371: }
      000328 81               [ 4]  650 	ret
                                    651 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 381: void I2C_ITConfig(I2C_IT_TypeDef I2C_IT, FunctionalState NewState)
                                    652 ;	-----------------------------------------
                                    653 ;	 function I2C_ITConfig
                                    654 ;	-----------------------------------------
      000329                        655 _I2C_ITConfig:
      000329 88               [ 1]  656 	push	a
                                    657 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 384: assert_param(IS_I2C_INTERRUPT_OK(I2C_IT));
      00032A A1 01            [ 1]  658 	cp	a, #0x01
      00032C 27 26            [ 1]  659 	jreq	00107$
      00032E A1 02            [ 1]  660 	cp	a, #0x02
      000330 27 22            [ 1]  661 	jreq	00107$
      000332 A1 04            [ 1]  662 	cp	a, #0x04
      000334 27 1E            [ 1]  663 	jreq	00107$
      000336 A1 03            [ 1]  664 	cp	a, #0x03
      000338 27 1A            [ 1]  665 	jreq	00107$
      00033A A1 05            [ 1]  666 	cp	a, #0x05
      00033C 27 16            [ 1]  667 	jreq	00107$
      00033E A1 06            [ 1]  668 	cp	a, #0x06
      000340 27 12            [ 1]  669 	jreq	00107$
      000342 A1 07            [ 1]  670 	cp	a, #0x07
      000344 27 0E            [ 1]  671 	jreq	00107$
      000346 88               [ 1]  672 	push	a
      000347 4B 80            [ 1]  673 	push	#0x80
      000349 4B 01            [ 1]  674 	push	#0x01
      00034B 5F               [ 1]  675 	clrw	x
      00034C 89               [ 2]  676 	pushw	x
      00034D AEr00r00         [ 2]  677 	ldw	x, #(___str_0+0)
      000350 CDr00r00         [ 4]  678 	call	_assert_failed
      000353 84               [ 1]  679 	pop	a
      000354                        680 00107$:
                                    681 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 385: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000354 0D 04            [ 1]  682 	tnz	(0x04, sp)
      000356 27 12            [ 1]  683 	jreq	00127$
      000358 0D 04            [ 1]  684 	tnz	(0x04, sp)
      00035A 26 0E            [ 1]  685 	jrne	00127$
      00035C 88               [ 1]  686 	push	a
      00035D 4B 81            [ 1]  687 	push	#0x81
      00035F 4B 01            [ 1]  688 	push	#0x01
      000361 5F               [ 1]  689 	clrw	x
      000362 89               [ 2]  690 	pushw	x
      000363 AEr00r00         [ 2]  691 	ldw	x, #(___str_0+0)
      000366 CDr00r00         [ 4]  692 	call	_assert_failed
      000369 84               [ 1]  693 	pop	a
      00036A                        694 00127$:
                                    695 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 390: I2C->ITR |= (uint8_t)I2C_IT;
      00036A AE 52 1A         [ 2]  696 	ldw	x, #0x521a
      00036D 88               [ 1]  697 	push	a
      00036E F6               [ 1]  698 	ld	a, (x)
      00036F 6B 02            [ 1]  699 	ld	(0x02, sp), a
      000371 84               [ 1]  700 	pop	a
                                    701 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 387: if (NewState != DISABLE)
      000372 0D 04            [ 1]  702 	tnz	(0x04, sp)
      000374 27 07            [ 1]  703 	jreq	00102$
                                    704 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 390: I2C->ITR |= (uint8_t)I2C_IT;
      000376 1A 01            [ 1]  705 	or	a, (0x01, sp)
      000378 C7 52 1A         [ 1]  706 	ld	0x521a, a
      00037B 20 06            [ 2]  707 	jra	00104$
      00037D                        708 00102$:
                                    709 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 395: I2C->ITR &= (uint8_t)(~(uint8_t)I2C_IT);
      00037D 43               [ 1]  710 	cpl	a
      00037E 14 01            [ 1]  711 	and	a, (0x01, sp)
      000380 C7 52 1A         [ 1]  712 	ld	0x521a, a
      000383                        713 00104$:
                                    714 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 397: }
      000383 84               [ 1]  715 	pop	a
      000384 85               [ 2]  716 	popw	x
      000385 84               [ 1]  717 	pop	a
      000386 FC               [ 2]  718 	jp	(x)
                                    719 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 405: void I2C_FastModeDutyCycleConfig(I2C_DutyCycle_TypeDef I2C_DutyCycle)
                                    720 ;	-----------------------------------------
                                    721 ;	 function I2C_FastModeDutyCycleConfig
                                    722 ;	-----------------------------------------
      000387                        723 _I2C_FastModeDutyCycleConfig:
      000387 88               [ 1]  724 	push	a
                                    725 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 408: assert_param(IS_I2C_DUTYCYCLE_OK(I2C_DutyCycle));
      000388 A1 40            [ 1]  726 	cp	a, #0x40
      00038A 26 07            [ 1]  727 	jrne	00133$
      00038C 88               [ 1]  728 	push	a
      00038D A6 01            [ 1]  729 	ld	a, #0x01
      00038F 6B 02            [ 1]  730 	ld	(0x02, sp), a
      000391 84               [ 1]  731 	pop	a
      000392 C5                     732 	.byte 0xc5
      000393                        733 00133$:
      000393 0F 01            [ 1]  734 	clr	(0x01, sp)
      000395                        735 00134$:
      000395 4D               [ 1]  736 	tnz	a
      000396 27 10            [ 1]  737 	jreq	00107$
      000398 0D 01            [ 1]  738 	tnz	(0x01, sp)
      00039A 26 0C            [ 1]  739 	jrne	00107$
      00039C 4B 98            [ 1]  740 	push	#0x98
      00039E 4B 01            [ 1]  741 	push	#0x01
      0003A0 5F               [ 1]  742 	clrw	x
      0003A1 89               [ 2]  743 	pushw	x
      0003A2 AEr00r00         [ 2]  744 	ldw	x, #(___str_0+0)
      0003A5 CDr00r00         [ 4]  745 	call	_assert_failed
      0003A8                        746 00107$:
                                    747 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 413: I2C->CCRH |= I2C_CCRH_DUTY;
      0003A8 C6 52 1C         [ 1]  748 	ld	a, 0x521c
      0003AB 97               [ 1]  749 	ld	xl, a
                                    750 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 410: if (I2C_DutyCycle == I2C_DUTYCYCLE_16_9)
      0003AC 7B 01            [ 1]  751 	ld	a, (0x01, sp)
      0003AE 27 08            [ 1]  752 	jreq	00102$
                                    753 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 413: I2C->CCRH |= I2C_CCRH_DUTY;
      0003B0 9F               [ 1]  754 	ld	a, xl
      0003B1 AA 40            [ 1]  755 	or	a, #0x40
      0003B3 C7 52 1C         [ 1]  756 	ld	0x521c, a
      0003B6 20 06            [ 2]  757 	jra	00104$
      0003B8                        758 00102$:
                                    759 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 418: I2C->CCRH &= (uint8_t)(~I2C_CCRH_DUTY);
      0003B8 9F               [ 1]  760 	ld	a, xl
      0003B9 A4 BF            [ 1]  761 	and	a, #0xbf
      0003BB C7 52 1C         [ 1]  762 	ld	0x521c, a
      0003BE                        763 00104$:
                                    764 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 420: }
      0003BE 84               [ 1]  765 	pop	a
      0003BF 81               [ 4]  766 	ret
                                    767 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 427: uint8_t I2C_ReceiveData(void)
                                    768 ;	-----------------------------------------
                                    769 ;	 function I2C_ReceiveData
                                    770 ;	-----------------------------------------
      0003C0                        771 _I2C_ReceiveData:
                                    772 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 430: return ((uint8_t)I2C->DR);
      0003C0 C6 52 16         [ 1]  773 	ld	a, 0x5216
                                    774 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 431: }
      0003C3 81               [ 4]  775 	ret
                                    776 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 440: void I2C_Send7bitAddress(uint8_t Address, I2C_Direction_TypeDef Direction)
                                    777 ;	-----------------------------------------
                                    778 ;	 function I2C_Send7bitAddress
                                    779 ;	-----------------------------------------
      0003C4                        780 _I2C_Send7bitAddress:
      0003C4 88               [ 1]  781 	push	a
                                    782 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 443: assert_param(IS_I2C_ADDRESS_OK(Address));
      0003C5 A5 01            [ 1]  783 	bcp	a, #0x01
      0003C7 27 0E            [ 1]  784 	jreq	00104$
      0003C9 88               [ 1]  785 	push	a
      0003CA 4B BB            [ 1]  786 	push	#0xbb
      0003CC 4B 01            [ 1]  787 	push	#0x01
      0003CE 5F               [ 1]  788 	clrw	x
      0003CF 89               [ 2]  789 	pushw	x
      0003D0 AEr00r00         [ 2]  790 	ldw	x, #(___str_0+0)
      0003D3 CDr00r00         [ 4]  791 	call	_assert_failed
      0003D6 84               [ 1]  792 	pop	a
      0003D7                        793 00104$:
                                    794 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 444: assert_param(IS_I2C_DIRECTION_OK(Direction));
      0003D7 0D 04            [ 1]  795 	tnz	(0x04, sp)
      0003D9 27 12            [ 1]  796 	jreq	00106$
      0003DB 0D 04            [ 1]  797 	tnz	(0x04, sp)
      0003DD 26 0E            [ 1]  798 	jrne	00106$
      0003DF 88               [ 1]  799 	push	a
      0003E0 4B BC            [ 1]  800 	push	#0xbc
      0003E2 4B 01            [ 1]  801 	push	#0x01
      0003E4 5F               [ 1]  802 	clrw	x
      0003E5 89               [ 2]  803 	pushw	x
      0003E6 AEr00r00         [ 2]  804 	ldw	x, #(___str_0+0)
      0003E9 CDr00r00         [ 4]  805 	call	_assert_failed
      0003EC 84               [ 1]  806 	pop	a
      0003ED                        807 00106$:
                                    808 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 447: Address &= (uint8_t)0xFE;
      0003ED A4 FE            [ 1]  809 	and	a, #0xfe
      0003EF 6B 01            [ 1]  810 	ld	(0x01, sp), a
                                    811 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 450: I2C->DR = (uint8_t)(Address | (uint8_t)Direction);
      0003F1 7B 04            [ 1]  812 	ld	a, (0x04, sp)
      0003F3 1A 01            [ 1]  813 	or	a, (0x01, sp)
      0003F5 C7 52 16         [ 1]  814 	ld	0x5216, a
                                    815 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 451: }
      0003F8 84               [ 1]  816 	pop	a
      0003F9 85               [ 2]  817 	popw	x
      0003FA 84               [ 1]  818 	pop	a
      0003FB FC               [ 2]  819 	jp	(x)
                                    820 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 458: void I2C_SendData(uint8_t Data)
                                    821 ;	-----------------------------------------
                                    822 ;	 function I2C_SendData
                                    823 ;	-----------------------------------------
      0003FC                        824 _I2C_SendData:
                                    825 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 461: I2C->DR = Data;
      0003FC C7 52 16         [ 1]  826 	ld	0x5216, a
                                    827 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 462: }
      0003FF 81               [ 4]  828 	ret
                                    829 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 578: ErrorStatus I2C_CheckEvent(I2C_Event_TypeDef I2C_Event)
                                    830 ;	-----------------------------------------
                                    831 ;	 function I2C_CheckEvent
                                    832 ;	-----------------------------------------
      000400                        833 _I2C_CheckEvent:
      000400 52 06            [ 2]  834 	sub	sp, #6
                                    835 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 580: __IO uint16_t lastevent = 0x00;
      000402 0F 02            [ 1]  836 	clr	(0x02, sp)
      000404 0F 01            [ 1]  837 	clr	(0x01, sp)
                                    838 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 586: assert_param(IS_I2C_EVENT_OK(I2C_Event));
      000406 A3 00 04         [ 2]  839 	cpw	x, #0x0004
      000409 26 03            [ 1]  840 	jrne	00283$
      00040B A6 01            [ 1]  841 	ld	a, #0x01
      00040D 21                     842 	.byte 0x21
      00040E                        843 00283$:
      00040E 4F               [ 1]  844 	clr	a
      00040F                        845 00284$:
      00040F A3 06 82         [ 2]  846 	cpw	x, #0x0682
      000412 27 5B            [ 1]  847 	jreq	00110$
      000414 A3 02 02         [ 2]  848 	cpw	x, #0x0202
      000417 27 56            [ 1]  849 	jreq	00110$
      000419 A3 12 00         [ 2]  850 	cpw	x, #0x1200
      00041C 27 51            [ 1]  851 	jreq	00110$
      00041E A3 02 40         [ 2]  852 	cpw	x, #0x0240
      000421 27 4C            [ 1]  853 	jreq	00110$
      000423 A3 03 50         [ 2]  854 	cpw	x, #0x0350
      000426 27 47            [ 1]  855 	jreq	00110$
      000428 A3 06 84         [ 2]  856 	cpw	x, #0x0684
      00042B 27 42            [ 1]  857 	jreq	00110$
      00042D A3 07 94         [ 2]  858 	cpw	x, #0x0794
      000430 27 3D            [ 1]  859 	jreq	00110$
      000432 4D               [ 1]  860 	tnz	a
      000433 26 3A            [ 1]  861 	jrne	00110$
      000435 A3 00 10         [ 2]  862 	cpw	x, #0x0010
      000438 27 35            [ 1]  863 	jreq	00110$
      00043A A3 03 01         [ 2]  864 	cpw	x, #0x0301
      00043D 27 30            [ 1]  865 	jreq	00110$
      00043F A3 07 82         [ 2]  866 	cpw	x, #0x0782
      000442 27 2B            [ 1]  867 	jreq	00110$
      000444 A3 03 02         [ 2]  868 	cpw	x, #0x0302
      000447 27 26            [ 1]  869 	jreq	00110$
      000449 A3 03 40         [ 2]  870 	cpw	x, #0x0340
      00044C 27 21            [ 1]  871 	jreq	00110$
      00044E A3 07 84         [ 2]  872 	cpw	x, #0x0784
      000451 27 1C            [ 1]  873 	jreq	00110$
      000453 A3 07 80         [ 2]  874 	cpw	x, #0x0780
      000456 27 17            [ 1]  875 	jreq	00110$
      000458 A3 03 08         [ 2]  876 	cpw	x, #0x0308
      00045B 27 12            [ 1]  877 	jreq	00110$
      00045D 88               [ 1]  878 	push	a
      00045E 89               [ 2]  879 	pushw	x
      00045F 4B 4A            [ 1]  880 	push	#0x4a
      000461 4B 02            [ 1]  881 	push	#0x02
      000463 4B 00            [ 1]  882 	push	#0x00
      000465 4B 00            [ 1]  883 	push	#0x00
      000467 AEr00r00         [ 2]  884 	ldw	x, #(___str_0+0)
      00046A CDr00r00         [ 4]  885 	call	_assert_failed
      00046D 85               [ 2]  886 	popw	x
      00046E 84               [ 1]  887 	pop	a
      00046F                        888 00110$:
                                    889 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 588: if (I2C_Event == I2C_EVENT_SLAVE_ACK_FAILURE)
      00046F 4D               [ 1]  890 	tnz	a
      000470 27 0D            [ 1]  891 	jreq	00102$
                                    892 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 590: lastevent = I2C->SR2 & I2C_SR2_AF;
      000472 C6 52 18         [ 1]  893 	ld	a, 0x5218
      000475 A4 04            [ 1]  894 	and	a, #0x04
      000477 0F 05            [ 1]  895 	clr	(0x05, sp)
      000479 6B 02            [ 1]  896 	ld	(0x02, sp), a
      00047B 0F 01            [ 1]  897 	clr	(0x01, sp)
      00047D 20 10            [ 2]  898 	jra	00103$
      00047F                        899 00102$:
                                    900 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 594: flag1 = I2C->SR1;
      00047F C6 52 17         [ 1]  901 	ld	a, 0x5217
      000482 90 97            [ 1]  902 	ld	yl, a
                                    903 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 595: flag2 = I2C->SR3;
      000484 C6 52 19         [ 1]  904 	ld	a, 0x5219
                                    905 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 596: lastevent = ((uint16_t)((uint16_t)flag2 << (uint16_t)8) | (uint16_t)flag1);
      000487 90 95            [ 1]  906 	ld	yh, a
      000489 0F 04            [ 1]  907 	clr	(0x04, sp)
      00048B 0F 05            [ 1]  908 	clr	(0x05, sp)
      00048D 17 01            [ 2]  909 	ldw	(0x01, sp), y
      00048F                        910 00103$:
                                    911 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 599: if (((uint16_t)lastevent & (uint16_t)I2C_Event) == (uint16_t)I2C_Event)
      00048F 9F               [ 1]  912 	ld	a, xl
      000490 14 02            [ 1]  913 	and	a, (0x02, sp)
      000492 6B 06            [ 1]  914 	ld	(0x06, sp), a
      000494 9E               [ 1]  915 	ld	a, xh
      000495 14 01            [ 1]  916 	and	a, (0x01, sp)
      000497 6B 05            [ 1]  917 	ld	(0x05, sp), a
      000499 13 05            [ 2]  918 	cpw	x, (0x05, sp)
      00049B 26 03            [ 1]  919 	jrne	00105$
                                    920 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 602: status = SUCCESS;
      00049D A6 01            [ 1]  921 	ld	a, #0x01
                                    922 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 607: status = ERROR;
      00049F 21                     923 	.byte 0x21
      0004A0                        924 00105$:
      0004A0 4F               [ 1]  925 	clr	a
      0004A1                        926 00106$:
                                    927 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 611: return status;
                                    928 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 612: }
      0004A1 5B 06            [ 2]  929 	addw	sp, #6
      0004A3 81               [ 4]  930 	ret
                                    931 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 628: I2C_Event_TypeDef I2C_GetLastEvent(void)
                                    932 ;	-----------------------------------------
                                    933 ;	 function I2C_GetLastEvent
                                    934 ;	-----------------------------------------
      0004A4                        935 _I2C_GetLastEvent:
      0004A4 52 04            [ 2]  936 	sub	sp, #4
                                    937 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 630: __IO uint16_t lastevent = 0;
      0004A6 5F               [ 1]  938 	clrw	x
      0004A7 1F 01            [ 2]  939 	ldw	(0x01, sp), x
                                    940 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 634: if ((I2C->SR2 & I2C_SR2_AF) != 0x00)
      0004A9 72 05 52 18 07   [ 2]  941 	btjf	0x5218, #2, 00102$
                                    942 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 636: lastevent = I2C_EVENT_SLAVE_ACK_FAILURE;
      0004AE AE 00 04         [ 2]  943 	ldw	x, #0x0004
      0004B1 1F 01            [ 2]  944 	ldw	(0x01, sp), x
      0004B3 20 0C            [ 2]  945 	jra	00103$
      0004B5                        946 00102$:
                                    947 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 641: flag1 = I2C->SR1;
      0004B5 C6 52 17         [ 1]  948 	ld	a, 0x5217
      0004B8 97               [ 1]  949 	ld	xl, a
                                    950 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 642: flag2 = I2C->SR3;
      0004B9 C6 52 19         [ 1]  951 	ld	a, 0x5219
      0004BC 95               [ 1]  952 	ld	xh, a
                                    953 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 645: lastevent = ((uint16_t)((uint16_t)flag2 << 8) | (uint16_t)flag1);
      0004BD 0F 04            [ 1]  954 	clr	(0x04, sp)
      0004BF 1F 01            [ 2]  955 	ldw	(0x01, sp), x
      0004C1                        956 00103$:
                                    957 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 648: return (I2C_Event_TypeDef)lastevent;
      0004C1 1E 01            [ 2]  958 	ldw	x, (0x01, sp)
                                    959 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 649: }
      0004C3 5B 04            [ 2]  960 	addw	sp, #4
      0004C5 81               [ 4]  961 	ret
                                    962 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 679: FlagStatus I2C_GetFlagStatus(I2C_Flag_TypeDef I2C_Flag)
                                    963 ;	-----------------------------------------
                                    964 ;	 function I2C_GetFlagStatus
                                    965 ;	-----------------------------------------
      0004C6                        966 _I2C_GetFlagStatus:
      0004C6 52 03            [ 2]  967 	sub	sp, #3
      0004C8 1F 02            [ 2]  968 	ldw	(0x02, sp), x
                                    969 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 681: uint8_t tempreg = 0;
      0004CA 0F 01            [ 1]  970 	clr	(0x01, sp)
                                    971 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 686: assert_param(IS_I2C_FLAG_OK(I2C_Flag));
      0004CC 1E 02            [ 2]  972 	ldw	x, (0x02, sp)
      0004CE A3 01 80         [ 2]  973 	cpw	x, #0x0180
      0004D1 27 5B            [ 1]  974 	jreq	00112$
      0004D3 A3 01 40         [ 2]  975 	cpw	x, #0x0140
      0004D6 27 56            [ 1]  976 	jreq	00112$
      0004D8 A3 01 10         [ 2]  977 	cpw	x, #0x0110
      0004DB 27 51            [ 1]  978 	jreq	00112$
      0004DD A3 01 08         [ 2]  979 	cpw	x, #0x0108
      0004E0 27 4C            [ 1]  980 	jreq	00112$
      0004E2 A3 01 04         [ 2]  981 	cpw	x, #0x0104
      0004E5 27 47            [ 1]  982 	jreq	00112$
      0004E7 A3 01 02         [ 2]  983 	cpw	x, #0x0102
      0004EA 27 42            [ 1]  984 	jreq	00112$
      0004EC A3 01 01         [ 2]  985 	cpw	x, #0x0101
      0004EF 27 3D            [ 1]  986 	jreq	00112$
      0004F1 A3 02 20         [ 2]  987 	cpw	x, #0x0220
      0004F4 27 38            [ 1]  988 	jreq	00112$
      0004F6 A3 02 08         [ 2]  989 	cpw	x, #0x0208
      0004F9 27 33            [ 1]  990 	jreq	00112$
      0004FB A3 02 04         [ 2]  991 	cpw	x, #0x0204
      0004FE 27 2E            [ 1]  992 	jreq	00112$
      000500 A3 02 02         [ 2]  993 	cpw	x, #0x0202
      000503 27 29            [ 1]  994 	jreq	00112$
      000505 A3 02 01         [ 2]  995 	cpw	x, #0x0201
      000508 27 24            [ 1]  996 	jreq	00112$
      00050A A3 03 10         [ 2]  997 	cpw	x, #0x0310
      00050D 27 1F            [ 1]  998 	jreq	00112$
      00050F A3 03 04         [ 2]  999 	cpw	x, #0x0304
      000512 27 1A            [ 1] 1000 	jreq	00112$
      000514 A3 03 02         [ 2] 1001 	cpw	x, #0x0302
      000517 27 15            [ 1] 1002 	jreq	00112$
      000519 A3 03 01         [ 2] 1003 	cpw	x, #0x0301
      00051C 27 10            [ 1] 1004 	jreq	00112$
      00051E 89               [ 2] 1005 	pushw	x
      00051F 4B AE            [ 1] 1006 	push	#0xae
      000521 4B 02            [ 1] 1007 	push	#0x02
      000523 4B 00            [ 1] 1008 	push	#0x00
      000525 4B 00            [ 1] 1009 	push	#0x00
      000527 AEr00r00         [ 2] 1010 	ldw	x, #(___str_0+0)
      00052A CDr00r00         [ 4] 1011 	call	_assert_failed
      00052D 85               [ 2] 1012 	popw	x
      00052E                       1013 00112$:
                                   1014 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 689: regindex = (uint8_t)((uint16_t)I2C_Flag >> 8);
      00052E 9E               [ 1] 1015 	ld	a, xh
                                   1016 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 691: switch (regindex)
      00052F A1 01            [ 1] 1017 	cp	a, #0x01
      000531 27 0A            [ 1] 1018 	jreq	00101$
      000533 A1 02            [ 1] 1019 	cp	a, #0x02
      000535 27 0D            [ 1] 1020 	jreq	00102$
      000537 A1 03            [ 1] 1021 	cp	a, #0x03
      000539 27 10            [ 1] 1022 	jreq	00103$
      00053B 20 13            [ 2] 1023 	jra	00105$
                                   1024 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 694: case 0x01:
      00053D                       1025 00101$:
                                   1026 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 695: tempreg = (uint8_t)I2C->SR1;
      00053D C6 52 17         [ 1] 1027 	ld	a, 0x5217
      000540 6B 01            [ 1] 1028 	ld	(0x01, sp), a
                                   1029 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 696: break;
      000542 20 0C            [ 2] 1030 	jra	00105$
                                   1031 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 699: case 0x02:
      000544                       1032 00102$:
                                   1033 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 700: tempreg = (uint8_t)I2C->SR2;
      000544 C6 52 18         [ 1] 1034 	ld	a, 0x5218
      000547 6B 01            [ 1] 1035 	ld	(0x01, sp), a
                                   1036 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 701: break;
      000549 20 05            [ 2] 1037 	jra	00105$
                                   1038 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 704: case 0x03:
      00054B                       1039 00103$:
                                   1040 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 705: tempreg = (uint8_t)I2C->SR3;
      00054B C6 52 19         [ 1] 1041 	ld	a, 0x5219
      00054E 6B 01            [ 1] 1042 	ld	(0x01, sp), a
                                   1043 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 710: }
      000550                       1044 00105$:
                                   1045 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 713: if ((tempreg & (uint8_t)I2C_Flag ) != 0)
      000550 7B 03            [ 1] 1046 	ld	a, (0x03, sp)
      000552 14 01            [ 1] 1047 	and	a, (0x01, sp)
      000554 27 03            [ 1] 1048 	jreq	00107$
                                   1049 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 716: bitstatus = SET;
      000556 A6 01            [ 1] 1050 	ld	a, #0x01
                                   1051 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 721: bitstatus = RESET;
      000558 21                    1052 	.byte 0x21
      000559                       1053 00107$:
      000559 4F               [ 1] 1054 	clr	a
      00055A                       1055 00108$:
                                   1056 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 724: return bitstatus;
                                   1057 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 725: }
      00055A 5B 03            [ 2] 1058 	addw	sp, #3
      00055C 81               [ 4] 1059 	ret
                                   1060 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 759: void I2C_ClearFlag(I2C_Flag_TypeDef I2C_FLAG)
                                   1061 ;	-----------------------------------------
                                   1062 ;	 function I2C_ClearFlag
                                   1063 ;	-----------------------------------------
      00055D                       1064 _I2C_ClearFlag:
                                   1065 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 763: assert_param(IS_I2C_CLEAR_FLAG_OK(I2C_FLAG));
      00055D 9E               [ 1] 1066 	ld	a, xh
      00055E A5 FD            [ 1] 1067 	bcp	a, #0xfd
      000560 26 03            [ 1] 1068 	jrne	00103$
      000562 5D               [ 2] 1069 	tnzw	x
      000563 26 10            [ 1] 1070 	jrne	00104$
      000565                       1071 00103$:
      000565 89               [ 2] 1072 	pushw	x
      000566 4B FB            [ 1] 1073 	push	#0xfb
      000568 4B 02            [ 1] 1074 	push	#0x02
      00056A 4B 00            [ 1] 1075 	push	#0x00
      00056C 4B 00            [ 1] 1076 	push	#0x00
      00056E AEr00r00         [ 2] 1077 	ldw	x, #(___str_0+0)
      000571 CDr00r00         [ 4] 1078 	call	_assert_failed
      000574 85               [ 2] 1079 	popw	x
      000575                       1080 00104$:
                                   1081 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 766: flagpos = (uint16_t)I2C_FLAG & FLAG_Mask;
      000575 4F               [ 1] 1082 	clr	a
      000576 95               [ 1] 1083 	ld	xh, a
                                   1084 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 768: I2C->SR2 = (uint8_t)((uint16_t)(~flagpos));
      000577 53               [ 2] 1085 	cplw	x
      000578 9F               [ 1] 1086 	ld	a, xl
      000579 C7 52 18         [ 1] 1087 	ld	0x5218, a
                                   1088 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 769: }
      00057C 81               [ 4] 1089 	ret
                                   1090 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 791: ITStatus I2C_GetITStatus(I2C_ITPendingBit_TypeDef I2C_ITPendingBit)
                                   1091 ;	-----------------------------------------
                                   1092 ;	 function I2C_GetITStatus
                                   1093 ;	-----------------------------------------
      00057D                       1094 _I2C_GetITStatus:
      00057D 52 06            [ 2] 1095 	sub	sp, #6
      00057F 1F 05            [ 2] 1096 	ldw	(0x05, sp), x
                                   1097 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 794: __IO uint8_t enablestatus = 0;
      000581 0F 03            [ 1] 1098 	clr	(0x03, sp)
                                   1099 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 798: assert_param(IS_I2C_ITPENDINGBIT_OK(I2C_ITPendingBit));
      000583 1E 05            [ 2] 1100 	ldw	x, (0x05, sp)
      000585 A3 16 80         [ 2] 1101 	cpw	x, #0x1680
      000588 27 47            [ 1] 1102 	jreq	00115$
      00058A A3 16 40         [ 2] 1103 	cpw	x, #0x1640
      00058D 27 42            [ 1] 1104 	jreq	00115$
      00058F A3 12 10         [ 2] 1105 	cpw	x, #0x1210
      000592 27 3D            [ 1] 1106 	jreq	00115$
      000594 A3 12 08         [ 2] 1107 	cpw	x, #0x1208
      000597 27 38            [ 1] 1108 	jreq	00115$
      000599 A3 12 04         [ 2] 1109 	cpw	x, #0x1204
      00059C 27 33            [ 1] 1110 	jreq	00115$
      00059E A3 12 02         [ 2] 1111 	cpw	x, #0x1202
      0005A1 27 2E            [ 1] 1112 	jreq	00115$
      0005A3 A3 12 01         [ 2] 1113 	cpw	x, #0x1201
      0005A6 27 29            [ 1] 1114 	jreq	00115$
      0005A8 A3 22 20         [ 2] 1115 	cpw	x, #0x2220
      0005AB 27 24            [ 1] 1116 	jreq	00115$
      0005AD A3 21 08         [ 2] 1117 	cpw	x, #0x2108
      0005B0 27 1F            [ 1] 1118 	jreq	00115$
      0005B2 A3 21 04         [ 2] 1119 	cpw	x, #0x2104
      0005B5 27 1A            [ 1] 1120 	jreq	00115$
      0005B7 A3 21 02         [ 2] 1121 	cpw	x, #0x2102
      0005BA 27 15            [ 1] 1122 	jreq	00115$
      0005BC A3 21 01         [ 2] 1123 	cpw	x, #0x2101
      0005BF 27 10            [ 1] 1124 	jreq	00115$
      0005C1 89               [ 2] 1125 	pushw	x
      0005C2 4B 1E            [ 1] 1126 	push	#0x1e
      0005C4 4B 03            [ 1] 1127 	push	#0x03
      0005C6 4B 00            [ 1] 1128 	push	#0x00
      0005C8 4B 00            [ 1] 1129 	push	#0x00
      0005CA AEr00r00         [ 2] 1130 	ldw	x, #(___str_0+0)
      0005CD CDr00r00         [ 4] 1131 	call	_assert_failed
      0005D0 85               [ 2] 1132 	popw	x
      0005D1                       1133 00115$:
                                   1134 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 800: tempregister = (uint8_t)( ((uint16_t)((uint16_t)I2C_ITPendingBit & ITEN_Mask)) >> 8);
      0005D1 0F 02            [ 1] 1135 	clr	(0x02, sp)
      0005D3 9E               [ 1] 1136 	ld	a, xh
      0005D4 A4 07            [ 1] 1137 	and	a, #0x07
      0005D6 90 97            [ 1] 1138 	ld	yl, a
                                   1139 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 803: enablestatus = (uint8_t)(I2C->ITR & ( uint8_t)tempregister);
      0005D8 C6 52 1A         [ 1] 1140 	ld	a, 0x521a
      0005DB 6B 04            [ 1] 1141 	ld	(0x04, sp), a
      0005DD 90 9F            [ 1] 1142 	ld	a, yl
      0005DF 14 04            [ 1] 1143 	and	a, (0x04, sp)
      0005E1 6B 03            [ 1] 1144 	ld	(0x03, sp), a
                                   1145 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 805: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
      0005E3 4F               [ 1] 1146 	clr	a
      0005E4 02               [ 1] 1147 	rlwa	x
      0005E5 A4 30            [ 1] 1148 	and	a, #0x30
      0005E7 95               [ 1] 1149 	ld	xh, a
                                   1150 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 808: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      0005E8 7B 06            [ 1] 1151 	ld	a, (0x06, sp)
      0005EA 6B 04            [ 1] 1152 	ld	(0x04, sp), a
                                   1153 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 805: if ((uint16_t)((uint16_t)I2C_ITPendingBit & REGISTER_Mask) == REGISTER_SR1_Index)
      0005EC A3 01 00         [ 2] 1154 	cpw	x, #0x0100
      0005EF 26 12            [ 1] 1155 	jrne	00110$
                                   1156 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 808: if (((I2C->SR1 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      0005F1 C6 52 17         [ 1] 1157 	ld	a, 0x5217
      0005F4 14 04            [ 1] 1158 	and	a, (0x04, sp)
      0005F6 27 08            [ 1] 1159 	jreq	00102$
      0005F8 0D 03            [ 1] 1160 	tnz	(0x03, sp)
      0005FA 27 04            [ 1] 1161 	jreq	00102$
                                   1162 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 811: bitstatus = SET;
      0005FC A6 01            [ 1] 1163 	ld	a, #0x01
      0005FE 20 12            [ 2] 1164 	jra	00111$
      000600                       1165 00102$:
                                   1166 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 816: bitstatus = RESET;
      000600 4F               [ 1] 1167 	clr	a
      000601 20 0F            [ 2] 1168 	jra	00111$
      000603                       1169 00110$:
                                   1170 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 822: if (((I2C->SR2 & (uint8_t)I2C_ITPendingBit) != RESET) && enablestatus)
      000603 C6 52 18         [ 1] 1171 	ld	a, 0x5218
      000606 14 04            [ 1] 1172 	and	a, (0x04, sp)
      000608 27 07            [ 1] 1173 	jreq	00106$
      00060A 0D 03            [ 1] 1174 	tnz	(0x03, sp)
      00060C 27 03            [ 1] 1175 	jreq	00106$
                                   1176 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 825: bitstatus = SET;
      00060E A6 01            [ 1] 1177 	ld	a, #0x01
                                   1178 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 830: bitstatus = RESET;
      000610 21                    1179 	.byte 0x21
      000611                       1180 00106$:
      000611 4F               [ 1] 1181 	clr	a
      000612                       1182 00111$:
                                   1183 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 834: return  bitstatus;
                                   1184 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 835: }
      000612 5B 06            [ 2] 1185 	addw	sp, #6
      000614 81               [ 4] 1186 	ret
                                   1187 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 871: void I2C_ClearITPendingBit(I2C_ITPendingBit_TypeDef I2C_ITPendingBit)
                                   1188 ;	-----------------------------------------
                                   1189 ;	 function I2C_ClearITPendingBit
                                   1190 ;	-----------------------------------------
      000615                       1191 _I2C_ClearITPendingBit:
                                   1192 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 876: assert_param(IS_I2C_CLEAR_ITPENDINGBIT_OK(I2C_ITPendingBit));
      000615 A3 22 20         [ 2] 1193 	cpw	x, #0x2220
      000618 27 24            [ 1] 1194 	jreq	00104$
      00061A A3 21 08         [ 2] 1195 	cpw	x, #0x2108
      00061D 27 1F            [ 1] 1196 	jreq	00104$
      00061F A3 21 04         [ 2] 1197 	cpw	x, #0x2104
      000622 27 1A            [ 1] 1198 	jreq	00104$
      000624 A3 21 02         [ 2] 1199 	cpw	x, #0x2102
      000627 27 15            [ 1] 1200 	jreq	00104$
      000629 A3 21 01         [ 2] 1201 	cpw	x, #0x2101
      00062C 27 10            [ 1] 1202 	jreq	00104$
      00062E 89               [ 2] 1203 	pushw	x
      00062F 4B 6C            [ 1] 1204 	push	#0x6c
      000631 4B 03            [ 1] 1205 	push	#0x03
      000633 4B 00            [ 1] 1206 	push	#0x00
      000635 4B 00            [ 1] 1207 	push	#0x00
      000637 AEr00r00         [ 2] 1208 	ldw	x, #(___str_0+0)
      00063A CDr00r00         [ 4] 1209 	call	_assert_failed
      00063D 85               [ 2] 1210 	popw	x
      00063E                       1211 00104$:
                                   1212 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 879: flagpos = (uint16_t)I2C_ITPendingBit & FLAG_Mask;
      00063E 4F               [ 1] 1213 	clr	a
      00063F 95               [ 1] 1214 	ld	xh, a
                                   1215 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 882: I2C->SR2 = (uint8_t)((uint16_t)~flagpos);
      000640 53               [ 2] 1216 	cplw	x
      000641 9F               [ 1] 1217 	ld	a, xl
      000642 C7 52 18         [ 1] 1218 	ld	0x5218, a
                                   1219 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_i2c.c: 883: }
      000645 81               [ 4] 1220 	ret
                                   1221 	.area CODE
                                   1222 	.area CONST
                                   1223 	.area CONST
      000000                       1224 ___str_0:
      000000 2E 2F 53 54 4D 38 53  1225 	.ascii "./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/s"
             5F 53 74 64 50 65 72
             69 70 68 5F 4C 69 62
             2F 4C 69 62 72 61 72
             69 65 73 2F 53 54 4D
             38 53 5F 53 74 64 50
             65 72 69 70 68 5F 44
             72 69 76 65 72 2F 73
             72 63 2F 73
      00003C 74 6D 38 73 5F 69 32  1226 	.ascii "tm8s_i2c.c"
             63 2E 63
      000046 00                    1227 	.db 0x00
                                   1228 	.area CODE
                                   1229 	.area INITIALIZER
                                   1230 	.area CABS (ABS)
