                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.0 #14184 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module usb
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _usb_endpoin0_descriptor
                                     12 	.globl _usb_interface_descriptor
                                     13 	.globl _usb_configuration_descriptor
                                     14 	.globl _usb_device_descriptor
                                     15 	.globl _software_reset
                                     16 	.globl _exit_irqhandler
                                     17 	.globl _usb_device_service
                                     18 	.globl _EXIT_PORTC_IRQHandler
                                     19 	.globl _usb_device_init
                                     20 	.globl _TIM4_SetCounter
                                     21 	.globl _TIM4_Cmd
                                     22 	.globl _TIM4_TimeBaseInit
                                     23 	.globl _ITC_SetSoftwarePriority
                                     24 	.globl _GPIO_ReadInputData
                                     25 	.globl _GPIO_Init
                                     26 	.globl _EXTI_SetExtIntSensitivity
                                     27 	.globl _CLK_ClockSwitchConfig
                                     28 	.globl _CLK_HSECmd
                                     29 	.globl _usb_bit_state
                                     30 	.globl _usb_tx_buf
                                     31 	.globl _UsbBitStateEnum
                                     32 ;--------------------------------------------------------
                                     33 ; ram data
                                     34 ;--------------------------------------------------------
                                     35 	.area DATA
      000000                         36 _UsbBitStateEnum::
      000000                         37 	.ds 1
      000001                         38 _usb_tx_buf::
      000001                         39 	.ds 12
                                     40 ;--------------------------------------------------------
                                     41 ; ram data
                                     42 ;--------------------------------------------------------
                                     43 	.area INITIALIZED
      000000                         44 _usb_bit_state::
      000000                         45 	.ds 2
                                     46 ;--------------------------------------------------------
                                     47 ; absolute external ram data
                                     48 ;--------------------------------------------------------
                                     49 	.area DABS (ABS)
                                     50 
                                     51 ; default segment ordering for linker
                                     52 	.area HOME
                                     53 	.area GSINIT
                                     54 	.area GSFINAL
                                     55 	.area CONST
                                     56 	.area INITIALIZER
                                     57 	.area CODE
                                     58 
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area HOME
                                     63 	.area GSINIT
                                     64 	.area GSFINAL
                                     65 	.area GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area HOME
                                     70 	.area HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area CODE
                                     75 ;	usb.c: 66: void usb_device_init(void)
                                     76 ;	-----------------------------------------
                                     77 ;	 function usb_device_init
                                     78 ;	-----------------------------------------
      000000                         79 _usb_device_init:
                                     80 ;	usb.c: 69: sim();
      000000 9B               [ 1]   81 	sim
                                     82 ;	usb.c: 71: CLK_HSECmd(ENABLE);
      000001 A6 01            [ 1]   83 	ld	a, #0x01
      000003 CDr00r00         [ 4]   84 	call	_CLK_HSECmd
                                     85 ;	usb.c: 73: CLK_ClockSwitchConfig(CLK_SWITCHMODE_AUTO,CLK_SOURCE_HSE,DISABLE,CLK_CURRENTCLOCKSTATE_DISABLE);//12MHz
      000006 4B 00            [ 1]   86 	push	#0x00
      000008 4B 00            [ 1]   87 	push	#0x00
      00000A 4B B4            [ 1]   88 	push	#0xb4
      00000C A6 01            [ 1]   89 	ld	a, #0x01
      00000E CDr00r00         [ 4]   90 	call	_CLK_ClockSwitchConfig
                                     91 ;	usb.c: 78: ITC_SetSoftwarePriority(ITC_IRQ_PORTC,ITC_PRIORITYLEVEL_3);//最高优先级
      000011 4B 03            [ 1]   92 	push	#0x03
      000013 A6 05            [ 1]   93 	ld	a, #0x05
      000015 CDr00r00         [ 4]   94 	call	_ITC_SetSoftwarePriority
                                     95 ;	usb.c: 81: GPIO_Init(GPIOC,GPIO_PIN_3|GPIO_PIN_4,GPIO_MODE_IN_FL_IT);
      000018 4B 20            [ 1]   96 	push	#0x20
      00001A A6 18            [ 1]   97 	ld	a, #0x18
      00001C AE 50 0A         [ 2]   98 	ldw	x, #0x500a
      00001F CDr00r00         [ 4]   99 	call	_GPIO_Init
                                    100 ;	usb.c: 85: EXTI_SetExtIntSensitivity(EXTI_PORT_GPIOC,EXTI_SENSITIVITY_RISE_FALL);
      000022 4B 03            [ 1]  101 	push	#0x03
      000024 A6 02            [ 1]  102 	ld	a, #0x02
      000026 CDr00r00         [ 4]  103 	call	_EXTI_SetExtIntSensitivity
                                    104 ;	usb.c: 88: TIM4_TimeBaseInit(TIM4_PRESCALER_1,U8_MAX);//最多会出现7个字节的相同电平，7*8=56左右，大于这个值之后就可以认为是传输错误了
      000029 4B FF            [ 1]  105 	push	#0xff
      00002B 4F               [ 1]  106 	clr	a
      00002C CDr00r00         [ 4]  107 	call	_TIM4_TimeBaseInit
                                    108 ;	usb.c: 92: rim();
      00002F 9A               [ 1]  109 	rim
                                    110 ;	usb.c: 93: }
      000030 81               [ 4]  111 	ret
                                    112 ;	usb.c: 97: void EXIT_PORTC_IRQHandler(void) __interrupt(5)
                                    113 ;	-----------------------------------------
                                    114 ;	 function EXIT_PORTC_IRQHandler
                                    115 ;	-----------------------------------------
      000031                        116 _EXIT_PORTC_IRQHandler:
      000031 62               [ 2]  117 	div	x, a
                                    118 ;	usb.c: 101: TIM4_SetCounter(0);//1cycle
      000032 4F               [ 1]  119 	clr	a
      000033 CDr00r00         [ 4]  120 	call	_TIM4_SetCounter
                                    121 ;	usb.c: 102: TIM4_Cmd(ENABLE);//1cycle
      000036 A6 01            [ 1]  122 	ld	a, #0x01
      000038 CDr00r00         [ 4]  123 	call	_TIM4_Cmd
                                    124 ;	usb.c: 104: usb_bit_state=GPIO_ReadInputData(GPIOC)&0b00011000>>3;//?cycle
      00003B AE 50 0A         [ 2]  125 	ldw	x, #0x500a
      00003E CDr00r00         [ 4]  126 	call	_GPIO_ReadInputData
      000041 A4 03            [ 1]  127 	and	a, #0x03
      000043 5F               [ 1]  128 	clrw	x
      000044 97               [ 1]  129 	ld	xl, a
      000045 CFu00u00         [ 2]  130 	ldw	_usb_bit_state+0, x
                                    131 ;	usb.c: 105: TIM4->CNTR=0;
      000048 35 00 53 46      [ 1]  132 	mov	0x5346+0, #0x00
                                    133 ;	usb.c: 106: }
      00004C 80               [11]  134 	iret
                                    135 ;	usb.c: 108: void usb_device_service(void)
                                    136 ;	-----------------------------------------
                                    137 ;	 function usb_device_service
                                    138 ;	-----------------------------------------
      00004D                        139 _usb_device_service:
                                    140 ;	usb.c: 111: }
      00004D 81               [ 4]  141 	ret
                                    142 ;	usb.c: 113: void exit_irqhandler(void)
                                    143 ;	-----------------------------------------
                                    144 ;	 function exit_irqhandler
                                    145 ;	-----------------------------------------
      00004E                        146 _exit_irqhandler:
                                    147 ;	usb.c: 118: }
      00004E 81               [ 4]  148 	ret
                                    149 ;	usb.c: 120: void software_reset(void)
                                    150 ;	-----------------------------------------
                                    151 ;	 function software_reset
                                    152 ;	-----------------------------------------
      00004F                        153 _software_reset:
                                    154 ;	usb.c: 122: usb_tx_buf[0]=2;
      00004F 35 02u00u01      [ 1]  155 	mov	_usb_tx_buf+0, #0x02
                                    156 ;	usb.c: 123: WWDG->CR=0x80;//使能WDGA同时清除T6触发复位
      000053 35 80 50 D1      [ 1]  157 	mov	0x50d1+0, #0x80
                                    158 ;	usb.c: 124: }
      000057 81               [ 4]  159 	ret
                                    160 	.area CODE
                                    161 	.area CONST
      000000                        162 _usb_device_descriptor:
      000000 12                     163 	.db #0x12	; 18
      000001 01                     164 	.db #0x01	; 1
      000002 01 10                  165 	.dw #0x0110
      000004 01                     166 	.db #0x01	; 1
      000005 00                     167 	.db #0x00	; 0
      000006 00                     168 	.db #0x00	; 0
      000007 08                     169 	.db #0x08	; 8
      000008 07 CD                  170 	.dw #0x07cd
      00000A 01 96                  171 	.dw #0x0196
      00000C 00 01                  172 	.dw #0x0001
      00000E 00                     173 	.db #0x00	; 0
      00000F 00                     174 	.db #0x00	; 0
      000010 00                     175 	.db #0x00	; 0
      000011 01                     176 	.db #0x01	; 1
      000012                        177 _usb_configuration_descriptor:
      000012 09                     178 	.db #0x09	; 9
      000013 02                     179 	.db #0x02	; 2
      000014 00 01                  180 	.dw #0x0001
      000016 01                     181 	.db #0x01	; 1
      000017 01                     182 	.db #0x01	; 1
      000018 00                     183 	.db #0x00	; 0
      000019 C0                     184 	.db #0xc0	; 192
      00001A 32                     185 	.db #0x32	; 50	'2'
      00001B                        186 _usb_interface_descriptor:
      00001B 09                     187 	.db #0x09	; 9
      00001C 04                     188 	.db #0x04	; 4
      00001D 00                     189 	.db #0x00	; 0
      00001E 00                     190 	.db #0x00	; 0
      00001F 00                     191 	.db #0x00	; 0
      000020 01                     192 	.db #0x01	; 1
      000021 00                     193 	.db #0x00	; 0
      000022 00                     194 	.db #0x00	; 0
      000023 00                     195 	.db #0x00	; 0
      000024                        196 _usb_endpoin0_descriptor:
      000024 07                     197 	.db #0x07	; 7
      000025 05                     198 	.db #0x05	; 5
      000026 00                     199 	.db #0x00	; 0
      000027 00                     200 	.db #0x00	; 0
      000028 00 08                  201 	.dw #0x0008
      00002A 00                     202 	.db #0x00	; 0
                                    203 	.area INITIALIZER
      000000                        204 __xinit__usb_bit_state:
      000000 00 00                  205 	.dw #0x0000
                                    206 	.area CABS (ABS)
