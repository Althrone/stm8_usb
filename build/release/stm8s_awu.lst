                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.3.0 #14184 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_awu
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _TBR_Array
                                     12 	.globl _APR_Array
                                     13 	.globl _assert_failed
                                     14 	.globl _AWU_DeInit
                                     15 	.globl _AWU_Init
                                     16 	.globl _AWU_Cmd
                                     17 	.globl _AWU_LSICalibrationConfig
                                     18 	.globl _AWU_IdleModeEnable
                                     19 	.globl _AWU_GetFlagStatus
                                     20 ;--------------------------------------------------------
                                     21 ; ram data
                                     22 ;--------------------------------------------------------
                                     23 	.area DATA
                                     24 ;--------------------------------------------------------
                                     25 ; ram data
                                     26 ;--------------------------------------------------------
                                     27 	.area INITIALIZED
                                     28 ;--------------------------------------------------------
                                     29 ; absolute external ram data
                                     30 ;--------------------------------------------------------
                                     31 	.area DABS (ABS)
                                     32 
                                     33 ; default segment ordering for linker
                                     34 	.area HOME
                                     35 	.area GSINIT
                                     36 	.area GSFINAL
                                     37 	.area CONST
                                     38 	.area INITIALIZER
                                     39 	.area CODE
                                     40 
                                     41 ;--------------------------------------------------------
                                     42 ; global & static initialisations
                                     43 ;--------------------------------------------------------
                                     44 	.area HOME
                                     45 	.area GSINIT
                                     46 	.area GSFINAL
                                     47 	.area GSINIT
                                     48 ;--------------------------------------------------------
                                     49 ; Home
                                     50 ;--------------------------------------------------------
                                     51 	.area HOME
                                     52 	.area HOME
                                     53 ;--------------------------------------------------------
                                     54 ; code
                                     55 ;--------------------------------------------------------
                                     56 	.area CODE
                                     57 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 73: void AWU_DeInit(void)
                                     58 ;	-----------------------------------------
                                     59 ;	 function AWU_DeInit
                                     60 ;	-----------------------------------------
      000000                         61 _AWU_DeInit:
                                     62 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 75: AWU->CSR = AWU_CSR_RESET_VALUE;
      000000 35 00 50 F0      [ 1]   63 	mov	0x50f0+0, #0x00
                                     64 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 76: AWU->APR = AWU_APR_RESET_VALUE;
      000004 35 3F 50 F1      [ 1]   65 	mov	0x50f1+0, #0x3f
                                     66 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 77: AWU->TBR = AWU_TBR_RESET_VALUE;
      000008 35 00 50 F2      [ 1]   67 	mov	0x50f2+0, #0x00
                                     68 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 78: }
      00000C 81               [ 4]   69 	ret
                                     70 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 88: void AWU_Init(AWU_Timebase_TypeDef AWU_TimeBase)
                                     71 ;	-----------------------------------------
                                     72 ;	 function AWU_Init
                                     73 ;	-----------------------------------------
      00000D                         74 _AWU_Init:
      00000D 88               [ 1]   75 	push	a
                                     76 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 91: assert_param(IS_AWU_TIMEBASE_OK(AWU_TimeBase));
      00000E 97               [ 1]   77 	ld	xl, a
      00000F 4D               [ 1]   78 	tnz	a
      000010 27 63            [ 1]   79 	jreq	00104$
      000012 9F               [ 1]   80 	ld	a, xl
      000013 4A               [ 1]   81 	dec	a
      000014 27 5F            [ 1]   82 	jreq	00104$
      000016 9F               [ 1]   83 	ld	a, xl
      000017 A1 02            [ 1]   84 	cp	a, #0x02
      000019 27 5A            [ 1]   85 	jreq	00104$
      00001B 9F               [ 1]   86 	ld	a, xl
      00001C A1 03            [ 1]   87 	cp	a, #0x03
      00001E 27 55            [ 1]   88 	jreq	00104$
      000020 9F               [ 1]   89 	ld	a, xl
      000021 A1 04            [ 1]   90 	cp	a, #0x04
      000023 27 50            [ 1]   91 	jreq	00104$
      000025 9F               [ 1]   92 	ld	a, xl
      000026 A1 05            [ 1]   93 	cp	a, #0x05
      000028 27 4B            [ 1]   94 	jreq	00104$
      00002A 9F               [ 1]   95 	ld	a, xl
      00002B A1 06            [ 1]   96 	cp	a, #0x06
      00002D 27 46            [ 1]   97 	jreq	00104$
      00002F 9F               [ 1]   98 	ld	a, xl
      000030 A1 07            [ 1]   99 	cp	a, #0x07
      000032 27 41            [ 1]  100 	jreq	00104$
      000034 9F               [ 1]  101 	ld	a, xl
      000035 A1 08            [ 1]  102 	cp	a, #0x08
      000037 27 3C            [ 1]  103 	jreq	00104$
      000039 9F               [ 1]  104 	ld	a, xl
      00003A A1 09            [ 1]  105 	cp	a, #0x09
      00003C 27 37            [ 1]  106 	jreq	00104$
      00003E 9F               [ 1]  107 	ld	a, xl
      00003F A1 0A            [ 1]  108 	cp	a, #0x0a
      000041 27 32            [ 1]  109 	jreq	00104$
      000043 9F               [ 1]  110 	ld	a, xl
      000044 A1 0B            [ 1]  111 	cp	a, #0x0b
      000046 27 2D            [ 1]  112 	jreq	00104$
      000048 9F               [ 1]  113 	ld	a, xl
      000049 A1 0C            [ 1]  114 	cp	a, #0x0c
      00004B 27 28            [ 1]  115 	jreq	00104$
      00004D 9F               [ 1]  116 	ld	a, xl
      00004E A1 0D            [ 1]  117 	cp	a, #0x0d
      000050 27 23            [ 1]  118 	jreq	00104$
      000052 9F               [ 1]  119 	ld	a, xl
      000053 A1 0E            [ 1]  120 	cp	a, #0x0e
      000055 27 1E            [ 1]  121 	jreq	00104$
      000057 9F               [ 1]  122 	ld	a, xl
      000058 A1 0F            [ 1]  123 	cp	a, #0x0f
      00005A 27 19            [ 1]  124 	jreq	00104$
      00005C 9F               [ 1]  125 	ld	a, xl
      00005D A1 10            [ 1]  126 	cp	a, #0x10
      00005F 27 14            [ 1]  127 	jreq	00104$
      000061 89               [ 2]  128 	pushw	x
      000062 4B 5B            [ 1]  129 	push	#0x5b
      000064 4B 00            [ 1]  130 	push	#0x00
      000066 4B 00            [ 1]  131 	push	#0x00
      000068 4B 00            [ 1]  132 	push	#0x00
      00006A AEr00r22         [ 2]  133 	ldw	x, #(___str_0+0)
      00006D CDr00r00         [ 4]  134 	call	_assert_failed
      000070 5B 01            [ 2]  135 	addw	sp, #1
      000072 41               [ 1]  136 	exg	a, xl
      000073 84               [ 1]  137 	pop	a
      000074 41               [ 1]  138 	exg	a, xl
      000075                        139 00104$:
                                    140 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 94: AWU->CSR |= AWU_CSR_AWUEN;
      000075 72 18 50 F0      [ 1]  141 	bset	0x50f0, #4
                                    142 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 97: AWU->TBR &= (uint8_t)(~AWU_TBR_AWUTB);
      000079 C6 50 F2         [ 1]  143 	ld	a, 0x50f2
      00007C A4 F0            [ 1]  144 	and	a, #0xf0
      00007E C7 50 F2         [ 1]  145 	ld	0x50f2, a
                                    146 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 98: AWU->TBR |= TBR_Array[(uint8_t)AWU_TimeBase];
      000081 C6 50 F2         [ 1]  147 	ld	a, 0x50f2
      000084 6B 01            [ 1]  148 	ld	(0x01, sp), a
      000086 90 5F            [ 1]  149 	clrw	y
      000088 61               [ 1]  150 	exg	a, yl
      000089 9F               [ 1]  151 	ld	a, xl
      00008A 61               [ 1]  152 	exg	a, yl
      00008B 90 D6u00u11      [ 1]  153 	ld	a, (_TBR_Array+0, y)
      00008F 1A 01            [ 1]  154 	or	a, (0x01, sp)
      000091 C7 50 F2         [ 1]  155 	ld	0x50f2, a
                                    156 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 101: AWU->APR &= (uint8_t)(~AWU_APR_APR);
      000094 C6 50 F1         [ 1]  157 	ld	a, 0x50f1
      000097 A4 C0            [ 1]  158 	and	a, #0xc0
      000099 C7 50 F1         [ 1]  159 	ld	0x50f1, a
                                    160 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 102: AWU->APR |= APR_Array[(uint8_t)AWU_TimeBase];
      00009C C6 50 F1         [ 1]  161 	ld	a, 0x50f1
      00009F 6B 01            [ 1]  162 	ld	(0x01, sp), a
      0000A1 4F               [ 1]  163 	clr	a
      0000A2 95               [ 1]  164 	ld	xh, a
      0000A3 D6u00u00         [ 1]  165 	ld	a, (_APR_Array+0, x)
      0000A6 1A 01            [ 1]  166 	or	a, (0x01, sp)
      0000A8 C7 50 F1         [ 1]  167 	ld	0x50f1, a
                                    168 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 103: }
      0000AB 84               [ 1]  169 	pop	a
      0000AC 81               [ 4]  170 	ret
                                    171 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 112: void AWU_Cmd(FunctionalState NewState)
                                    172 ;	-----------------------------------------
                                    173 ;	 function AWU_Cmd
                                    174 ;	-----------------------------------------
      0000AD                        175 _AWU_Cmd:
      0000AD 88               [ 1]  176 	push	a
      0000AE 6B 01            [ 1]  177 	ld	(0x01, sp), a
                                    178 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 117: AWU->CSR |= AWU_CSR_AWUEN;
      0000B0 C6 50 F0         [ 1]  179 	ld	a, 0x50f0
                                    180 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 114: if (NewState != DISABLE)
      0000B3 0D 01            [ 1]  181 	tnz	(0x01, sp)
      0000B5 27 07            [ 1]  182 	jreq	00102$
                                    183 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 117: AWU->CSR |= AWU_CSR_AWUEN;
      0000B7 AA 10            [ 1]  184 	or	a, #0x10
      0000B9 C7 50 F0         [ 1]  185 	ld	0x50f0, a
      0000BC 20 05            [ 2]  186 	jra	00104$
      0000BE                        187 00102$:
                                    188 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 122: AWU->CSR &= (uint8_t)(~AWU_CSR_AWUEN);
      0000BE A4 EF            [ 1]  189 	and	a, #0xef
      0000C0 C7 50 F0         [ 1]  190 	ld	0x50f0, a
      0000C3                        191 00104$:
                                    192 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 124: }
      0000C3 84               [ 1]  193 	pop	a
      0000C4 81               [ 4]  194 	ret
                                    195 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 139: void AWU_LSICalibrationConfig(uint32_t LSIFreqHz)
                                    196 ;	-----------------------------------------
                                    197 ;	 function AWU_LSICalibrationConfig
                                    198 ;	-----------------------------------------
      0000C5                        199 _AWU_LSICalibrationConfig:
      0000C5 52 06            [ 2]  200 	sub	sp, #6
                                    201 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 145: assert_param(IS_LSI_FREQUENCY_OK(LSIFreqHz));
      0000C7 1E 0B            [ 2]  202 	ldw	x, (0x0b, sp)
      0000C9 A3 AD B0         [ 2]  203 	cpw	x, #0xadb0
      0000CC 7B 0A            [ 1]  204 	ld	a, (0x0a, sp)
      0000CE A2 01            [ 1]  205 	sbc	a, #0x01
      0000D0 7B 09            [ 1]  206 	ld	a, (0x09, sp)
      0000D2 A2 00            [ 1]  207 	sbc	a, #0x00
      0000D4 25 0E            [ 1]  208 	jrc	00106$
      0000D6 AE 49 F0         [ 2]  209 	ldw	x, #0x49f0
      0000D9 13 0B            [ 2]  210 	cpw	x, (0x0b, sp)
      0000DB A6 02            [ 1]  211 	ld	a, #0x02
      0000DD 12 0A            [ 1]  212 	sbc	a, (0x0a, sp)
      0000DF 4F               [ 1]  213 	clr	a
      0000E0 12 09            [ 1]  214 	sbc	a, (0x09, sp)
      0000E2 24 0C            [ 1]  215 	jrnc	00107$
      0000E4                        216 00106$:
      0000E4 4B 91            [ 1]  217 	push	#0x91
      0000E6 5F               [ 1]  218 	clrw	x
      0000E7 89               [ 2]  219 	pushw	x
      0000E8 4B 00            [ 1]  220 	push	#0x00
      0000EA AEr00r22         [ 2]  221 	ldw	x, #(___str_0+0)
      0000ED CDr00r00         [ 4]  222 	call	_assert_failed
      0000F0                        223 00107$:
                                    224 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 147: lsifreqkhz = (uint16_t)(LSIFreqHz / 1000); /* Converts value in kHz */
      0000F0 4B E8            [ 1]  225 	push	#0xe8
      0000F2 4B 03            [ 1]  226 	push	#0x03
      0000F4 5F               [ 1]  227 	clrw	x
      0000F5 89               [ 2]  228 	pushw	x
      0000F6 1E 0F            [ 2]  229 	ldw	x, (0x0f, sp)
      0000F8 89               [ 2]  230 	pushw	x
      0000F9 1E 0F            [ 2]  231 	ldw	x, (0x0f, sp)
      0000FB 89               [ 2]  232 	pushw	x
      0000FC CDr00r00         [ 4]  233 	call	__divulong
      0000FF 5B 08            [ 2]  234 	addw	sp, #8
                                    235 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 151: A = (uint16_t)(lsifreqkhz >> 2U); /* Division by 4, keep integer part only */
      000101 1F 05            [ 2]  236 	ldw	(0x05, sp), x
      000103 54               [ 2]  237 	srlw	x
      000104 54               [ 2]  238 	srlw	x
                                    239 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 153: if ((4U * A) >= ((lsifreqkhz - (4U * A)) * (1U + (2U * A))))
      000105 1F 01            [ 2]  240 	ldw	(0x01, sp), x
      000107 1F 03            [ 2]  241 	ldw	(0x03, sp), x
      000109 08 04            [ 1]  242 	sll	(0x04, sp)
      00010B 09 03            [ 1]  243 	rlc	(0x03, sp)
      00010D 08 04            [ 1]  244 	sll	(0x04, sp)
      00010F 09 03            [ 1]  245 	rlc	(0x03, sp)
      000111 16 05            [ 2]  246 	ldw	y, (0x05, sp)
      000113 72 F2 03         [ 2]  247 	subw	y, (0x03, sp)
      000116 58               [ 2]  248 	sllw	x
      000117 5C               [ 1]  249 	incw	x
      000118 89               [ 2]  250 	pushw	x
      000119 93               [ 1]  251 	ldw	x, y
                                    252 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 155: AWU->APR = (uint8_t)(A - 2U);
      00011A CDr00r00         [ 4]  253 	call	__mulint
      00011D 1F 05            [ 2]  254 	ldw	(0x05, sp), x
      00011F 7B 02            [ 1]  255 	ld	a, (0x02, sp)
                                    256 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 153: if ((4U * A) >= ((lsifreqkhz - (4U * A)) * (1U + (2U * A))))
      000121 1E 03            [ 2]  257 	ldw	x, (0x03, sp)
      000123 13 05            [ 2]  258 	cpw	x, (0x05, sp)
      000125 25 07            [ 1]  259 	jrc	00102$
                                    260 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 155: AWU->APR = (uint8_t)(A - 2U);
      000127 A0 02            [ 1]  261 	sub	a, #0x02
      000129 C7 50 F1         [ 1]  262 	ld	0x50f1, a
      00012C 20 04            [ 2]  263 	jra	00104$
      00012E                        264 00102$:
                                    265 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 159: AWU->APR = (uint8_t)(A - 1U);
      00012E 4A               [ 1]  266 	dec	a
      00012F C7 50 F1         [ 1]  267 	ld	0x50f1, a
      000132                        268 00104$:
                                    269 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 161: }
      000132 1E 07            [ 2]  270 	ldw	x, (7, sp)
      000134 5B 0C            [ 2]  271 	addw	sp, #12
      000136 FC               [ 2]  272 	jp	(x)
                                    273 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 168: void AWU_IdleModeEnable(void)
                                    274 ;	-----------------------------------------
                                    275 ;	 function AWU_IdleModeEnable
                                    276 ;	-----------------------------------------
      000137                        277 _AWU_IdleModeEnable:
                                    278 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 171: AWU->CSR &= (uint8_t)(~AWU_CSR_AWUEN);
      000137 72 19 50 F0      [ 1]  279 	bres	0x50f0, #4
                                    280 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 174: AWU->TBR = (uint8_t)(~AWU_TBR_AWUTB);
      00013B 35 F0 50 F2      [ 1]  281 	mov	0x50f2+0, #0xf0
                                    282 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 175: }
      00013F 81               [ 4]  283 	ret
                                    284 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 183: FlagStatus AWU_GetFlagStatus(void)
                                    285 ;	-----------------------------------------
                                    286 ;	 function AWU_GetFlagStatus
                                    287 ;	-----------------------------------------
      000140                        288 _AWU_GetFlagStatus:
                                    289 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 185: return((FlagStatus)(((uint8_t)(AWU->CSR & AWU_CSR_AWUF) == (uint8_t)0x00) ? RESET : SET));
      000140 C6 50 F0         [ 1]  290 	ld	a, 0x50f0
      000143 A4 20            [ 1]  291 	and	a, #0x20
      000145 A0 01            [ 1]  292 	sub	a, #0x01
      000147 4F               [ 1]  293 	clr	a
      000148 8C               [ 1]  294 	ccf
      000149 49               [ 1]  295 	rlc	a
                                    296 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_awu.c: 186: }
      00014A 81               [ 4]  297 	ret
                                    298 	.area CODE
                                    299 	.area CONST
      000000                        300 _APR_Array:
      000000 00                     301 	.db #0x00	; 0
      000001 1E                     302 	.db #0x1e	; 30
      000002 1E                     303 	.db #0x1e	; 30
      000003 1E                     304 	.db #0x1e	; 30
      000004 1E                     305 	.db #0x1e	; 30
      000005 1E                     306 	.db #0x1e	; 30
      000006 1E                     307 	.db #0x1e	; 30
      000007 1E                     308 	.db #0x1e	; 30
      000008 1E                     309 	.db #0x1e	; 30
      000009 1E                     310 	.db #0x1e	; 30
      00000A 1E                     311 	.db #0x1e	; 30
      00000B 1E                     312 	.db #0x1e	; 30
      00000C 1E                     313 	.db #0x1e	; 30
      00000D 3D                     314 	.db #0x3d	; 61
      00000E 17                     315 	.db #0x17	; 23
      00000F 17                     316 	.db #0x17	; 23
      000010 3E                     317 	.db #0x3e	; 62
      000011                        318 _TBR_Array:
      000011 00                     319 	.db #0x00	; 0
      000012 01                     320 	.db #0x01	; 1
      000013 02                     321 	.db #0x02	; 2
      000014 03                     322 	.db #0x03	; 3
      000015 04                     323 	.db #0x04	; 4
      000016 05                     324 	.db #0x05	; 5
      000017 06                     325 	.db #0x06	; 6
      000018 07                     326 	.db #0x07	; 7
      000019 08                     327 	.db #0x08	; 8
      00001A 09                     328 	.db #0x09	; 9
      00001B 0A                     329 	.db #0x0a	; 10
      00001C 0B                     330 	.db #0x0b	; 11
      00001D 0C                     331 	.db #0x0c	; 12
      00001E 0C                     332 	.db #0x0c	; 12
      00001F 0E                     333 	.db #0x0e	; 14
      000020 0F                     334 	.db #0x0f	; 15
      000021 0F                     335 	.db #0x0f	; 15
                                    336 	.area CONST
      000022                        337 ___str_0:
      000022 2E 2F 53 54 4D 38 53   338 	.ascii "./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/s"
             5F 53 74 64 50 65 72
             69 70 68 5F 4C 69 62
             2F 4C 69 62 72 61 72
             69 65 73 2F 53 54 4D
             38 53 5F 53 74 64 50
             65 72 69 70 68 5F 44
             72 69 76 65 72 2F 73
             72 63 2F 73
      00005E 74 6D 38 73 5F 61 77   339 	.ascii "tm8s_awu.c"
             75 2E 63
      000068 00                     340 	.db 0x00
                                    341 	.area CODE
                                    342 	.area INITIALIZER
                                    343 	.area CABS (ABS)
