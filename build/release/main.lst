                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _usb_tx
                                     13 	.globl _GPIO_Init
                                     14 ;--------------------------------------------------------
                                     15 ; ram data
                                     16 ;--------------------------------------------------------
                                     17 	.area DATA
                                     18 ;--------------------------------------------------------
                                     19 ; ram data
                                     20 ;--------------------------------------------------------
                                     21 	.area INITIALIZED
                                     22 ;--------------------------------------------------------
                                     23 ; Stack segment in internal ram
                                     24 ;--------------------------------------------------------
                                     25 	.area SSEG
      000000                         26 __start__stack:
      000000                         27 	.ds	1
                                     28 
                                     29 ;--------------------------------------------------------
                                     30 ; absolute external ram data
                                     31 ;--------------------------------------------------------
                                     32 	.area DABS (ABS)
                                     33 
                                     34 ; default segment ordering for linker
                                     35 	.area HOME
                                     36 	.area GSINIT
                                     37 	.area GSFINAL
                                     38 	.area CONST
                                     39 	.area INITIALIZER
                                     40 	.area CODE
                                     41 
                                     42 ;--------------------------------------------------------
                                     43 ; interrupt vector
                                     44 ;--------------------------------------------------------
                                     45 	.area HOME
      000000                         46 __interrupt_vect:
      000000 82v00u00u00             47 	int s_GSINIT ; reset
                                     48 ;--------------------------------------------------------
                                     49 ; global & static initialisations
                                     50 ;--------------------------------------------------------
                                     51 	.area HOME
                                     52 	.area GSINIT
                                     53 	.area GSFINAL
                                     54 	.area GSINIT
      000000 CDr00r00         [ 4]   55 	call	___sdcc_external_startup
      000003 4D               [ 1]   56 	tnz	a
      000004 27 03            [ 1]   57 	jreq	__sdcc_init_data
      000006 CCr00r04         [ 2]   58 	jp	__sdcc_program_startup
      000009                         59 __sdcc_init_data:
                                     60 ; stm8_genXINIT() start
      000009 AEr00r00         [ 2]   61 	ldw x, #l_DATA
      00000C 27 07            [ 1]   62 	jreq	00002$
      00000E                         63 00001$:
      00000E 72 4FuFFuFF      [ 1]   64 	clr (s_DATA - 1, x)
      000012 5A               [ 2]   65 	decw x
      000013 26 F9            [ 1]   66 	jrne	00001$
      000015                         67 00002$:
      000015 AEr00r00         [ 2]   68 	ldw	x, #l_INITIALIZER
      000018 27 09            [ 1]   69 	jreq	00004$
      00001A                         70 00003$:
      00001A D6uFFuFF         [ 1]   71 	ld	a, (s_INITIALIZER - 1, x)
      00001D D7uFFuFF         [ 1]   72 	ld	(s_INITIALIZED - 1, x), a
      000020 5A               [ 2]   73 	decw	x
      000021 26 F7            [ 1]   74 	jrne	00003$
      000023                         75 00004$:
                                     76 ; stm8_genXINIT() end
                                     77 	.area GSFINAL
      000000 CCr00r04         [ 2]   78 	jp	__sdcc_program_startup
                                     79 ;--------------------------------------------------------
                                     80 ; Home
                                     81 ;--------------------------------------------------------
                                     82 	.area HOME
                                     83 	.area HOME
      000004                         84 __sdcc_program_startup:
      000004 CCr00r00         [ 2]   85 	jp	_main
                                     86 ;	return from main will return to caller
                                     87 ;--------------------------------------------------------
                                     88 ; code
                                     89 ;--------------------------------------------------------
                                     90 	.area CODE
                                     91 ;	main.c: 4: void main(void)
                                     92 ;	-----------------------------------------
                                     93 ;	 function main
                                     94 ;	-----------------------------------------
      000000                         95 _main:
                                     96 ;	main.c: 6: GPIO_Init(GPIOC,GPIO_PIN_7,GPIO_MODE_OUT_PP_LOW_FAST);
      000000 4B E0            [ 1]   97 	push	#0xe0
      000002 A6 80            [ 1]   98 	ld	a, #0x80
      000004 AE 50 0A         [ 2]   99 	ldw	x, #0x500a
      000007 CDr00r00         [ 4]  100 	call	_GPIO_Init
                                    101 ;	main.c: 7: GPIO_Init(GPIOC,GPIO_PIN_6,GPIO_MODE_OUT_PP_LOW_FAST);
      00000A 4B E0            [ 1]  102 	push	#0xe0
      00000C A6 40            [ 1]  103 	ld	a, #0x40
      00000E AE 50 0A         [ 2]  104 	ldw	x, #0x500a
      000011 CDr00r00         [ 4]  105 	call	_GPIO_Init
                                    106 ;	main.c: 8: while (1)
      000014                        107 00102$:
                                    108 ;	main.c: 10: usb_tx();
      000014 CDr00r00         [ 4]  109 	call	_usb_tx
      000017 20 FB            [ 2]  110 	jra	00102$
                                    111 ;	main.c: 12: }
      000019 81               [ 4]  112 	ret
                                    113 	.area CODE
                                    114 	.area CONST
                                    115 	.area INITIALIZER
                                    116 	.area CABS (ABS)
