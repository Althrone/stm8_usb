                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_tim2
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _TIM2_DeInit
                                     13 	.globl _TIM2_TimeBaseInit
                                     14 	.globl _TIM2_OC1Init
                                     15 	.globl _TIM2_OC2Init
                                     16 	.globl _TIM2_OC3Init
                                     17 	.globl _TIM2_ICInit
                                     18 	.globl _TIM2_PWMIConfig
                                     19 	.globl _TIM2_Cmd
                                     20 	.globl _TIM2_ITConfig
                                     21 	.globl _TIM2_UpdateDisableConfig
                                     22 	.globl _TIM2_UpdateRequestConfig
                                     23 	.globl _TIM2_SelectOnePulseMode
                                     24 	.globl _TIM2_PrescalerConfig
                                     25 	.globl _TIM2_ForcedOC1Config
                                     26 	.globl _TIM2_ForcedOC2Config
                                     27 	.globl _TIM2_ForcedOC3Config
                                     28 	.globl _TIM2_ARRPreloadConfig
                                     29 	.globl _TIM2_OC1PreloadConfig
                                     30 	.globl _TIM2_OC2PreloadConfig
                                     31 	.globl _TIM2_OC3PreloadConfig
                                     32 	.globl _TIM2_GenerateEvent
                                     33 	.globl _TIM2_OC1PolarityConfig
                                     34 	.globl _TIM2_OC2PolarityConfig
                                     35 	.globl _TIM2_OC3PolarityConfig
                                     36 	.globl _TIM2_CCxCmd
                                     37 	.globl _TIM2_SelectOCxM
                                     38 	.globl _TIM2_SetCounter
                                     39 	.globl _TIM2_SetAutoreload
                                     40 	.globl _TIM2_SetCompare1
                                     41 	.globl _TIM2_SetCompare2
                                     42 	.globl _TIM2_SetCompare3
                                     43 	.globl _TIM2_SetIC1Prescaler
                                     44 	.globl _TIM2_SetIC2Prescaler
                                     45 	.globl _TIM2_SetIC3Prescaler
                                     46 	.globl _TIM2_GetCapture1
                                     47 	.globl _TIM2_GetCapture2
                                     48 	.globl _TIM2_GetCapture3
                                     49 	.globl _TIM2_GetCounter
                                     50 	.globl _TIM2_GetPrescaler
                                     51 	.globl _TIM2_GetFlagStatus
                                     52 	.globl _TIM2_ClearFlag
                                     53 	.globl _TIM2_GetITStatus
                                     54 	.globl _TIM2_ClearITPendingBit
                                     55 ;--------------------------------------------------------
                                     56 ; ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area DATA
                                     59 ;--------------------------------------------------------
                                     60 ; ram data
                                     61 ;--------------------------------------------------------
                                     62 	.area INITIALIZED
                                     63 ;--------------------------------------------------------
                                     64 ; absolute external ram data
                                     65 ;--------------------------------------------------------
                                     66 	.area DABS (ABS)
                                     67 
                                     68 ; default segment ordering for linker
                                     69 	.area HOME
                                     70 	.area GSINIT
                                     71 	.area GSFINAL
                                     72 	.area CONST
                                     73 	.area INITIALIZER
                                     74 	.area CODE
                                     75 
                                     76 ;--------------------------------------------------------
                                     77 ; global & static initialisations
                                     78 ;--------------------------------------------------------
                                     79 	.area HOME
                                     80 	.area GSINIT
                                     81 	.area GSFINAL
                                     82 	.area GSINIT
                                     83 ;--------------------------------------------------------
                                     84 ; Home
                                     85 ;--------------------------------------------------------
                                     86 	.area HOME
                                     87 	.area HOME
                                     88 ;--------------------------------------------------------
                                     89 ; code
                                     90 ;--------------------------------------------------------
                                     91 	.area CODE
                                     92 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 52: void TIM2_DeInit(void)
                                     93 ;	-----------------------------------------
                                     94 ;	 function TIM2_DeInit
                                     95 ;	-----------------------------------------
      000000                         96 _TIM2_DeInit:
                                     97 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 54: TIM2->CR1 = (uint8_t)TIM2_CR1_RESET_VALUE;
      000000 35 00 53 00      [ 1]   98 	mov	0x5300+0, #0x00
                                     99 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 55: TIM2->IER = (uint8_t)TIM2_IER_RESET_VALUE;
      000004 35 00 53 03      [ 1]  100 	mov	0x5303+0, #0x00
                                    101 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 56: TIM2->SR2 = (uint8_t)TIM2_SR2_RESET_VALUE;
      000008 35 00 53 05      [ 1]  102 	mov	0x5305+0, #0x00
                                    103 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 59: TIM2->CCER1 = (uint8_t)TIM2_CCER1_RESET_VALUE;
      00000C 35 00 53 0A      [ 1]  104 	mov	0x530a+0, #0x00
                                    105 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 60: TIM2->CCER2 = (uint8_t)TIM2_CCER2_RESET_VALUE;
      000010 35 00 53 0B      [ 1]  106 	mov	0x530b+0, #0x00
                                    107 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 64: TIM2->CCER1 = (uint8_t)TIM2_CCER1_RESET_VALUE;
      000014 35 00 53 0A      [ 1]  108 	mov	0x530a+0, #0x00
                                    109 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 65: TIM2->CCER2 = (uint8_t)TIM2_CCER2_RESET_VALUE;
      000018 35 00 53 0B      [ 1]  110 	mov	0x530b+0, #0x00
                                    111 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 66: TIM2->CCMR1 = (uint8_t)TIM2_CCMR1_RESET_VALUE;
      00001C 35 00 53 07      [ 1]  112 	mov	0x5307+0, #0x00
                                    113 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 67: TIM2->CCMR2 = (uint8_t)TIM2_CCMR2_RESET_VALUE;
      000020 35 00 53 08      [ 1]  114 	mov	0x5308+0, #0x00
                                    115 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 68: TIM2->CCMR3 = (uint8_t)TIM2_CCMR3_RESET_VALUE;
      000024 35 00 53 09      [ 1]  116 	mov	0x5309+0, #0x00
                                    117 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 69: TIM2->CNTRH = (uint8_t)TIM2_CNTRH_RESET_VALUE;
      000028 35 00 53 0C      [ 1]  118 	mov	0x530c+0, #0x00
                                    119 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 70: TIM2->CNTRL = (uint8_t)TIM2_CNTRL_RESET_VALUE;
      00002C 35 00 53 0D      [ 1]  120 	mov	0x530d+0, #0x00
                                    121 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 71: TIM2->PSCR = (uint8_t)TIM2_PSCR_RESET_VALUE;
      000030 35 00 53 0E      [ 1]  122 	mov	0x530e+0, #0x00
                                    123 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 72: TIM2->ARRH  = (uint8_t)TIM2_ARRH_RESET_VALUE;
      000034 35 FF 53 0F      [ 1]  124 	mov	0x530f+0, #0xff
                                    125 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 73: TIM2->ARRL  = (uint8_t)TIM2_ARRL_RESET_VALUE;
      000038 35 FF 53 10      [ 1]  126 	mov	0x5310+0, #0xff
                                    127 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 74: TIM2->CCR1H = (uint8_t)TIM2_CCR1H_RESET_VALUE;
      00003C 35 00 53 11      [ 1]  128 	mov	0x5311+0, #0x00
                                    129 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 75: TIM2->CCR1L = (uint8_t)TIM2_CCR1L_RESET_VALUE;
      000040 35 00 53 12      [ 1]  130 	mov	0x5312+0, #0x00
                                    131 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 76: TIM2->CCR2H = (uint8_t)TIM2_CCR2H_RESET_VALUE;
      000044 35 00 53 13      [ 1]  132 	mov	0x5313+0, #0x00
                                    133 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 77: TIM2->CCR2L = (uint8_t)TIM2_CCR2L_RESET_VALUE;
      000048 35 00 53 14      [ 1]  134 	mov	0x5314+0, #0x00
                                    135 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 78: TIM2->CCR3H = (uint8_t)TIM2_CCR3H_RESET_VALUE;
      00004C 35 00 53 15      [ 1]  136 	mov	0x5315+0, #0x00
                                    137 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 79: TIM2->CCR3L = (uint8_t)TIM2_CCR3L_RESET_VALUE;
      000050 35 00 53 16      [ 1]  138 	mov	0x5316+0, #0x00
                                    139 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 80: TIM2->SR1 = (uint8_t)TIM2_SR1_RESET_VALUE;
      000054 35 00 53 04      [ 1]  140 	mov	0x5304+0, #0x00
                                    141 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 81: }
      000058 81               [ 4]  142 	ret
                                    143 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 89: void TIM2_TimeBaseInit( TIM2_Prescaler_TypeDef TIM2_Prescaler,
                                    144 ;	-----------------------------------------
                                    145 ;	 function TIM2_TimeBaseInit
                                    146 ;	-----------------------------------------
      000059                        147 _TIM2_TimeBaseInit:
                                    148 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 93: TIM2->PSCR = (uint8_t)(TIM2_Prescaler);
      000059 C7 53 0E         [ 1]  149 	ld	0x530e, a
                                    150 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 95: TIM2->ARRH = (uint8_t)(TIM2_Period >> 8);
      00005C 9E               [ 1]  151 	ld	a, xh
      00005D C7 53 0F         [ 1]  152 	ld	0x530f, a
                                    153 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 96: TIM2->ARRL = (uint8_t)(TIM2_Period);
      000060 9F               [ 1]  154 	ld	a, xl
      000061 C7 53 10         [ 1]  155 	ld	0x5310, a
                                    156 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 97: }
      000064 81               [ 4]  157 	ret
                                    158 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 108: void TIM2_OC1Init(TIM2_OCMode_TypeDef TIM2_OCMode,
                                    159 ;	-----------------------------------------
                                    160 ;	 function TIM2_OC1Init
                                    161 ;	-----------------------------------------
      000065                        162 _TIM2_OC1Init:
      000065 52 03            [ 2]  163 	sub	sp, #3
                                    164 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 114: assert_param(IS_TIM2_OC_MODE_OK(TIM2_OCMode));
      000067 6B 03            [ 1]  165 	ld	(0x03, sp), a
      000069 27 2A            [ 1]  166 	jreq	00104$
      00006B 7B 03            [ 1]  167 	ld	a, (0x03, sp)
      00006D A1 10            [ 1]  168 	cp	a, #0x10
      00006F 27 24            [ 1]  169 	jreq	00104$
      000071 7B 03            [ 1]  170 	ld	a, (0x03, sp)
      000073 A1 20            [ 1]  171 	cp	a, #0x20
      000075 27 1E            [ 1]  172 	jreq	00104$
      000077 7B 03            [ 1]  173 	ld	a, (0x03, sp)
      000079 A1 30            [ 1]  174 	cp	a, #0x30
      00007B 27 18            [ 1]  175 	jreq	00104$
      00007D 7B 03            [ 1]  176 	ld	a, (0x03, sp)
      00007F A1 60            [ 1]  177 	cp	a, #0x60
      000081 27 12            [ 1]  178 	jreq	00104$
      000083 7B 03            [ 1]  179 	ld	a, (0x03, sp)
      000085 A1 70            [ 1]  180 	cp	a, #0x70
      000087 27 0C            [ 1]  181 	jreq	00104$
      000089 4B 72            [ 1]  182 	push	#0x72
      00008B 5F               [ 1]  183 	clrw	x
      00008C 89               [ 2]  184 	pushw	x
      00008D 4B 00            [ 1]  185 	push	#0x00
      00008F AEr00r00         [ 2]  186 	ldw	x, #(___str_0+0)
      000092 CDr00r00         [ 4]  187 	call	_assert_failed
      000095                        188 00104$:
                                    189 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 115: assert_param(IS_TIM2_OUTPUT_STATE_OK(TIM2_OutputState));
      000095 0D 06            [ 1]  190 	tnz	(0x06, sp)
      000097 27 12            [ 1]  191 	jreq	00121$
      000099 7B 06            [ 1]  192 	ld	a, (0x06, sp)
      00009B A1 11            [ 1]  193 	cp	a, #0x11
      00009D 27 0C            [ 1]  194 	jreq	00121$
      00009F 4B 73            [ 1]  195 	push	#0x73
      0000A1 5F               [ 1]  196 	clrw	x
      0000A2 89               [ 2]  197 	pushw	x
      0000A3 4B 00            [ 1]  198 	push	#0x00
      0000A5 AEr00r00         [ 2]  199 	ldw	x, #(___str_0+0)
      0000A8 CDr00r00         [ 4]  200 	call	_assert_failed
      0000AB                        201 00121$:
                                    202 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 116: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      0000AB 0D 09            [ 1]  203 	tnz	(0x09, sp)
      0000AD 27 12            [ 1]  204 	jreq	00126$
      0000AF 7B 09            [ 1]  205 	ld	a, (0x09, sp)
      0000B1 A1 22            [ 1]  206 	cp	a, #0x22
      0000B3 27 0C            [ 1]  207 	jreq	00126$
      0000B5 4B 74            [ 1]  208 	push	#0x74
      0000B7 5F               [ 1]  209 	clrw	x
      0000B8 89               [ 2]  210 	pushw	x
      0000B9 4B 00            [ 1]  211 	push	#0x00
      0000BB AEr00r00         [ 2]  212 	ldw	x, #(___str_0+0)
      0000BE CDr00r00         [ 4]  213 	call	_assert_failed
      0000C1                        214 00126$:
                                    215 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 119: TIM2->CCER1 &= (uint8_t)(~( TIM2_CCER1_CC1E | TIM2_CCER1_CC1P));
      0000C1 C6 53 0A         [ 1]  216 	ld	a, 0x530a
      0000C4 A4 FC            [ 1]  217 	and	a, #0xfc
      0000C6 C7 53 0A         [ 1]  218 	ld	0x530a, a
                                    219 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 121: TIM2->CCER1 |= (uint8_t)((uint8_t)(TIM2_OutputState & TIM2_CCER1_CC1E ) | 
      0000C9 C6 53 0A         [ 1]  220 	ld	a, 0x530a
      0000CC 6B 01            [ 1]  221 	ld	(0x01, sp), a
      0000CE 7B 06            [ 1]  222 	ld	a, (0x06, sp)
      0000D0 A4 01            [ 1]  223 	and	a, #0x01
      0000D2 6B 02            [ 1]  224 	ld	(0x02, sp), a
                                    225 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 122: (uint8_t)(TIM2_OCPolarity & TIM2_CCER1_CC1P));
      0000D4 7B 09            [ 1]  226 	ld	a, (0x09, sp)
      0000D6 A4 02            [ 1]  227 	and	a, #0x02
      0000D8 1A 02            [ 1]  228 	or	a, (0x02, sp)
      0000DA 1A 01            [ 1]  229 	or	a, (0x01, sp)
      0000DC C7 53 0A         [ 1]  230 	ld	0x530a, a
                                    231 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 125: TIM2->CCMR1 = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_OCM)) |
      0000DF C6 53 07         [ 1]  232 	ld	a, 0x5307
      0000E2 A4 8F            [ 1]  233 	and	a, #0x8f
                                    234 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 126: (uint8_t)TIM2_OCMode);
      0000E4 1A 03            [ 1]  235 	or	a, (0x03, sp)
      0000E6 C7 53 07         [ 1]  236 	ld	0x5307, a
                                    237 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 129: TIM2->CCR1H = (uint8_t)(TIM2_Pulse >> 8);
      0000E9 7B 07            [ 1]  238 	ld	a, (0x07, sp)
      0000EB C7 53 11         [ 1]  239 	ld	0x5311, a
                                    240 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 130: TIM2->CCR1L = (uint8_t)(TIM2_Pulse);
      0000EE 7B 08            [ 1]  241 	ld	a, (0x08, sp)
      0000F0 C7 53 12         [ 1]  242 	ld	0x5312, a
                                    243 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 131: }
      0000F3 1E 04            [ 2]  244 	ldw	x, (4, sp)
      0000F5 5B 09            [ 2]  245 	addw	sp, #9
      0000F7 FC               [ 2]  246 	jp	(x)
                                    247 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 142: void TIM2_OC2Init(TIM2_OCMode_TypeDef TIM2_OCMode,
                                    248 ;	-----------------------------------------
                                    249 ;	 function TIM2_OC2Init
                                    250 ;	-----------------------------------------
      0000F8                        251 _TIM2_OC2Init:
      0000F8 52 03            [ 2]  252 	sub	sp, #3
                                    253 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 148: assert_param(IS_TIM2_OC_MODE_OK(TIM2_OCMode));
      0000FA 6B 03            [ 1]  254 	ld	(0x03, sp), a
      0000FC 27 2A            [ 1]  255 	jreq	00104$
      0000FE 7B 03            [ 1]  256 	ld	a, (0x03, sp)
      000100 A1 10            [ 1]  257 	cp	a, #0x10
      000102 27 24            [ 1]  258 	jreq	00104$
      000104 7B 03            [ 1]  259 	ld	a, (0x03, sp)
      000106 A1 20            [ 1]  260 	cp	a, #0x20
      000108 27 1E            [ 1]  261 	jreq	00104$
      00010A 7B 03            [ 1]  262 	ld	a, (0x03, sp)
      00010C A1 30            [ 1]  263 	cp	a, #0x30
      00010E 27 18            [ 1]  264 	jreq	00104$
      000110 7B 03            [ 1]  265 	ld	a, (0x03, sp)
      000112 A1 60            [ 1]  266 	cp	a, #0x60
      000114 27 12            [ 1]  267 	jreq	00104$
      000116 7B 03            [ 1]  268 	ld	a, (0x03, sp)
      000118 A1 70            [ 1]  269 	cp	a, #0x70
      00011A 27 0C            [ 1]  270 	jreq	00104$
      00011C 4B 94            [ 1]  271 	push	#0x94
      00011E 5F               [ 1]  272 	clrw	x
      00011F 89               [ 2]  273 	pushw	x
      000120 4B 00            [ 1]  274 	push	#0x00
      000122 AEr00r00         [ 2]  275 	ldw	x, #(___str_0+0)
      000125 CDr00r00         [ 4]  276 	call	_assert_failed
      000128                        277 00104$:
                                    278 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 149: assert_param(IS_TIM2_OUTPUT_STATE_OK(TIM2_OutputState));
      000128 0D 06            [ 1]  279 	tnz	(0x06, sp)
      00012A 27 12            [ 1]  280 	jreq	00121$
      00012C 7B 06            [ 1]  281 	ld	a, (0x06, sp)
      00012E A1 11            [ 1]  282 	cp	a, #0x11
      000130 27 0C            [ 1]  283 	jreq	00121$
      000132 4B 95            [ 1]  284 	push	#0x95
      000134 5F               [ 1]  285 	clrw	x
      000135 89               [ 2]  286 	pushw	x
      000136 4B 00            [ 1]  287 	push	#0x00
      000138 AEr00r00         [ 2]  288 	ldw	x, #(___str_0+0)
      00013B CDr00r00         [ 4]  289 	call	_assert_failed
      00013E                        290 00121$:
                                    291 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 150: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      00013E 0D 09            [ 1]  292 	tnz	(0x09, sp)
      000140 27 12            [ 1]  293 	jreq	00126$
      000142 7B 09            [ 1]  294 	ld	a, (0x09, sp)
      000144 A1 22            [ 1]  295 	cp	a, #0x22
      000146 27 0C            [ 1]  296 	jreq	00126$
      000148 4B 96            [ 1]  297 	push	#0x96
      00014A 5F               [ 1]  298 	clrw	x
      00014B 89               [ 2]  299 	pushw	x
      00014C 4B 00            [ 1]  300 	push	#0x00
      00014E AEr00r00         [ 2]  301 	ldw	x, #(___str_0+0)
      000151 CDr00r00         [ 4]  302 	call	_assert_failed
      000154                        303 00126$:
                                    304 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 154: TIM2->CCER1 &= (uint8_t)(~( TIM2_CCER1_CC2E |  TIM2_CCER1_CC2P ));
      000154 C6 53 0A         [ 1]  305 	ld	a, 0x530a
      000157 A4 CF            [ 1]  306 	and	a, #0xcf
      000159 C7 53 0A         [ 1]  307 	ld	0x530a, a
                                    308 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 156: TIM2->CCER1 |= (uint8_t)((uint8_t)(TIM2_OutputState  & TIM2_CCER1_CC2E ) |
      00015C C6 53 0A         [ 1]  309 	ld	a, 0x530a
      00015F 6B 01            [ 1]  310 	ld	(0x01, sp), a
      000161 7B 06            [ 1]  311 	ld	a, (0x06, sp)
      000163 A4 10            [ 1]  312 	and	a, #0x10
      000165 6B 02            [ 1]  313 	ld	(0x02, sp), a
                                    314 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 157: (uint8_t)(TIM2_OCPolarity & TIM2_CCER1_CC2P));
      000167 7B 09            [ 1]  315 	ld	a, (0x09, sp)
      000169 A4 20            [ 1]  316 	and	a, #0x20
      00016B 1A 02            [ 1]  317 	or	a, (0x02, sp)
      00016D 1A 01            [ 1]  318 	or	a, (0x01, sp)
      00016F C7 53 0A         [ 1]  319 	ld	0x530a, a
                                    320 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 161: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_OCM)) | 
      000172 C6 53 08         [ 1]  321 	ld	a, 0x5308
      000175 A4 8F            [ 1]  322 	and	a, #0x8f
                                    323 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 162: (uint8_t)TIM2_OCMode);
      000177 1A 03            [ 1]  324 	or	a, (0x03, sp)
      000179 C7 53 08         [ 1]  325 	ld	0x5308, a
                                    326 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 166: TIM2->CCR2H = (uint8_t)(TIM2_Pulse >> 8);
      00017C 7B 07            [ 1]  327 	ld	a, (0x07, sp)
      00017E C7 53 13         [ 1]  328 	ld	0x5313, a
                                    329 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 167: TIM2->CCR2L = (uint8_t)(TIM2_Pulse);
      000181 7B 08            [ 1]  330 	ld	a, (0x08, sp)
      000183 C7 53 14         [ 1]  331 	ld	0x5314, a
                                    332 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 168: }
      000186 1E 04            [ 2]  333 	ldw	x, (4, sp)
      000188 5B 09            [ 2]  334 	addw	sp, #9
      00018A FC               [ 2]  335 	jp	(x)
                                    336 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 179: void TIM2_OC3Init(TIM2_OCMode_TypeDef TIM2_OCMode,
                                    337 ;	-----------------------------------------
                                    338 ;	 function TIM2_OC3Init
                                    339 ;	-----------------------------------------
      00018B                        340 _TIM2_OC3Init:
      00018B 52 03            [ 2]  341 	sub	sp, #3
                                    342 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 185: assert_param(IS_TIM2_OC_MODE_OK(TIM2_OCMode));
      00018D 6B 03            [ 1]  343 	ld	(0x03, sp), a
      00018F 27 2A            [ 1]  344 	jreq	00104$
      000191 7B 03            [ 1]  345 	ld	a, (0x03, sp)
      000193 A1 10            [ 1]  346 	cp	a, #0x10
      000195 27 24            [ 1]  347 	jreq	00104$
      000197 7B 03            [ 1]  348 	ld	a, (0x03, sp)
      000199 A1 20            [ 1]  349 	cp	a, #0x20
      00019B 27 1E            [ 1]  350 	jreq	00104$
      00019D 7B 03            [ 1]  351 	ld	a, (0x03, sp)
      00019F A1 30            [ 1]  352 	cp	a, #0x30
      0001A1 27 18            [ 1]  353 	jreq	00104$
      0001A3 7B 03            [ 1]  354 	ld	a, (0x03, sp)
      0001A5 A1 60            [ 1]  355 	cp	a, #0x60
      0001A7 27 12            [ 1]  356 	jreq	00104$
      0001A9 7B 03            [ 1]  357 	ld	a, (0x03, sp)
      0001AB A1 70            [ 1]  358 	cp	a, #0x70
      0001AD 27 0C            [ 1]  359 	jreq	00104$
      0001AF 4B B9            [ 1]  360 	push	#0xb9
      0001B1 5F               [ 1]  361 	clrw	x
      0001B2 89               [ 2]  362 	pushw	x
      0001B3 4B 00            [ 1]  363 	push	#0x00
      0001B5 AEr00r00         [ 2]  364 	ldw	x, #(___str_0+0)
      0001B8 CDr00r00         [ 4]  365 	call	_assert_failed
      0001BB                        366 00104$:
                                    367 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 186: assert_param(IS_TIM2_OUTPUT_STATE_OK(TIM2_OutputState));
      0001BB 0D 06            [ 1]  368 	tnz	(0x06, sp)
      0001BD 27 12            [ 1]  369 	jreq	00121$
      0001BF 7B 06            [ 1]  370 	ld	a, (0x06, sp)
      0001C1 A1 11            [ 1]  371 	cp	a, #0x11
      0001C3 27 0C            [ 1]  372 	jreq	00121$
      0001C5 4B BA            [ 1]  373 	push	#0xba
      0001C7 5F               [ 1]  374 	clrw	x
      0001C8 89               [ 2]  375 	pushw	x
      0001C9 4B 00            [ 1]  376 	push	#0x00
      0001CB AEr00r00         [ 2]  377 	ldw	x, #(___str_0+0)
      0001CE CDr00r00         [ 4]  378 	call	_assert_failed
      0001D1                        379 00121$:
                                    380 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 187: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      0001D1 0D 09            [ 1]  381 	tnz	(0x09, sp)
      0001D3 27 12            [ 1]  382 	jreq	00126$
      0001D5 7B 09            [ 1]  383 	ld	a, (0x09, sp)
      0001D7 A1 22            [ 1]  384 	cp	a, #0x22
      0001D9 27 0C            [ 1]  385 	jreq	00126$
      0001DB 4B BB            [ 1]  386 	push	#0xbb
      0001DD 5F               [ 1]  387 	clrw	x
      0001DE 89               [ 2]  388 	pushw	x
      0001DF 4B 00            [ 1]  389 	push	#0x00
      0001E1 AEr00r00         [ 2]  390 	ldw	x, #(___str_0+0)
      0001E4 CDr00r00         [ 4]  391 	call	_assert_failed
      0001E7                        392 00126$:
                                    393 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 189: TIM2->CCER2 &= (uint8_t)(~( TIM2_CCER2_CC3E  | TIM2_CCER2_CC3P));
      0001E7 C6 53 0B         [ 1]  394 	ld	a, 0x530b
      0001EA A4 FC            [ 1]  395 	and	a, #0xfc
      0001EC C7 53 0B         [ 1]  396 	ld	0x530b, a
                                    397 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 191: TIM2->CCER2 |= (uint8_t)((uint8_t)(TIM2_OutputState & TIM2_CCER2_CC3E) |  
      0001EF C6 53 0B         [ 1]  398 	ld	a, 0x530b
      0001F2 6B 01            [ 1]  399 	ld	(0x01, sp), a
      0001F4 7B 06            [ 1]  400 	ld	a, (0x06, sp)
      0001F6 A4 01            [ 1]  401 	and	a, #0x01
      0001F8 6B 02            [ 1]  402 	ld	(0x02, sp), a
                                    403 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 192: (uint8_t)(TIM2_OCPolarity & TIM2_CCER2_CC3P));
      0001FA 7B 09            [ 1]  404 	ld	a, (0x09, sp)
      0001FC A4 02            [ 1]  405 	and	a, #0x02
      0001FE 1A 02            [ 1]  406 	or	a, (0x02, sp)
      000200 1A 01            [ 1]  407 	or	a, (0x01, sp)
      000202 C7 53 0B         [ 1]  408 	ld	0x530b, a
                                    409 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 195: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_OCM)) |
      000205 C6 53 09         [ 1]  410 	ld	a, 0x5309
      000208 A4 8F            [ 1]  411 	and	a, #0x8f
                                    412 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 196: (uint8_t)TIM2_OCMode);
      00020A 1A 03            [ 1]  413 	or	a, (0x03, sp)
      00020C C7 53 09         [ 1]  414 	ld	0x5309, a
                                    415 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 199: TIM2->CCR3H = (uint8_t)(TIM2_Pulse >> 8);
      00020F 7B 07            [ 1]  416 	ld	a, (0x07, sp)
      000211 C7 53 15         [ 1]  417 	ld	0x5315, a
                                    418 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 200: TIM2->CCR3L = (uint8_t)(TIM2_Pulse);
      000214 7B 08            [ 1]  419 	ld	a, (0x08, sp)
      000216 C7 53 16         [ 1]  420 	ld	0x5316, a
                                    421 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 201: }
      000219 1E 04            [ 2]  422 	ldw	x, (4, sp)
      00021B 5B 09            [ 2]  423 	addw	sp, #9
      00021D FC               [ 2]  424 	jp	(x)
                                    425 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 212: void TIM2_ICInit(TIM2_Channel_TypeDef TIM2_Channel,
                                    426 ;	-----------------------------------------
                                    427 ;	 function TIM2_ICInit
                                    428 ;	-----------------------------------------
      00021E                        429 _TIM2_ICInit:
      00021E 89               [ 2]  430 	pushw	x
                                    431 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 219: assert_param(IS_TIM2_CHANNEL_OK(TIM2_Channel));
      00021F 6B 02            [ 1]  432 	ld	(0x02, sp), a
      000221 4A               [ 1]  433 	dec	a
      000222 26 05            [ 1]  434 	jrne	00249$
      000224 A6 01            [ 1]  435 	ld	a, #0x01
      000226 6B 01            [ 1]  436 	ld	(0x01, sp), a
      000228 C5                     437 	.byte 0xc5
      000229                        438 00249$:
      000229 0F 01            [ 1]  439 	clr	(0x01, sp)
      00022B                        440 00250$:
      00022B 0D 02            [ 1]  441 	tnz	(0x02, sp)
      00022D 27 16            [ 1]  442 	jreq	00110$
      00022F 0D 01            [ 1]  443 	tnz	(0x01, sp)
      000231 26 12            [ 1]  444 	jrne	00110$
      000233 7B 02            [ 1]  445 	ld	a, (0x02, sp)
      000235 A1 02            [ 1]  446 	cp	a, #0x02
      000237 27 0C            [ 1]  447 	jreq	00110$
      000239 4B DB            [ 1]  448 	push	#0xdb
      00023B 5F               [ 1]  449 	clrw	x
      00023C 89               [ 2]  450 	pushw	x
      00023D 4B 00            [ 1]  451 	push	#0x00
      00023F AEr00r00         [ 2]  452 	ldw	x, #(___str_0+0)
      000242 CDr00r00         [ 4]  453 	call	_assert_failed
      000245                        454 00110$:
                                    455 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 220: assert_param(IS_TIM2_IC_POLARITY_OK(TIM2_ICPolarity));
      000245 0D 05            [ 1]  456 	tnz	(0x05, sp)
      000247 27 12            [ 1]  457 	jreq	00118$
      000249 7B 05            [ 1]  458 	ld	a, (0x05, sp)
      00024B A1 44            [ 1]  459 	cp	a, #0x44
      00024D 27 0C            [ 1]  460 	jreq	00118$
      00024F 4B DC            [ 1]  461 	push	#0xdc
      000251 5F               [ 1]  462 	clrw	x
      000252 89               [ 2]  463 	pushw	x
      000253 4B 00            [ 1]  464 	push	#0x00
      000255 AEr00r00         [ 2]  465 	ldw	x, #(___str_0+0)
      000258 CDr00r00         [ 4]  466 	call	_assert_failed
      00025B                        467 00118$:
                                    468 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 221: assert_param(IS_TIM2_IC_SELECTION_OK(TIM2_ICSelection));
      00025B 7B 06            [ 1]  469 	ld	a, (0x06, sp)
      00025D 4A               [ 1]  470 	dec	a
      00025E 27 18            [ 1]  471 	jreq	00123$
      000260 7B 06            [ 1]  472 	ld	a, (0x06, sp)
      000262 A1 02            [ 1]  473 	cp	a, #0x02
      000264 27 12            [ 1]  474 	jreq	00123$
      000266 7B 06            [ 1]  475 	ld	a, (0x06, sp)
      000268 A1 03            [ 1]  476 	cp	a, #0x03
      00026A 27 0C            [ 1]  477 	jreq	00123$
      00026C 4B DD            [ 1]  478 	push	#0xdd
      00026E 5F               [ 1]  479 	clrw	x
      00026F 89               [ 2]  480 	pushw	x
      000270 4B 00            [ 1]  481 	push	#0x00
      000272 AEr00r00         [ 2]  482 	ldw	x, #(___str_0+0)
      000275 CDr00r00         [ 4]  483 	call	_assert_failed
      000278                        484 00123$:
                                    485 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 222: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_ICPrescaler));
      000278 0D 07            [ 1]  486 	tnz	(0x07, sp)
      00027A 27 1E            [ 1]  487 	jreq	00131$
      00027C 7B 07            [ 1]  488 	ld	a, (0x07, sp)
      00027E A1 04            [ 1]  489 	cp	a, #0x04
      000280 27 18            [ 1]  490 	jreq	00131$
      000282 7B 07            [ 1]  491 	ld	a, (0x07, sp)
      000284 A1 08            [ 1]  492 	cp	a, #0x08
      000286 27 12            [ 1]  493 	jreq	00131$
      000288 7B 07            [ 1]  494 	ld	a, (0x07, sp)
      00028A A1 0C            [ 1]  495 	cp	a, #0x0c
      00028C 27 0C            [ 1]  496 	jreq	00131$
      00028E 4B DE            [ 1]  497 	push	#0xde
      000290 5F               [ 1]  498 	clrw	x
      000291 89               [ 2]  499 	pushw	x
      000292 4B 00            [ 1]  500 	push	#0x00
      000294 AEr00r00         [ 2]  501 	ldw	x, #(___str_0+0)
      000297 CDr00r00         [ 4]  502 	call	_assert_failed
      00029A                        503 00131$:
                                    504 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 223: assert_param(IS_TIM2_IC_FILTER_OK(TIM2_ICFilter));
      00029A 7B 08            [ 1]  505 	ld	a, (0x08, sp)
      00029C A1 0F            [ 1]  506 	cp	a, #0x0f
      00029E 23 0C            [ 2]  507 	jrule	00142$
      0002A0 4B DF            [ 1]  508 	push	#0xdf
      0002A2 5F               [ 1]  509 	clrw	x
      0002A3 89               [ 2]  510 	pushw	x
      0002A4 4B 00            [ 1]  511 	push	#0x00
      0002A6 AEr00r00         [ 2]  512 	ldw	x, #(___str_0+0)
      0002A9 CDr00r00         [ 4]  513 	call	_assert_failed
      0002AC                        514 00142$:
                                    515 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 225: if (TIM2_Channel == TIM2_CHANNEL_1)
      0002AC 0D 02            [ 1]  516 	tnz	(0x02, sp)
      0002AE 26 12            [ 1]  517 	jrne	00105$
                                    518 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 228: TI1_Config((uint8_t)TIM2_ICPolarity,
      0002B0 7B 08            [ 1]  519 	ld	a, (0x08, sp)
      0002B2 88               [ 1]  520 	push	a
      0002B3 7B 07            [ 1]  521 	ld	a, (0x07, sp)
      0002B5 88               [ 1]  522 	push	a
      0002B6 7B 07            [ 1]  523 	ld	a, (0x07, sp)
      0002B8 CDr09rCE         [ 4]  524 	call	_TI1_Config
                                    525 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 233: TIM2_SetIC1Prescaler(TIM2_ICPrescaler);
      0002BB 7B 07            [ 1]  526 	ld	a, (0x07, sp)
      0002BD CDr08r2E         [ 4]  527 	call	_TIM2_SetIC1Prescaler
      0002C0 20 26            [ 2]  528 	jra	00107$
      0002C2                        529 00105$:
                                    530 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 235: else if (TIM2_Channel == TIM2_CHANNEL_2)
      0002C2 7B 01            [ 1]  531 	ld	a, (0x01, sp)
      0002C4 27 12            [ 1]  532 	jreq	00102$
                                    533 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 238: TI2_Config((uint8_t)TIM2_ICPolarity,
      0002C6 7B 08            [ 1]  534 	ld	a, (0x08, sp)
      0002C8 88               [ 1]  535 	push	a
      0002C9 7B 07            [ 1]  536 	ld	a, (0x07, sp)
      0002CB 88               [ 1]  537 	push	a
      0002CC 7B 07            [ 1]  538 	ld	a, (0x07, sp)
      0002CE CDr0Ar08         [ 4]  539 	call	_TI2_Config
                                    540 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 243: TIM2_SetIC2Prescaler(TIM2_ICPrescaler);
      0002D1 7B 07            [ 1]  541 	ld	a, (0x07, sp)
      0002D3 CDr08r5D         [ 4]  542 	call	_TIM2_SetIC2Prescaler
      0002D6 20 10            [ 2]  543 	jra	00107$
      0002D8                        544 00102$:
                                    545 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 248: TI3_Config((uint8_t)TIM2_ICPolarity,
      0002D8 7B 08            [ 1]  546 	ld	a, (0x08, sp)
      0002DA 88               [ 1]  547 	push	a
      0002DB 7B 07            [ 1]  548 	ld	a, (0x07, sp)
      0002DD 88               [ 1]  549 	push	a
      0002DE 7B 07            [ 1]  550 	ld	a, (0x07, sp)
      0002E0 CDr0Ar42         [ 4]  551 	call	_TI3_Config
                                    552 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 253: TIM2_SetIC3Prescaler(TIM2_ICPrescaler);
      0002E3 7B 07            [ 1]  553 	ld	a, (0x07, sp)
      0002E5 CDr08r8C         [ 4]  554 	call	_TIM2_SetIC3Prescaler
      0002E8                        555 00107$:
                                    556 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 255: }
      0002E8 1E 03            [ 2]  557 	ldw	x, (3, sp)
      0002EA 5B 08            [ 2]  558 	addw	sp, #8
      0002EC FC               [ 2]  559 	jp	(x)
                                    560 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 266: void TIM2_PWMIConfig(TIM2_Channel_TypeDef TIM2_Channel,
                                    561 ;	-----------------------------------------
                                    562 ;	 function TIM2_PWMIConfig
                                    563 ;	-----------------------------------------
      0002ED                        564 _TIM2_PWMIConfig:
      0002ED 52 03            [ 2]  565 	sub	sp, #3
                                    566 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 276: assert_param(IS_TIM2_PWMI_CHANNEL_OK(TIM2_Channel));
      0002EF 6B 03            [ 1]  567 	ld	(0x03, sp), a
      0002F1 27 11            [ 1]  568 	jreq	00113$
      0002F3 7B 03            [ 1]  569 	ld	a, (0x03, sp)
      0002F5 4A               [ 1]  570 	dec	a
      0002F6 27 0C            [ 1]  571 	jreq	00113$
      0002F8 4B 14            [ 1]  572 	push	#0x14
      0002FA 4B 01            [ 1]  573 	push	#0x01
      0002FC 5F               [ 1]  574 	clrw	x
      0002FD 89               [ 2]  575 	pushw	x
      0002FE AEr00r00         [ 2]  576 	ldw	x, #(___str_0+0)
      000301 CDr00r00         [ 4]  577 	call	_assert_failed
      000304                        578 00113$:
                                    579 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 277: assert_param(IS_TIM2_IC_POLARITY_OK(TIM2_ICPolarity));
      000304 7B 06            [ 1]  580 	ld	a, (0x06, sp)
      000306 A0 44            [ 1]  581 	sub	a, #0x44
      000308 26 04            [ 1]  582 	jrne	00244$
      00030A 4C               [ 1]  583 	inc	a
      00030B 6B 01            [ 1]  584 	ld	(0x01, sp), a
      00030D C5                     585 	.byte 0xc5
      00030E                        586 00244$:
      00030E 0F 01            [ 1]  587 	clr	(0x01, sp)
      000310                        588 00245$:
      000310 0D 06            [ 1]  589 	tnz	(0x06, sp)
      000312 27 10            [ 1]  590 	jreq	00118$
      000314 0D 01            [ 1]  591 	tnz	(0x01, sp)
      000316 26 0C            [ 1]  592 	jrne	00118$
      000318 4B 15            [ 1]  593 	push	#0x15
      00031A 4B 01            [ 1]  594 	push	#0x01
      00031C 5F               [ 1]  595 	clrw	x
      00031D 89               [ 2]  596 	pushw	x
      00031E AEr00r00         [ 2]  597 	ldw	x, #(___str_0+0)
      000321 CDr00r00         [ 4]  598 	call	_assert_failed
      000324                        599 00118$:
                                    600 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 278: assert_param(IS_TIM2_IC_SELECTION_OK(TIM2_ICSelection));
      000324 7B 07            [ 1]  601 	ld	a, (0x07, sp)
      000326 4A               [ 1]  602 	dec	a
      000327 26 05            [ 1]  603 	jrne	00249$
      000329 A6 01            [ 1]  604 	ld	a, #0x01
      00032B 6B 02            [ 1]  605 	ld	(0x02, sp), a
      00032D C5                     606 	.byte 0xc5
      00032E                        607 00249$:
      00032E 0F 02            [ 1]  608 	clr	(0x02, sp)
      000330                        609 00250$:
      000330 0D 02            [ 1]  610 	tnz	(0x02, sp)
      000332 26 18            [ 1]  611 	jrne	00123$
      000334 7B 07            [ 1]  612 	ld	a, (0x07, sp)
      000336 A1 02            [ 1]  613 	cp	a, #0x02
      000338 27 12            [ 1]  614 	jreq	00123$
      00033A 7B 07            [ 1]  615 	ld	a, (0x07, sp)
      00033C A1 03            [ 1]  616 	cp	a, #0x03
      00033E 27 0C            [ 1]  617 	jreq	00123$
      000340 4B 16            [ 1]  618 	push	#0x16
      000342 4B 01            [ 1]  619 	push	#0x01
      000344 5F               [ 1]  620 	clrw	x
      000345 89               [ 2]  621 	pushw	x
      000346 AEr00r00         [ 2]  622 	ldw	x, #(___str_0+0)
      000349 CDr00r00         [ 4]  623 	call	_assert_failed
      00034C                        624 00123$:
                                    625 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 279: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_ICPrescaler));
      00034C 0D 08            [ 1]  626 	tnz	(0x08, sp)
      00034E 27 1E            [ 1]  627 	jreq	00131$
      000350 7B 08            [ 1]  628 	ld	a, (0x08, sp)
      000352 A1 04            [ 1]  629 	cp	a, #0x04
      000354 27 18            [ 1]  630 	jreq	00131$
      000356 7B 08            [ 1]  631 	ld	a, (0x08, sp)
      000358 A1 08            [ 1]  632 	cp	a, #0x08
      00035A 27 12            [ 1]  633 	jreq	00131$
      00035C 7B 08            [ 1]  634 	ld	a, (0x08, sp)
      00035E A1 0C            [ 1]  635 	cp	a, #0x0c
      000360 27 0C            [ 1]  636 	jreq	00131$
      000362 4B 17            [ 1]  637 	push	#0x17
      000364 4B 01            [ 1]  638 	push	#0x01
      000366 5F               [ 1]  639 	clrw	x
      000367 89               [ 2]  640 	pushw	x
      000368 AEr00r00         [ 2]  641 	ldw	x, #(___str_0+0)
      00036B CDr00r00         [ 4]  642 	call	_assert_failed
      00036E                        643 00131$:
                                    644 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 282: if (TIM2_ICPolarity != TIM2_ICPOLARITY_FALLING)
      00036E 0D 01            [ 1]  645 	tnz	(0x01, sp)
      000370 26 05            [ 1]  646 	jrne	00102$
                                    647 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 284: icpolarity = (uint8_t)TIM2_ICPOLARITY_FALLING;
      000372 A6 44            [ 1]  648 	ld	a, #0x44
      000374 6B 01            [ 1]  649 	ld	(0x01, sp), a
                                    650 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 288: icpolarity = (uint8_t)TIM2_ICPOLARITY_RISING;
      000376 C5                     651 	.byte 0xc5
      000377                        652 00102$:
      000377 0F 01            [ 1]  653 	clr	(0x01, sp)
      000379                        654 00103$:
                                    655 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 292: if (TIM2_ICSelection == TIM2_ICSELECTION_DIRECTTI)
      000379 7B 02            [ 1]  656 	ld	a, (0x02, sp)
      00037B 27 06            [ 1]  657 	jreq	00105$
                                    658 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 294: icselection = (uint8_t)TIM2_ICSELECTION_INDIRECTTI;
      00037D A6 02            [ 1]  659 	ld	a, #0x02
      00037F 6B 02            [ 1]  660 	ld	(0x02, sp), a
      000381 20 04            [ 2]  661 	jra	00106$
      000383                        662 00105$:
                                    663 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 298: icselection = (uint8_t)TIM2_ICSELECTION_DIRECTTI;
      000383 A6 01            [ 1]  664 	ld	a, #0x01
      000385 6B 02            [ 1]  665 	ld	(0x02, sp), a
      000387                        666 00106$:
                                    667 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 301: if (TIM2_Channel == TIM2_CHANNEL_1)
      000387 0D 03            [ 1]  668 	tnz	(0x03, sp)
      000389 26 22            [ 1]  669 	jrne	00108$
                                    670 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 304: TI1_Config((uint8_t)TIM2_ICPolarity, (uint8_t)TIM2_ICSelection,
      00038B 7B 09            [ 1]  671 	ld	a, (0x09, sp)
      00038D 88               [ 1]  672 	push	a
      00038E 7B 08            [ 1]  673 	ld	a, (0x08, sp)
      000390 88               [ 1]  674 	push	a
      000391 7B 08            [ 1]  675 	ld	a, (0x08, sp)
      000393 CDr09rCE         [ 4]  676 	call	_TI1_Config
                                    677 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 308: TIM2_SetIC1Prescaler(TIM2_ICPrescaler);
      000396 7B 08            [ 1]  678 	ld	a, (0x08, sp)
      000398 CDr08r2E         [ 4]  679 	call	_TIM2_SetIC1Prescaler
                                    680 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 311: TI2_Config(icpolarity, icselection, TIM2_ICFilter);
      00039B 7B 09            [ 1]  681 	ld	a, (0x09, sp)
      00039D 88               [ 1]  682 	push	a
      00039E 7B 03            [ 1]  683 	ld	a, (0x03, sp)
      0003A0 88               [ 1]  684 	push	a
      0003A1 7B 03            [ 1]  685 	ld	a, (0x03, sp)
      0003A3 CDr0Ar08         [ 4]  686 	call	_TI2_Config
                                    687 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 314: TIM2_SetIC2Prescaler(TIM2_ICPrescaler);
      0003A6 7B 08            [ 1]  688 	ld	a, (0x08, sp)
      0003A8 CDr08r5D         [ 4]  689 	call	_TIM2_SetIC2Prescaler
      0003AB 20 20            [ 2]  690 	jra	00110$
      0003AD                        691 00108$:
                                    692 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 319: TI2_Config((uint8_t)TIM2_ICPolarity, (uint8_t)TIM2_ICSelection,
      0003AD 7B 09            [ 1]  693 	ld	a, (0x09, sp)
      0003AF 88               [ 1]  694 	push	a
      0003B0 7B 08            [ 1]  695 	ld	a, (0x08, sp)
      0003B2 88               [ 1]  696 	push	a
      0003B3 7B 08            [ 1]  697 	ld	a, (0x08, sp)
      0003B5 CDr0Ar08         [ 4]  698 	call	_TI2_Config
                                    699 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 323: TIM2_SetIC2Prescaler(TIM2_ICPrescaler);
      0003B8 7B 08            [ 1]  700 	ld	a, (0x08, sp)
      0003BA CDr08r5D         [ 4]  701 	call	_TIM2_SetIC2Prescaler
                                    702 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 326: TI1_Config((uint8_t)icpolarity, icselection, (uint8_t)TIM2_ICFilter);
      0003BD 7B 09            [ 1]  703 	ld	a, (0x09, sp)
      0003BF 88               [ 1]  704 	push	a
      0003C0 7B 03            [ 1]  705 	ld	a, (0x03, sp)
      0003C2 88               [ 1]  706 	push	a
      0003C3 7B 03            [ 1]  707 	ld	a, (0x03, sp)
      0003C5 CDr09rCE         [ 4]  708 	call	_TI1_Config
                                    709 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 329: TIM2_SetIC1Prescaler(TIM2_ICPrescaler);
      0003C8 7B 08            [ 1]  710 	ld	a, (0x08, sp)
      0003CA CDr08r2E         [ 4]  711 	call	_TIM2_SetIC1Prescaler
      0003CD                        712 00110$:
                                    713 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 331: }
      0003CD 1E 04            [ 2]  714 	ldw	x, (4, sp)
      0003CF 5B 09            [ 2]  715 	addw	sp, #9
      0003D1 FC               [ 2]  716 	jp	(x)
                                    717 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 339: void TIM2_Cmd(FunctionalState NewState)
                                    718 ;	-----------------------------------------
                                    719 ;	 function TIM2_Cmd
                                    720 ;	-----------------------------------------
      0003D2                        721 _TIM2_Cmd:
      0003D2 88               [ 1]  722 	push	a
                                    723 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 342: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0003D3 6B 01            [ 1]  724 	ld	(0x01, sp), a
      0003D5 27 10            [ 1]  725 	jreq	00107$
      0003D7 0D 01            [ 1]  726 	tnz	(0x01, sp)
      0003D9 26 0C            [ 1]  727 	jrne	00107$
      0003DB 4B 56            [ 1]  728 	push	#0x56
      0003DD 4B 01            [ 1]  729 	push	#0x01
      0003DF 5F               [ 1]  730 	clrw	x
      0003E0 89               [ 2]  731 	pushw	x
      0003E1 AEr00r00         [ 2]  732 	ldw	x, #(___str_0+0)
      0003E4 CDr00r00         [ 4]  733 	call	_assert_failed
      0003E7                        734 00107$:
                                    735 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 347: TIM2->CR1 |= (uint8_t)TIM2_CR1_CEN;
      0003E7 C6 53 00         [ 1]  736 	ld	a, 0x5300
                                    737 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 345: if (NewState != DISABLE)
      0003EA 0D 01            [ 1]  738 	tnz	(0x01, sp)
      0003EC 27 07            [ 1]  739 	jreq	00102$
                                    740 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 347: TIM2->CR1 |= (uint8_t)TIM2_CR1_CEN;
      0003EE AA 01            [ 1]  741 	or	a, #0x01
      0003F0 C7 53 00         [ 1]  742 	ld	0x5300, a
      0003F3 20 05            [ 2]  743 	jra	00104$
      0003F5                        744 00102$:
                                    745 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 351: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_CEN);
      0003F5 A4 FE            [ 1]  746 	and	a, #0xfe
      0003F7 C7 53 00         [ 1]  747 	ld	0x5300, a
      0003FA                        748 00104$:
                                    749 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 353: }
      0003FA 84               [ 1]  750 	pop	a
      0003FB 81               [ 4]  751 	ret
                                    752 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 368: void TIM2_ITConfig(TIM2_IT_TypeDef TIM2_IT, FunctionalState NewState)
                                    753 ;	-----------------------------------------
                                    754 ;	 function TIM2_ITConfig
                                    755 ;	-----------------------------------------
      0003FC                        756 _TIM2_ITConfig:
      0003FC 88               [ 1]  757 	push	a
                                    758 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 371: assert_param(IS_TIM2_IT_OK(TIM2_IT));
      0003FD 4D               [ 1]  759 	tnz	a
      0003FE 27 04            [ 1]  760 	jreq	00106$
      000400 A1 0F            [ 1]  761 	cp	a, #0x0f
      000402 23 0E            [ 2]  762 	jrule	00107$
      000404                        763 00106$:
      000404 88               [ 1]  764 	push	a
      000405 4B 73            [ 1]  765 	push	#0x73
      000407 4B 01            [ 1]  766 	push	#0x01
      000409 5F               [ 1]  767 	clrw	x
      00040A 89               [ 2]  768 	pushw	x
      00040B AEr00r00         [ 2]  769 	ldw	x, #(___str_0+0)
      00040E CDr00r00         [ 4]  770 	call	_assert_failed
      000411 84               [ 1]  771 	pop	a
      000412                        772 00107$:
                                    773 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 372: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000412 0D 04            [ 1]  774 	tnz	(0x04, sp)
      000414 27 12            [ 1]  775 	jreq	00112$
      000416 0D 04            [ 1]  776 	tnz	(0x04, sp)
      000418 26 0E            [ 1]  777 	jrne	00112$
      00041A 88               [ 1]  778 	push	a
      00041B 4B 74            [ 1]  779 	push	#0x74
      00041D 4B 01            [ 1]  780 	push	#0x01
      00041F 5F               [ 1]  781 	clrw	x
      000420 89               [ 2]  782 	pushw	x
      000421 AEr00r00         [ 2]  783 	ldw	x, #(___str_0+0)
      000424 CDr00r00         [ 4]  784 	call	_assert_failed
      000427 84               [ 1]  785 	pop	a
      000428                        786 00112$:
                                    787 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 377: TIM2->IER |= (uint8_t)TIM2_IT;
      000428 AE 53 03         [ 2]  788 	ldw	x, #0x5303
      00042B 88               [ 1]  789 	push	a
      00042C F6               [ 1]  790 	ld	a, (x)
      00042D 6B 02            [ 1]  791 	ld	(0x02, sp), a
      00042F 84               [ 1]  792 	pop	a
                                    793 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 374: if (NewState != DISABLE)
      000430 0D 04            [ 1]  794 	tnz	(0x04, sp)
      000432 27 07            [ 1]  795 	jreq	00102$
                                    796 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 377: TIM2->IER |= (uint8_t)TIM2_IT;
      000434 1A 01            [ 1]  797 	or	a, (0x01, sp)
      000436 C7 53 03         [ 1]  798 	ld	0x5303, a
      000439 20 06            [ 2]  799 	jra	00104$
      00043B                        800 00102$:
                                    801 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 382: TIM2->IER &= (uint8_t)(~TIM2_IT);
      00043B 43               [ 1]  802 	cpl	a
      00043C 14 01            [ 1]  803 	and	a, (0x01, sp)
      00043E C7 53 03         [ 1]  804 	ld	0x5303, a
      000441                        805 00104$:
                                    806 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 384: }
      000441 84               [ 1]  807 	pop	a
      000442 85               [ 2]  808 	popw	x
      000443 84               [ 1]  809 	pop	a
      000444 FC               [ 2]  810 	jp	(x)
                                    811 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 392: void TIM2_UpdateDisableConfig(FunctionalState NewState)
                                    812 ;	-----------------------------------------
                                    813 ;	 function TIM2_UpdateDisableConfig
                                    814 ;	-----------------------------------------
      000445                        815 _TIM2_UpdateDisableConfig:
      000445 88               [ 1]  816 	push	a
                                    817 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 395: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000446 6B 01            [ 1]  818 	ld	(0x01, sp), a
      000448 27 10            [ 1]  819 	jreq	00107$
      00044A 0D 01            [ 1]  820 	tnz	(0x01, sp)
      00044C 26 0C            [ 1]  821 	jrne	00107$
      00044E 4B 8B            [ 1]  822 	push	#0x8b
      000450 4B 01            [ 1]  823 	push	#0x01
      000452 5F               [ 1]  824 	clrw	x
      000453 89               [ 2]  825 	pushw	x
      000454 AEr00r00         [ 2]  826 	ldw	x, #(___str_0+0)
      000457 CDr00r00         [ 4]  827 	call	_assert_failed
      00045A                        828 00107$:
                                    829 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 400: TIM2->CR1 |= (uint8_t)TIM2_CR1_UDIS;
      00045A C6 53 00         [ 1]  830 	ld	a, 0x5300
                                    831 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 398: if (NewState != DISABLE)
      00045D 0D 01            [ 1]  832 	tnz	(0x01, sp)
      00045F 27 07            [ 1]  833 	jreq	00102$
                                    834 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 400: TIM2->CR1 |= (uint8_t)TIM2_CR1_UDIS;
      000461 AA 02            [ 1]  835 	or	a, #0x02
      000463 C7 53 00         [ 1]  836 	ld	0x5300, a
      000466 20 05            [ 2]  837 	jra	00104$
      000468                        838 00102$:
                                    839 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 404: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_UDIS);
      000468 A4 FD            [ 1]  840 	and	a, #0xfd
      00046A C7 53 00         [ 1]  841 	ld	0x5300, a
      00046D                        842 00104$:
                                    843 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 406: }
      00046D 84               [ 1]  844 	pop	a
      00046E 81               [ 4]  845 	ret
                                    846 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 416: void TIM2_UpdateRequestConfig(TIM2_UpdateSource_TypeDef TIM2_UpdateSource)
                                    847 ;	-----------------------------------------
                                    848 ;	 function TIM2_UpdateRequestConfig
                                    849 ;	-----------------------------------------
      00046F                        850 _TIM2_UpdateRequestConfig:
      00046F 88               [ 1]  851 	push	a
                                    852 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 419: assert_param(IS_TIM2_UPDATE_SOURCE_OK(TIM2_UpdateSource));
      000470 6B 01            [ 1]  853 	ld	(0x01, sp), a
      000472 27 10            [ 1]  854 	jreq	00107$
      000474 0D 01            [ 1]  855 	tnz	(0x01, sp)
      000476 26 0C            [ 1]  856 	jrne	00107$
      000478 4B A3            [ 1]  857 	push	#0xa3
      00047A 4B 01            [ 1]  858 	push	#0x01
      00047C 5F               [ 1]  859 	clrw	x
      00047D 89               [ 2]  860 	pushw	x
      00047E AEr00r00         [ 2]  861 	ldw	x, #(___str_0+0)
      000481 CDr00r00         [ 4]  862 	call	_assert_failed
      000484                        863 00107$:
                                    864 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 424: TIM2->CR1 |= (uint8_t)TIM2_CR1_URS;
      000484 C6 53 00         [ 1]  865 	ld	a, 0x5300
                                    866 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 422: if (TIM2_UpdateSource != TIM2_UPDATESOURCE_GLOBAL)
      000487 0D 01            [ 1]  867 	tnz	(0x01, sp)
      000489 27 07            [ 1]  868 	jreq	00102$
                                    869 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 424: TIM2->CR1 |= (uint8_t)TIM2_CR1_URS;
      00048B AA 04            [ 1]  870 	or	a, #0x04
      00048D C7 53 00         [ 1]  871 	ld	0x5300, a
      000490 20 05            [ 2]  872 	jra	00104$
      000492                        873 00102$:
                                    874 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 428: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_URS);
      000492 A4 FB            [ 1]  875 	and	a, #0xfb
      000494 C7 53 00         [ 1]  876 	ld	0x5300, a
      000497                        877 00104$:
                                    878 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 430: }
      000497 84               [ 1]  879 	pop	a
      000498 81               [ 4]  880 	ret
                                    881 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 440: void TIM2_SelectOnePulseMode(TIM2_OPMode_TypeDef TIM2_OPMode)
                                    882 ;	-----------------------------------------
                                    883 ;	 function TIM2_SelectOnePulseMode
                                    884 ;	-----------------------------------------
      000499                        885 _TIM2_SelectOnePulseMode:
      000499 88               [ 1]  886 	push	a
                                    887 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 443: assert_param(IS_TIM2_OPM_MODE_OK(TIM2_OPMode));
      00049A 6B 01            [ 1]  888 	ld	(0x01, sp), a
      00049C 26 10            [ 1]  889 	jrne	00107$
      00049E 0D 01            [ 1]  890 	tnz	(0x01, sp)
      0004A0 27 0C            [ 1]  891 	jreq	00107$
      0004A2 4B BB            [ 1]  892 	push	#0xbb
      0004A4 4B 01            [ 1]  893 	push	#0x01
      0004A6 5F               [ 1]  894 	clrw	x
      0004A7 89               [ 2]  895 	pushw	x
      0004A8 AEr00r00         [ 2]  896 	ldw	x, #(___str_0+0)
      0004AB CDr00r00         [ 4]  897 	call	_assert_failed
      0004AE                        898 00107$:
                                    899 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 448: TIM2->CR1 |= (uint8_t)TIM2_CR1_OPM;
      0004AE C6 53 00         [ 1]  900 	ld	a, 0x5300
                                    901 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 446: if (TIM2_OPMode != TIM2_OPMODE_REPETITIVE)
      0004B1 0D 01            [ 1]  902 	tnz	(0x01, sp)
      0004B3 27 07            [ 1]  903 	jreq	00102$
                                    904 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 448: TIM2->CR1 |= (uint8_t)TIM2_CR1_OPM;
      0004B5 AA 08            [ 1]  905 	or	a, #0x08
      0004B7 C7 53 00         [ 1]  906 	ld	0x5300, a
      0004BA 20 05            [ 2]  907 	jra	00104$
      0004BC                        908 00102$:
                                    909 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 452: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_OPM);
      0004BC A4 F7            [ 1]  910 	and	a, #0xf7
      0004BE C7 53 00         [ 1]  911 	ld	0x5300, a
      0004C1                        912 00104$:
                                    913 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 454: }
      0004C1 84               [ 1]  914 	pop	a
      0004C2 81               [ 4]  915 	ret
                                    916 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 484: void TIM2_PrescalerConfig(TIM2_Prescaler_TypeDef Prescaler,
                                    917 ;	-----------------------------------------
                                    918 ;	 function TIM2_PrescalerConfig
                                    919 ;	-----------------------------------------
      0004C3                        920 _TIM2_PrescalerConfig:
                                    921 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 488: assert_param(IS_TIM2_PRESCALER_RELOAD_OK(TIM2_PSCReloadMode));
      0004C3 0D 03            [ 1]  922 	tnz	(0x03, sp)
      0004C5 27 12            [ 1]  923 	jreq	00104$
      0004C7 0D 03            [ 1]  924 	tnz	(0x03, sp)
      0004C9 26 0E            [ 1]  925 	jrne	00104$
      0004CB 88               [ 1]  926 	push	a
      0004CC 4B E8            [ 1]  927 	push	#0xe8
      0004CE 4B 01            [ 1]  928 	push	#0x01
      0004D0 5F               [ 1]  929 	clrw	x
      0004D1 89               [ 2]  930 	pushw	x
      0004D2 AEr00r00         [ 2]  931 	ldw	x, #(___str_0+0)
      0004D5 CDr00r00         [ 4]  932 	call	_assert_failed
      0004D8 84               [ 1]  933 	pop	a
      0004D9                        934 00104$:
                                    935 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 489: assert_param(IS_TIM2_PRESCALER_OK(Prescaler));
      0004D9 4D               [ 1]  936 	tnz	a
      0004DA 27 4A            [ 1]  937 	jreq	00109$
      0004DC A1 01            [ 1]  938 	cp	a, #0x01
      0004DE 27 46            [ 1]  939 	jreq	00109$
      0004E0 A1 02            [ 1]  940 	cp	a, #0x02
      0004E2 27 42            [ 1]  941 	jreq	00109$
      0004E4 A1 03            [ 1]  942 	cp	a, #0x03
      0004E6 27 3E            [ 1]  943 	jreq	00109$
      0004E8 A1 04            [ 1]  944 	cp	a, #0x04
      0004EA 27 3A            [ 1]  945 	jreq	00109$
      0004EC A1 05            [ 1]  946 	cp	a, #0x05
      0004EE 27 36            [ 1]  947 	jreq	00109$
      0004F0 A1 06            [ 1]  948 	cp	a, #0x06
      0004F2 27 32            [ 1]  949 	jreq	00109$
      0004F4 A1 07            [ 1]  950 	cp	a, #0x07
      0004F6 27 2E            [ 1]  951 	jreq	00109$
      0004F8 A1 08            [ 1]  952 	cp	a, #0x08
      0004FA 27 2A            [ 1]  953 	jreq	00109$
      0004FC A1 09            [ 1]  954 	cp	a, #0x09
      0004FE 27 26            [ 1]  955 	jreq	00109$
      000500 A1 0A            [ 1]  956 	cp	a, #0x0a
      000502 27 22            [ 1]  957 	jreq	00109$
      000504 A1 0B            [ 1]  958 	cp	a, #0x0b
      000506 27 1E            [ 1]  959 	jreq	00109$
      000508 A1 0C            [ 1]  960 	cp	a, #0x0c
      00050A 27 1A            [ 1]  961 	jreq	00109$
      00050C A1 0D            [ 1]  962 	cp	a, #0x0d
      00050E 27 16            [ 1]  963 	jreq	00109$
      000510 A1 0E            [ 1]  964 	cp	a, #0x0e
      000512 27 12            [ 1]  965 	jreq	00109$
      000514 A1 0F            [ 1]  966 	cp	a, #0x0f
      000516 27 0E            [ 1]  967 	jreq	00109$
      000518 88               [ 1]  968 	push	a
      000519 4B E9            [ 1]  969 	push	#0xe9
      00051B 4B 01            [ 1]  970 	push	#0x01
      00051D 5F               [ 1]  971 	clrw	x
      00051E 89               [ 2]  972 	pushw	x
      00051F AEr00r00         [ 2]  973 	ldw	x, #(___str_0+0)
      000522 CDr00r00         [ 4]  974 	call	_assert_failed
      000525 84               [ 1]  975 	pop	a
      000526                        976 00109$:
                                    977 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 492: TIM2->PSCR = (uint8_t)Prescaler;
      000526 C7 53 0E         [ 1]  978 	ld	0x530e, a
                                    979 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 495: TIM2->EGR = (uint8_t)TIM2_PSCReloadMode;
      000529 7B 03            [ 1]  980 	ld	a, (0x03, sp)
      00052B C7 53 06         [ 1]  981 	ld	0x5306, a
                                    982 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 496: }
      00052E 85               [ 2]  983 	popw	x
      00052F 84               [ 1]  984 	pop	a
      000530 FC               [ 2]  985 	jp	(x)
                                    986 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 507: void TIM2_ForcedOC1Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)
                                    987 ;	-----------------------------------------
                                    988 ;	 function TIM2_ForcedOC1Config
                                    989 ;	-----------------------------------------
      000531                        990 _TIM2_ForcedOC1Config:
      000531 88               [ 1]  991 	push	a
                                    992 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 510: assert_param(IS_TIM2_FORCED_ACTION_OK(TIM2_ForcedAction));
      000532 6B 01            [ 1]  993 	ld	(0x01, sp), a
      000534 A1 50            [ 1]  994 	cp	a, #0x50
      000536 27 12            [ 1]  995 	jreq	00104$
      000538 7B 01            [ 1]  996 	ld	a, (0x01, sp)
      00053A A1 40            [ 1]  997 	cp	a, #0x40
      00053C 27 0C            [ 1]  998 	jreq	00104$
      00053E 4B FE            [ 1]  999 	push	#0xfe
      000540 4B 01            [ 1] 1000 	push	#0x01
      000542 5F               [ 1] 1001 	clrw	x
      000543 89               [ 2] 1002 	pushw	x
      000544 AEr00r00         [ 2] 1003 	ldw	x, #(___str_0+0)
      000547 CDr00r00         [ 4] 1004 	call	_assert_failed
      00054A                       1005 00104$:
                                   1006 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 513: TIM2->CCMR1  =  (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_OCM))  
      00054A C6 53 07         [ 1] 1007 	ld	a, 0x5307
      00054D A4 8F            [ 1] 1008 	and	a, #0x8f
                                   1009 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 514: | (uint8_t)TIM2_ForcedAction);
      00054F 1A 01            [ 1] 1010 	or	a, (0x01, sp)
      000551 C7 53 07         [ 1] 1011 	ld	0x5307, a
                                   1012 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 515: }
      000554 84               [ 1] 1013 	pop	a
      000555 81               [ 4] 1014 	ret
                                   1015 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 526: void TIM2_ForcedOC2Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)
                                   1016 ;	-----------------------------------------
                                   1017 ;	 function TIM2_ForcedOC2Config
                                   1018 ;	-----------------------------------------
      000556                       1019 _TIM2_ForcedOC2Config:
      000556 88               [ 1] 1020 	push	a
                                   1021 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 529: assert_param(IS_TIM2_FORCED_ACTION_OK(TIM2_ForcedAction));
      000557 6B 01            [ 1] 1022 	ld	(0x01, sp), a
      000559 A1 50            [ 1] 1023 	cp	a, #0x50
      00055B 27 12            [ 1] 1024 	jreq	00104$
      00055D 7B 01            [ 1] 1025 	ld	a, (0x01, sp)
      00055F A1 40            [ 1] 1026 	cp	a, #0x40
      000561 27 0C            [ 1] 1027 	jreq	00104$
      000563 4B 11            [ 1] 1028 	push	#0x11
      000565 4B 02            [ 1] 1029 	push	#0x02
      000567 5F               [ 1] 1030 	clrw	x
      000568 89               [ 2] 1031 	pushw	x
      000569 AEr00r00         [ 2] 1032 	ldw	x, #(___str_0+0)
      00056C CDr00r00         [ 4] 1033 	call	_assert_failed
      00056F                       1034 00104$:
                                   1035 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 532: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_OCM))  
      00056F C6 53 08         [ 1] 1036 	ld	a, 0x5308
      000572 A4 8F            [ 1] 1037 	and	a, #0x8f
                                   1038 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 533: | (uint8_t)TIM2_ForcedAction);
      000574 1A 01            [ 1] 1039 	or	a, (0x01, sp)
      000576 C7 53 08         [ 1] 1040 	ld	0x5308, a
                                   1041 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 534: }
      000579 84               [ 1] 1042 	pop	a
      00057A 81               [ 4] 1043 	ret
                                   1044 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 545: void TIM2_ForcedOC3Config(TIM2_ForcedAction_TypeDef TIM2_ForcedAction)
                                   1045 ;	-----------------------------------------
                                   1046 ;	 function TIM2_ForcedOC3Config
                                   1047 ;	-----------------------------------------
      00057B                       1048 _TIM2_ForcedOC3Config:
      00057B 88               [ 1] 1049 	push	a
                                   1050 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 548: assert_param(IS_TIM2_FORCED_ACTION_OK(TIM2_ForcedAction));
      00057C 6B 01            [ 1] 1051 	ld	(0x01, sp), a
      00057E A1 50            [ 1] 1052 	cp	a, #0x50
      000580 27 12            [ 1] 1053 	jreq	00104$
      000582 7B 01            [ 1] 1054 	ld	a, (0x01, sp)
      000584 A1 40            [ 1] 1055 	cp	a, #0x40
      000586 27 0C            [ 1] 1056 	jreq	00104$
      000588 4B 24            [ 1] 1057 	push	#0x24
      00058A 4B 02            [ 1] 1058 	push	#0x02
      00058C 5F               [ 1] 1059 	clrw	x
      00058D 89               [ 2] 1060 	pushw	x
      00058E AEr00r00         [ 2] 1061 	ldw	x, #(___str_0+0)
      000591 CDr00r00         [ 4] 1062 	call	_assert_failed
      000594                       1063 00104$:
                                   1064 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 551: TIM2->CCMR3  =  (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_OCM))
      000594 C6 53 09         [ 1] 1065 	ld	a, 0x5309
      000597 A4 8F            [ 1] 1066 	and	a, #0x8f
                                   1067 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 552: | (uint8_t)TIM2_ForcedAction);
      000599 1A 01            [ 1] 1068 	or	a, (0x01, sp)
      00059B C7 53 09         [ 1] 1069 	ld	0x5309, a
                                   1070 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 553: }
      00059E 84               [ 1] 1071 	pop	a
      00059F 81               [ 4] 1072 	ret
                                   1073 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 561: void TIM2_ARRPreloadConfig(FunctionalState NewState)
                                   1074 ;	-----------------------------------------
                                   1075 ;	 function TIM2_ARRPreloadConfig
                                   1076 ;	-----------------------------------------
      0005A0                       1077 _TIM2_ARRPreloadConfig:
      0005A0 88               [ 1] 1078 	push	a
                                   1079 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 564: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0005A1 6B 01            [ 1] 1080 	ld	(0x01, sp), a
      0005A3 27 10            [ 1] 1081 	jreq	00107$
      0005A5 0D 01            [ 1] 1082 	tnz	(0x01, sp)
      0005A7 26 0C            [ 1] 1083 	jrne	00107$
      0005A9 4B 34            [ 1] 1084 	push	#0x34
      0005AB 4B 02            [ 1] 1085 	push	#0x02
      0005AD 5F               [ 1] 1086 	clrw	x
      0005AE 89               [ 2] 1087 	pushw	x
      0005AF AEr00r00         [ 2] 1088 	ldw	x, #(___str_0+0)
      0005B2 CDr00r00         [ 4] 1089 	call	_assert_failed
      0005B5                       1090 00107$:
                                   1091 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 569: TIM2->CR1 |= (uint8_t)TIM2_CR1_ARPE;
      0005B5 C6 53 00         [ 1] 1092 	ld	a, 0x5300
                                   1093 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 567: if (NewState != DISABLE)
      0005B8 0D 01            [ 1] 1094 	tnz	(0x01, sp)
      0005BA 27 07            [ 1] 1095 	jreq	00102$
                                   1096 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 569: TIM2->CR1 |= (uint8_t)TIM2_CR1_ARPE;
      0005BC AA 80            [ 1] 1097 	or	a, #0x80
      0005BE C7 53 00         [ 1] 1098 	ld	0x5300, a
      0005C1 20 05            [ 2] 1099 	jra	00104$
      0005C3                       1100 00102$:
                                   1101 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 573: TIM2->CR1 &= (uint8_t)(~TIM2_CR1_ARPE);
      0005C3 A4 7F            [ 1] 1102 	and	a, #0x7f
      0005C5 C7 53 00         [ 1] 1103 	ld	0x5300, a
      0005C8                       1104 00104$:
                                   1105 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 575: }
      0005C8 84               [ 1] 1106 	pop	a
      0005C9 81               [ 4] 1107 	ret
                                   1108 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 583: void TIM2_OC1PreloadConfig(FunctionalState NewState)
                                   1109 ;	-----------------------------------------
                                   1110 ;	 function TIM2_OC1PreloadConfig
                                   1111 ;	-----------------------------------------
      0005CA                       1112 _TIM2_OC1PreloadConfig:
      0005CA 88               [ 1] 1113 	push	a
                                   1114 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 586: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0005CB 6B 01            [ 1] 1115 	ld	(0x01, sp), a
      0005CD 27 10            [ 1] 1116 	jreq	00107$
      0005CF 0D 01            [ 1] 1117 	tnz	(0x01, sp)
      0005D1 26 0C            [ 1] 1118 	jrne	00107$
      0005D3 4B 4A            [ 1] 1119 	push	#0x4a
      0005D5 4B 02            [ 1] 1120 	push	#0x02
      0005D7 5F               [ 1] 1121 	clrw	x
      0005D8 89               [ 2] 1122 	pushw	x
      0005D9 AEr00r00         [ 2] 1123 	ldw	x, #(___str_0+0)
      0005DC CDr00r00         [ 4] 1124 	call	_assert_failed
      0005DF                       1125 00107$:
                                   1126 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 591: TIM2->CCMR1 |= (uint8_t)TIM2_CCMR_OCxPE;
      0005DF C6 53 07         [ 1] 1127 	ld	a, 0x5307
                                   1128 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 589: if (NewState != DISABLE)
      0005E2 0D 01            [ 1] 1129 	tnz	(0x01, sp)
      0005E4 27 07            [ 1] 1130 	jreq	00102$
                                   1131 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 591: TIM2->CCMR1 |= (uint8_t)TIM2_CCMR_OCxPE;
      0005E6 AA 08            [ 1] 1132 	or	a, #0x08
      0005E8 C7 53 07         [ 1] 1133 	ld	0x5307, a
      0005EB 20 05            [ 2] 1134 	jra	00104$
      0005ED                       1135 00102$:
                                   1136 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 595: TIM2->CCMR1 &= (uint8_t)(~TIM2_CCMR_OCxPE);
      0005ED A4 F7            [ 1] 1137 	and	a, #0xf7
      0005EF C7 53 07         [ 1] 1138 	ld	0x5307, a
      0005F2                       1139 00104$:
                                   1140 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 597: }
      0005F2 84               [ 1] 1141 	pop	a
      0005F3 81               [ 4] 1142 	ret
                                   1143 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 605: void TIM2_OC2PreloadConfig(FunctionalState NewState)
                                   1144 ;	-----------------------------------------
                                   1145 ;	 function TIM2_OC2PreloadConfig
                                   1146 ;	-----------------------------------------
      0005F4                       1147 _TIM2_OC2PreloadConfig:
      0005F4 88               [ 1] 1148 	push	a
                                   1149 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 608: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0005F5 6B 01            [ 1] 1150 	ld	(0x01, sp), a
      0005F7 27 10            [ 1] 1151 	jreq	00107$
      0005F9 0D 01            [ 1] 1152 	tnz	(0x01, sp)
      0005FB 26 0C            [ 1] 1153 	jrne	00107$
      0005FD 4B 60            [ 1] 1154 	push	#0x60
      0005FF 4B 02            [ 1] 1155 	push	#0x02
      000601 5F               [ 1] 1156 	clrw	x
      000602 89               [ 2] 1157 	pushw	x
      000603 AEr00r00         [ 2] 1158 	ldw	x, #(___str_0+0)
      000606 CDr00r00         [ 4] 1159 	call	_assert_failed
      000609                       1160 00107$:
                                   1161 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 613: TIM2->CCMR2 |= (uint8_t)TIM2_CCMR_OCxPE;
      000609 C6 53 08         [ 1] 1162 	ld	a, 0x5308
                                   1163 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 611: if (NewState != DISABLE)
      00060C 0D 01            [ 1] 1164 	tnz	(0x01, sp)
      00060E 27 07            [ 1] 1165 	jreq	00102$
                                   1166 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 613: TIM2->CCMR2 |= (uint8_t)TIM2_CCMR_OCxPE;
      000610 AA 08            [ 1] 1167 	or	a, #0x08
      000612 C7 53 08         [ 1] 1168 	ld	0x5308, a
      000615 20 05            [ 2] 1169 	jra	00104$
      000617                       1170 00102$:
                                   1171 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 617: TIM2->CCMR2 &= (uint8_t)(~TIM2_CCMR_OCxPE);
      000617 A4 F7            [ 1] 1172 	and	a, #0xf7
      000619 C7 53 08         [ 1] 1173 	ld	0x5308, a
      00061C                       1174 00104$:
                                   1175 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 619: }
      00061C 84               [ 1] 1176 	pop	a
      00061D 81               [ 4] 1177 	ret
                                   1178 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 627: void TIM2_OC3PreloadConfig(FunctionalState NewState)
                                   1179 ;	-----------------------------------------
                                   1180 ;	 function TIM2_OC3PreloadConfig
                                   1181 ;	-----------------------------------------
      00061E                       1182 _TIM2_OC3PreloadConfig:
      00061E 88               [ 1] 1183 	push	a
                                   1184 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 630: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      00061F 6B 01            [ 1] 1185 	ld	(0x01, sp), a
      000621 27 10            [ 1] 1186 	jreq	00107$
      000623 0D 01            [ 1] 1187 	tnz	(0x01, sp)
      000625 26 0C            [ 1] 1188 	jrne	00107$
      000627 4B 76            [ 1] 1189 	push	#0x76
      000629 4B 02            [ 1] 1190 	push	#0x02
      00062B 5F               [ 1] 1191 	clrw	x
      00062C 89               [ 2] 1192 	pushw	x
      00062D AEr00r00         [ 2] 1193 	ldw	x, #(___str_0+0)
      000630 CDr00r00         [ 4] 1194 	call	_assert_failed
      000633                       1195 00107$:
                                   1196 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 635: TIM2->CCMR3 |= (uint8_t)TIM2_CCMR_OCxPE;
      000633 C6 53 09         [ 1] 1197 	ld	a, 0x5309
                                   1198 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 633: if (NewState != DISABLE)
      000636 0D 01            [ 1] 1199 	tnz	(0x01, sp)
      000638 27 07            [ 1] 1200 	jreq	00102$
                                   1201 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 635: TIM2->CCMR3 |= (uint8_t)TIM2_CCMR_OCxPE;
      00063A AA 08            [ 1] 1202 	or	a, #0x08
      00063C C7 53 09         [ 1] 1203 	ld	0x5309, a
      00063F 20 05            [ 2] 1204 	jra	00104$
      000641                       1205 00102$:
                                   1206 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 639: TIM2->CCMR3 &= (uint8_t)(~TIM2_CCMR_OCxPE);
      000641 A4 F7            [ 1] 1207 	and	a, #0xf7
      000643 C7 53 09         [ 1] 1208 	ld	0x5309, a
      000646                       1209 00104$:
                                   1210 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 641: }
      000646 84               [ 1] 1211 	pop	a
      000647 81               [ 4] 1212 	ret
                                   1213 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 653: void TIM2_GenerateEvent(TIM2_EventSource_TypeDef TIM2_EventSource)
                                   1214 ;	-----------------------------------------
                                   1215 ;	 function TIM2_GenerateEvent
                                   1216 ;	-----------------------------------------
      000648                       1217 _TIM2_GenerateEvent:
                                   1218 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 656: assert_param(IS_TIM2_EVENT_SOURCE_OK(TIM2_EventSource));
      000648 4D               [ 1] 1219 	tnz	a
      000649 26 0E            [ 1] 1220 	jrne	00104$
      00064B 88               [ 1] 1221 	push	a
      00064C 4B 90            [ 1] 1222 	push	#0x90
      00064E 4B 02            [ 1] 1223 	push	#0x02
      000650 5F               [ 1] 1224 	clrw	x
      000651 89               [ 2] 1225 	pushw	x
      000652 AEr00r00         [ 2] 1226 	ldw	x, #(___str_0+0)
      000655 CDr00r00         [ 4] 1227 	call	_assert_failed
      000658 84               [ 1] 1228 	pop	a
      000659                       1229 00104$:
                                   1230 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 659: TIM2->EGR = (uint8_t)TIM2_EventSource;
      000659 C7 53 06         [ 1] 1231 	ld	0x5306, a
                                   1232 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 660: }
      00065C 81               [ 4] 1233 	ret
                                   1234 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 670: void TIM2_OC1PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)
                                   1235 ;	-----------------------------------------
                                   1236 ;	 function TIM2_OC1PolarityConfig
                                   1237 ;	-----------------------------------------
      00065D                       1238 _TIM2_OC1PolarityConfig:
      00065D 88               [ 1] 1239 	push	a
                                   1240 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 673: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      00065E 6B 01            [ 1] 1241 	ld	(0x01, sp), a
      000660 27 12            [ 1] 1242 	jreq	00107$
      000662 7B 01            [ 1] 1243 	ld	a, (0x01, sp)
      000664 A1 22            [ 1] 1244 	cp	a, #0x22
      000666 27 0C            [ 1] 1245 	jreq	00107$
      000668 4B A1            [ 1] 1246 	push	#0xa1
      00066A 4B 02            [ 1] 1247 	push	#0x02
      00066C 5F               [ 1] 1248 	clrw	x
      00066D 89               [ 2] 1249 	pushw	x
      00066E AEr00r00         [ 2] 1250 	ldw	x, #(___str_0+0)
      000671 CDr00r00         [ 4] 1251 	call	_assert_failed
      000674                       1252 00107$:
                                   1253 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 678: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1P;
      000674 C6 53 0A         [ 1] 1254 	ld	a, 0x530a
                                   1255 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 676: if (TIM2_OCPolarity != TIM2_OCPOLARITY_HIGH)
      000677 0D 01            [ 1] 1256 	tnz	(0x01, sp)
      000679 27 07            [ 1] 1257 	jreq	00102$
                                   1258 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 678: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1P;
      00067B AA 02            [ 1] 1259 	or	a, #0x02
      00067D C7 53 0A         [ 1] 1260 	ld	0x530a, a
      000680 20 05            [ 2] 1261 	jra	00104$
      000682                       1262 00102$:
                                   1263 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 682: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1P);
      000682 A4 FD            [ 1] 1264 	and	a, #0xfd
      000684 C7 53 0A         [ 1] 1265 	ld	0x530a, a
      000687                       1266 00104$:
                                   1267 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 684: }
      000687 84               [ 1] 1268 	pop	a
      000688 81               [ 4] 1269 	ret
                                   1270 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 694: void TIM2_OC2PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)
                                   1271 ;	-----------------------------------------
                                   1272 ;	 function TIM2_OC2PolarityConfig
                                   1273 ;	-----------------------------------------
      000689                       1274 _TIM2_OC2PolarityConfig:
      000689 88               [ 1] 1275 	push	a
                                   1276 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 697: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      00068A 6B 01            [ 1] 1277 	ld	(0x01, sp), a
      00068C 27 12            [ 1] 1278 	jreq	00107$
      00068E 7B 01            [ 1] 1279 	ld	a, (0x01, sp)
      000690 A1 22            [ 1] 1280 	cp	a, #0x22
      000692 27 0C            [ 1] 1281 	jreq	00107$
      000694 4B B9            [ 1] 1282 	push	#0xb9
      000696 4B 02            [ 1] 1283 	push	#0x02
      000698 5F               [ 1] 1284 	clrw	x
      000699 89               [ 2] 1285 	pushw	x
      00069A AEr00r00         [ 2] 1286 	ldw	x, #(___str_0+0)
      00069D CDr00r00         [ 4] 1287 	call	_assert_failed
      0006A0                       1288 00107$:
                                   1289 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 702: TIM2->CCER1 |= TIM2_CCER1_CC2P;
      0006A0 C6 53 0A         [ 1] 1290 	ld	a, 0x530a
                                   1291 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 700: if (TIM2_OCPolarity != TIM2_OCPOLARITY_HIGH)
      0006A3 0D 01            [ 1] 1292 	tnz	(0x01, sp)
      0006A5 27 07            [ 1] 1293 	jreq	00102$
                                   1294 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 702: TIM2->CCER1 |= TIM2_CCER1_CC2P;
      0006A7 AA 20            [ 1] 1295 	or	a, #0x20
      0006A9 C7 53 0A         [ 1] 1296 	ld	0x530a, a
      0006AC 20 05            [ 2] 1297 	jra	00104$
      0006AE                       1298 00102$:
                                   1299 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 706: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2P);
      0006AE A4 DF            [ 1] 1300 	and	a, #0xdf
      0006B0 C7 53 0A         [ 1] 1301 	ld	0x530a, a
      0006B3                       1302 00104$:
                                   1303 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 708: }
      0006B3 84               [ 1] 1304 	pop	a
      0006B4 81               [ 4] 1305 	ret
                                   1306 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 718: void TIM2_OC3PolarityConfig(TIM2_OCPolarity_TypeDef TIM2_OCPolarity)
                                   1307 ;	-----------------------------------------
                                   1308 ;	 function TIM2_OC3PolarityConfig
                                   1309 ;	-----------------------------------------
      0006B5                       1310 _TIM2_OC3PolarityConfig:
      0006B5 88               [ 1] 1311 	push	a
                                   1312 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 721: assert_param(IS_TIM2_OC_POLARITY_OK(TIM2_OCPolarity));
      0006B6 6B 01            [ 1] 1313 	ld	(0x01, sp), a
      0006B8 27 12            [ 1] 1314 	jreq	00107$
      0006BA 7B 01            [ 1] 1315 	ld	a, (0x01, sp)
      0006BC A1 22            [ 1] 1316 	cp	a, #0x22
      0006BE 27 0C            [ 1] 1317 	jreq	00107$
      0006C0 4B D1            [ 1] 1318 	push	#0xd1
      0006C2 4B 02            [ 1] 1319 	push	#0x02
      0006C4 5F               [ 1] 1320 	clrw	x
      0006C5 89               [ 2] 1321 	pushw	x
      0006C6 AEr00r00         [ 2] 1322 	ldw	x, #(___str_0+0)
      0006C9 CDr00r00         [ 4] 1323 	call	_assert_failed
      0006CC                       1324 00107$:
                                   1325 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 726: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3P;
      0006CC C6 53 0B         [ 1] 1326 	ld	a, 0x530b
                                   1327 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 724: if (TIM2_OCPolarity != TIM2_OCPOLARITY_HIGH)
      0006CF 0D 01            [ 1] 1328 	tnz	(0x01, sp)
      0006D1 27 07            [ 1] 1329 	jreq	00102$
                                   1330 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 726: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3P;
      0006D3 AA 02            [ 1] 1331 	or	a, #0x02
      0006D5 C7 53 0B         [ 1] 1332 	ld	0x530b, a
      0006D8 20 05            [ 2] 1333 	jra	00104$
      0006DA                       1334 00102$:
                                   1335 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 730: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3P);
      0006DA A4 FD            [ 1] 1336 	and	a, #0xfd
      0006DC C7 53 0B         [ 1] 1337 	ld	0x530b, a
      0006DF                       1338 00104$:
                                   1339 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 732: }
      0006DF 84               [ 1] 1340 	pop	a
      0006E0 81               [ 4] 1341 	ret
                                   1342 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 745: void TIM2_CCxCmd(TIM2_Channel_TypeDef TIM2_Channel, FunctionalState NewState)
                                   1343 ;	-----------------------------------------
                                   1344 ;	 function TIM2_CCxCmd
                                   1345 ;	-----------------------------------------
      0006E1                       1346 _TIM2_CCxCmd:
      0006E1 88               [ 1] 1347 	push	a
                                   1348 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 748: assert_param(IS_TIM2_CHANNEL_OK(TIM2_Channel));
      0006E2 A1 01            [ 1] 1349 	cp	a, #0x01
      0006E4 26 07            [ 1] 1350 	jrne	00202$
      0006E6 88               [ 1] 1351 	push	a
      0006E7 A6 01            [ 1] 1352 	ld	a, #0x01
      0006E9 6B 02            [ 1] 1353 	ld	(0x02, sp), a
      0006EB 84               [ 1] 1354 	pop	a
      0006EC C5                    1355 	.byte 0xc5
      0006ED                       1356 00202$:
      0006ED 0F 01            [ 1] 1357 	clr	(0x01, sp)
      0006EF                       1358 00203$:
      0006EF 4D               [ 1] 1359 	tnz	a
      0006F0 27 16            [ 1] 1360 	jreq	00119$
      0006F2 0D 01            [ 1] 1361 	tnz	(0x01, sp)
      0006F4 26 12            [ 1] 1362 	jrne	00119$
      0006F6 A1 02            [ 1] 1363 	cp	a, #0x02
      0006F8 27 0E            [ 1] 1364 	jreq	00119$
      0006FA 88               [ 1] 1365 	push	a
      0006FB 4B EC            [ 1] 1366 	push	#0xec
      0006FD 4B 02            [ 1] 1367 	push	#0x02
      0006FF 5F               [ 1] 1368 	clrw	x
      000700 89               [ 2] 1369 	pushw	x
      000701 AEr00r00         [ 2] 1370 	ldw	x, #(___str_0+0)
      000704 CDr00r00         [ 4] 1371 	call	_assert_failed
      000707 84               [ 1] 1372 	pop	a
      000708                       1373 00119$:
                                   1374 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 749: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000708 0D 04            [ 1] 1375 	tnz	(0x04, sp)
      00070A 27 12            [ 1] 1376 	jreq	00127$
      00070C 0D 04            [ 1] 1377 	tnz	(0x04, sp)
      00070E 26 0E            [ 1] 1378 	jrne	00127$
      000710 88               [ 1] 1379 	push	a
      000711 4B ED            [ 1] 1380 	push	#0xed
      000713 4B 02            [ 1] 1381 	push	#0x02
      000715 5F               [ 1] 1382 	clrw	x
      000716 89               [ 2] 1383 	pushw	x
      000717 AEr00r00         [ 2] 1384 	ldw	x, #(___str_0+0)
      00071A CDr00r00         [ 4] 1385 	call	_assert_failed
      00071D 84               [ 1] 1386 	pop	a
      00071E                       1387 00127$:
                                   1388 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 751: if (TIM2_Channel == TIM2_CHANNEL_1)
      00071E 4D               [ 1] 1389 	tnz	a
      00071F 26 15            [ 1] 1390 	jrne	00114$
                                   1391 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 756: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1E;
      000721 C6 53 0A         [ 1] 1392 	ld	a, 0x530a
                                   1393 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 754: if (NewState != DISABLE)
      000724 0D 04            [ 1] 1394 	tnz	(0x04, sp)
      000726 27 07            [ 1] 1395 	jreq	00102$
                                   1396 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 756: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1E;
      000728 AA 01            [ 1] 1397 	or	a, #0x01
      00072A C7 53 0A         [ 1] 1398 	ld	0x530a, a
      00072D 20 33            [ 2] 1399 	jra	00116$
      00072F                       1400 00102$:
                                   1401 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 760: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      00072F A4 FE            [ 1] 1402 	and	a, #0xfe
      000731 C7 53 0A         [ 1] 1403 	ld	0x530a, a
      000734 20 2C            [ 2] 1404 	jra	00116$
      000736                       1405 00114$:
                                   1406 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 764: else if (TIM2_Channel == TIM2_CHANNEL_2)
      000736 7B 01            [ 1] 1407 	ld	a, (0x01, sp)
      000738 27 15            [ 1] 1408 	jreq	00111$
                                   1409 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 756: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC1E;
      00073A C6 53 0A         [ 1] 1410 	ld	a, 0x530a
                                   1411 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 767: if (NewState != DISABLE)
      00073D 0D 04            [ 1] 1412 	tnz	(0x04, sp)
      00073F 27 07            [ 1] 1413 	jreq	00105$
                                   1414 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 769: TIM2->CCER1 |= (uint8_t)TIM2_CCER1_CC2E;
      000741 AA 10            [ 1] 1415 	or	a, #0x10
      000743 C7 53 0A         [ 1] 1416 	ld	0x530a, a
      000746 20 1A            [ 2] 1417 	jra	00116$
      000748                       1418 00105$:
                                   1419 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 773: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      000748 A4 EF            [ 1] 1420 	and	a, #0xef
      00074A C7 53 0A         [ 1] 1421 	ld	0x530a, a
      00074D 20 13            [ 2] 1422 	jra	00116$
      00074F                       1423 00111$:
                                   1424 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 781: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3E;
      00074F C6 53 0B         [ 1] 1425 	ld	a, 0x530b
                                   1426 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 779: if (NewState != DISABLE)
      000752 0D 04            [ 1] 1427 	tnz	(0x04, sp)
      000754 27 07            [ 1] 1428 	jreq	00108$
                                   1429 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 781: TIM2->CCER2 |= (uint8_t)TIM2_CCER2_CC3E;
      000756 AA 01            [ 1] 1430 	or	a, #0x01
      000758 C7 53 0B         [ 1] 1431 	ld	0x530b, a
      00075B 20 05            [ 2] 1432 	jra	00116$
      00075D                       1433 00108$:
                                   1434 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 785: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3E);
      00075D A4 FE            [ 1] 1435 	and	a, #0xfe
      00075F C7 53 0B         [ 1] 1436 	ld	0x530b, a
      000762                       1437 00116$:
                                   1438 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 788: }
      000762 84               [ 1] 1439 	pop	a
      000763 85               [ 2] 1440 	popw	x
      000764 84               [ 1] 1441 	pop	a
      000765 FC               [ 2] 1442 	jp	(x)
                                   1443 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 810: void TIM2_SelectOCxM(TIM2_Channel_TypeDef TIM2_Channel, TIM2_OCMode_TypeDef TIM2_OCMode)
                                   1444 ;	-----------------------------------------
                                   1445 ;	 function TIM2_SelectOCxM
                                   1446 ;	-----------------------------------------
      000766                       1447 _TIM2_SelectOCxM:
      000766 89               [ 2] 1448 	pushw	x
                                   1449 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 813: assert_param(IS_TIM2_CHANNEL_OK(TIM2_Channel));
      000767 6B 02            [ 1] 1450 	ld	(0x02, sp), a
      000769 4A               [ 1] 1451 	dec	a
      00076A 26 05            [ 1] 1452 	jrne	00232$
      00076C A6 01            [ 1] 1453 	ld	a, #0x01
      00076E 6B 01            [ 1] 1454 	ld	(0x01, sp), a
      000770 C5                    1455 	.byte 0xc5
      000771                       1456 00232$:
      000771 0F 01            [ 1] 1457 	clr	(0x01, sp)
      000773                       1458 00233$:
      000773 0D 02            [ 1] 1459 	tnz	(0x02, sp)
      000775 27 16            [ 1] 1460 	jreq	00110$
      000777 0D 01            [ 1] 1461 	tnz	(0x01, sp)
      000779 26 12            [ 1] 1462 	jrne	00110$
      00077B 7B 02            [ 1] 1463 	ld	a, (0x02, sp)
      00077D A1 02            [ 1] 1464 	cp	a, #0x02
      00077F 27 0C            [ 1] 1465 	jreq	00110$
      000781 4B 2D            [ 1] 1466 	push	#0x2d
      000783 4B 03            [ 1] 1467 	push	#0x03
      000785 5F               [ 1] 1468 	clrw	x
      000786 89               [ 2] 1469 	pushw	x
      000787 AEr00r00         [ 2] 1470 	ldw	x, #(___str_0+0)
      00078A CDr00r00         [ 4] 1471 	call	_assert_failed
      00078D                       1472 00110$:
                                   1473 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 814: assert_param(IS_TIM2_OCM_OK(TIM2_OCMode));
      00078D 0D 05            [ 1] 1474 	tnz	(0x05, sp)
      00078F 27 36            [ 1] 1475 	jreq	00118$
      000791 7B 05            [ 1] 1476 	ld	a, (0x05, sp)
      000793 A1 10            [ 1] 1477 	cp	a, #0x10
      000795 27 30            [ 1] 1478 	jreq	00118$
      000797 7B 05            [ 1] 1479 	ld	a, (0x05, sp)
      000799 A1 20            [ 1] 1480 	cp	a, #0x20
      00079B 27 2A            [ 1] 1481 	jreq	00118$
      00079D 7B 05            [ 1] 1482 	ld	a, (0x05, sp)
      00079F A1 30            [ 1] 1483 	cp	a, #0x30
      0007A1 27 24            [ 1] 1484 	jreq	00118$
      0007A3 7B 05            [ 1] 1485 	ld	a, (0x05, sp)
      0007A5 A1 60            [ 1] 1486 	cp	a, #0x60
      0007A7 27 1E            [ 1] 1487 	jreq	00118$
      0007A9 7B 05            [ 1] 1488 	ld	a, (0x05, sp)
      0007AB A1 70            [ 1] 1489 	cp	a, #0x70
      0007AD 27 18            [ 1] 1490 	jreq	00118$
      0007AF 7B 05            [ 1] 1491 	ld	a, (0x05, sp)
      0007B1 A1 50            [ 1] 1492 	cp	a, #0x50
      0007B3 27 12            [ 1] 1493 	jreq	00118$
      0007B5 7B 05            [ 1] 1494 	ld	a, (0x05, sp)
      0007B7 A1 40            [ 1] 1495 	cp	a, #0x40
      0007B9 27 0C            [ 1] 1496 	jreq	00118$
      0007BB 4B 2E            [ 1] 1497 	push	#0x2e
      0007BD 4B 03            [ 1] 1498 	push	#0x03
      0007BF 5F               [ 1] 1499 	clrw	x
      0007C0 89               [ 2] 1500 	pushw	x
      0007C1 AEr00r00         [ 2] 1501 	ldw	x, #(___str_0+0)
      0007C4 CDr00r00         [ 4] 1502 	call	_assert_failed
      0007C7                       1503 00118$:
                                   1504 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 816: if (TIM2_Channel == TIM2_CHANNEL_1)
      0007C7 0D 02            [ 1] 1505 	tnz	(0x02, sp)
      0007C9 26 10            [ 1] 1506 	jrne	00105$
                                   1507 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 819: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      0007CB 72 11 53 0A      [ 1] 1508 	bres	0x530a, #0
                                   1509 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 822: TIM2->CCMR1 = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_OCM))
      0007CF C6 53 07         [ 1] 1510 	ld	a, 0x5307
      0007D2 A4 8F            [ 1] 1511 	and	a, #0x8f
                                   1512 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 823: | (uint8_t)TIM2_OCMode);
      0007D4 1A 05            [ 1] 1513 	or	a, (0x05, sp)
      0007D6 C7 53 07         [ 1] 1514 	ld	0x5307, a
      0007D9 20 22            [ 2] 1515 	jra	00107$
      0007DB                       1516 00105$:
                                   1517 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 825: else if (TIM2_Channel == TIM2_CHANNEL_2)
      0007DB 7B 01            [ 1] 1518 	ld	a, (0x01, sp)
      0007DD 27 10            [ 1] 1519 	jreq	00102$
                                   1520 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 828: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      0007DF 72 19 53 0A      [ 1] 1521 	bres	0x530a, #4
                                   1522 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 831: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_OCM))
      0007E3 C6 53 08         [ 1] 1523 	ld	a, 0x5308
      0007E6 A4 8F            [ 1] 1524 	and	a, #0x8f
                                   1525 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 832: | (uint8_t)TIM2_OCMode);
      0007E8 1A 05            [ 1] 1526 	or	a, (0x05, sp)
      0007EA C7 53 08         [ 1] 1527 	ld	0x5308, a
      0007ED 20 0E            [ 2] 1528 	jra	00107$
      0007EF                       1529 00102$:
                                   1530 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 837: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3E);
      0007EF 72 11 53 0B      [ 1] 1531 	bres	0x530b, #0
                                   1532 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 840: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_OCM))
      0007F3 C6 53 09         [ 1] 1533 	ld	a, 0x5309
      0007F6 A4 8F            [ 1] 1534 	and	a, #0x8f
                                   1535 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 841: | (uint8_t)TIM2_OCMode);
      0007F8 1A 05            [ 1] 1536 	or	a, (0x05, sp)
      0007FA C7 53 09         [ 1] 1537 	ld	0x5309, a
      0007FD                       1538 00107$:
                                   1539 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 843: }
      0007FD 85               [ 2] 1540 	popw	x
      0007FE 85               [ 2] 1541 	popw	x
      0007FF 84               [ 1] 1542 	pop	a
      000800 FC               [ 2] 1543 	jp	(x)
                                   1544 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 851: void TIM2_SetCounter(uint16_t Counter)
                                   1545 ;	-----------------------------------------
                                   1546 ;	 function TIM2_SetCounter
                                   1547 ;	-----------------------------------------
      000801                       1548 _TIM2_SetCounter:
                                   1549 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 854: TIM2->CNTRH = (uint8_t)(Counter >> 8);
      000801 9E               [ 1] 1550 	ld	a, xh
      000802 C7 53 0C         [ 1] 1551 	ld	0x530c, a
                                   1552 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 855: TIM2->CNTRL = (uint8_t)(Counter);
      000805 9F               [ 1] 1553 	ld	a, xl
      000806 C7 53 0D         [ 1] 1554 	ld	0x530d, a
                                   1555 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 856: }
      000809 81               [ 4] 1556 	ret
                                   1557 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 864: void TIM2_SetAutoreload(uint16_t Autoreload)
                                   1558 ;	-----------------------------------------
                                   1559 ;	 function TIM2_SetAutoreload
                                   1560 ;	-----------------------------------------
      00080A                       1561 _TIM2_SetAutoreload:
                                   1562 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 867: TIM2->ARRH = (uint8_t)(Autoreload >> 8);
      00080A 9E               [ 1] 1563 	ld	a, xh
      00080B C7 53 0F         [ 1] 1564 	ld	0x530f, a
                                   1565 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 868: TIM2->ARRL = (uint8_t)(Autoreload);
      00080E 9F               [ 1] 1566 	ld	a, xl
      00080F C7 53 10         [ 1] 1567 	ld	0x5310, a
                                   1568 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 869: }
      000812 81               [ 4] 1569 	ret
                                   1570 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 877: void TIM2_SetCompare1(uint16_t Compare1)
                                   1571 ;	-----------------------------------------
                                   1572 ;	 function TIM2_SetCompare1
                                   1573 ;	-----------------------------------------
      000813                       1574 _TIM2_SetCompare1:
                                   1575 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 880: TIM2->CCR1H = (uint8_t)(Compare1 >> 8);
      000813 9E               [ 1] 1576 	ld	a, xh
      000814 C7 53 11         [ 1] 1577 	ld	0x5311, a
                                   1578 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 881: TIM2->CCR1L = (uint8_t)(Compare1);
      000817 9F               [ 1] 1579 	ld	a, xl
      000818 C7 53 12         [ 1] 1580 	ld	0x5312, a
                                   1581 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 882: }
      00081B 81               [ 4] 1582 	ret
                                   1583 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 890: void TIM2_SetCompare2(uint16_t Compare2)
                                   1584 ;	-----------------------------------------
                                   1585 ;	 function TIM2_SetCompare2
                                   1586 ;	-----------------------------------------
      00081C                       1587 _TIM2_SetCompare2:
                                   1588 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 893: TIM2->CCR2H = (uint8_t)(Compare2 >> 8);
      00081C 9E               [ 1] 1589 	ld	a, xh
      00081D C7 53 13         [ 1] 1590 	ld	0x5313, a
                                   1591 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 894: TIM2->CCR2L = (uint8_t)(Compare2);
      000820 9F               [ 1] 1592 	ld	a, xl
      000821 C7 53 14         [ 1] 1593 	ld	0x5314, a
                                   1594 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 895: }
      000824 81               [ 4] 1595 	ret
                                   1596 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 903: void TIM2_SetCompare3(uint16_t Compare3)
                                   1597 ;	-----------------------------------------
                                   1598 ;	 function TIM2_SetCompare3
                                   1599 ;	-----------------------------------------
      000825                       1600 _TIM2_SetCompare3:
                                   1601 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 906: TIM2->CCR3H = (uint8_t)(Compare3 >> 8);
      000825 9E               [ 1] 1602 	ld	a, xh
      000826 C7 53 15         [ 1] 1603 	ld	0x5315, a
                                   1604 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 907: TIM2->CCR3L = (uint8_t)(Compare3);
      000829 9F               [ 1] 1605 	ld	a, xl
      00082A C7 53 16         [ 1] 1606 	ld	0x5316, a
                                   1607 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 908: }
      00082D 81               [ 4] 1608 	ret
                                   1609 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 920: void TIM2_SetIC1Prescaler(TIM2_ICPSC_TypeDef TIM2_IC1Prescaler)
                                   1610 ;	-----------------------------------------
                                   1611 ;	 function TIM2_SetIC1Prescaler
                                   1612 ;	-----------------------------------------
      00082E                       1613 _TIM2_SetIC1Prescaler:
      00082E 88               [ 1] 1614 	push	a
                                   1615 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 923: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_IC1Prescaler));
      00082F 6B 01            [ 1] 1616 	ld	(0x01, sp), a
      000831 27 1E            [ 1] 1617 	jreq	00104$
      000833 7B 01            [ 1] 1618 	ld	a, (0x01, sp)
      000835 A1 04            [ 1] 1619 	cp	a, #0x04
      000837 27 18            [ 1] 1620 	jreq	00104$
      000839 7B 01            [ 1] 1621 	ld	a, (0x01, sp)
      00083B A1 08            [ 1] 1622 	cp	a, #0x08
      00083D 27 12            [ 1] 1623 	jreq	00104$
      00083F 7B 01            [ 1] 1624 	ld	a, (0x01, sp)
      000841 A1 0C            [ 1] 1625 	cp	a, #0x0c
      000843 27 0C            [ 1] 1626 	jreq	00104$
      000845 4B 9B            [ 1] 1627 	push	#0x9b
      000847 4B 03            [ 1] 1628 	push	#0x03
      000849 5F               [ 1] 1629 	clrw	x
      00084A 89               [ 2] 1630 	pushw	x
      00084B AEr00r00         [ 2] 1631 	ldw	x, #(___str_0+0)
      00084E CDr00r00         [ 4] 1632 	call	_assert_failed
      000851                       1633 00104$:
                                   1634 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 926: TIM2->CCMR1 = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~TIM2_CCMR_ICxPSC))
      000851 C6 53 07         [ 1] 1635 	ld	a, 0x5307
      000854 A4 F3            [ 1] 1636 	and	a, #0xf3
                                   1637 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 927: | (uint8_t)TIM2_IC1Prescaler);
      000856 1A 01            [ 1] 1638 	or	a, (0x01, sp)
      000858 C7 53 07         [ 1] 1639 	ld	0x5307, a
                                   1640 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 928: }
      00085B 84               [ 1] 1641 	pop	a
      00085C 81               [ 4] 1642 	ret
                                   1643 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 940: void TIM2_SetIC2Prescaler(TIM2_ICPSC_TypeDef TIM2_IC2Prescaler)
                                   1644 ;	-----------------------------------------
                                   1645 ;	 function TIM2_SetIC2Prescaler
                                   1646 ;	-----------------------------------------
      00085D                       1647 _TIM2_SetIC2Prescaler:
      00085D 88               [ 1] 1648 	push	a
                                   1649 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 943: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_IC2Prescaler));
      00085E 6B 01            [ 1] 1650 	ld	(0x01, sp), a
      000860 27 1E            [ 1] 1651 	jreq	00104$
      000862 7B 01            [ 1] 1652 	ld	a, (0x01, sp)
      000864 A1 04            [ 1] 1653 	cp	a, #0x04
      000866 27 18            [ 1] 1654 	jreq	00104$
      000868 7B 01            [ 1] 1655 	ld	a, (0x01, sp)
      00086A A1 08            [ 1] 1656 	cp	a, #0x08
      00086C 27 12            [ 1] 1657 	jreq	00104$
      00086E 7B 01            [ 1] 1658 	ld	a, (0x01, sp)
      000870 A1 0C            [ 1] 1659 	cp	a, #0x0c
      000872 27 0C            [ 1] 1660 	jreq	00104$
      000874 4B AF            [ 1] 1661 	push	#0xaf
      000876 4B 03            [ 1] 1662 	push	#0x03
      000878 5F               [ 1] 1663 	clrw	x
      000879 89               [ 2] 1664 	pushw	x
      00087A AEr00r00         [ 2] 1665 	ldw	x, #(___str_0+0)
      00087D CDr00r00         [ 4] 1666 	call	_assert_failed
      000880                       1667 00104$:
                                   1668 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 946: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~TIM2_CCMR_ICxPSC))
      000880 C6 53 08         [ 1] 1669 	ld	a, 0x5308
      000883 A4 F3            [ 1] 1670 	and	a, #0xf3
                                   1671 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 947: | (uint8_t)TIM2_IC2Prescaler);
      000885 1A 01            [ 1] 1672 	or	a, (0x01, sp)
      000887 C7 53 08         [ 1] 1673 	ld	0x5308, a
                                   1674 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 948: }
      00088A 84               [ 1] 1675 	pop	a
      00088B 81               [ 4] 1676 	ret
                                   1677 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 960: void TIM2_SetIC3Prescaler(TIM2_ICPSC_TypeDef TIM2_IC3Prescaler)
                                   1678 ;	-----------------------------------------
                                   1679 ;	 function TIM2_SetIC3Prescaler
                                   1680 ;	-----------------------------------------
      00088C                       1681 _TIM2_SetIC3Prescaler:
      00088C 88               [ 1] 1682 	push	a
                                   1683 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 964: assert_param(IS_TIM2_IC_PRESCALER_OK(TIM2_IC3Prescaler));
      00088D 6B 01            [ 1] 1684 	ld	(0x01, sp), a
      00088F 27 1E            [ 1] 1685 	jreq	00104$
      000891 7B 01            [ 1] 1686 	ld	a, (0x01, sp)
      000893 A1 04            [ 1] 1687 	cp	a, #0x04
      000895 27 18            [ 1] 1688 	jreq	00104$
      000897 7B 01            [ 1] 1689 	ld	a, (0x01, sp)
      000899 A1 08            [ 1] 1690 	cp	a, #0x08
      00089B 27 12            [ 1] 1691 	jreq	00104$
      00089D 7B 01            [ 1] 1692 	ld	a, (0x01, sp)
      00089F A1 0C            [ 1] 1693 	cp	a, #0x0c
      0008A1 27 0C            [ 1] 1694 	jreq	00104$
      0008A3 4B C4            [ 1] 1695 	push	#0xc4
      0008A5 4B 03            [ 1] 1696 	push	#0x03
      0008A7 5F               [ 1] 1697 	clrw	x
      0008A8 89               [ 2] 1698 	pushw	x
      0008A9 AEr00r00         [ 2] 1699 	ldw	x, #(___str_0+0)
      0008AC CDr00r00         [ 4] 1700 	call	_assert_failed
      0008AF                       1701 00104$:
                                   1702 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 966: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~TIM2_CCMR_ICxPSC))
      0008AF C6 53 09         [ 1] 1703 	ld	a, 0x5309
      0008B2 A4 F3            [ 1] 1704 	and	a, #0xf3
                                   1705 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 967: | (uint8_t)TIM2_IC3Prescaler);
      0008B4 1A 01            [ 1] 1706 	or	a, (0x01, sp)
      0008B6 C7 53 09         [ 1] 1707 	ld	0x5309, a
                                   1708 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 968: }
      0008B9 84               [ 1] 1709 	pop	a
      0008BA 81               [ 4] 1710 	ret
                                   1711 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 975: uint16_t TIM2_GetCapture1(void)
                                   1712 ;	-----------------------------------------
                                   1713 ;	 function TIM2_GetCapture1
                                   1714 ;	-----------------------------------------
      0008BB                       1715 _TIM2_GetCapture1:
      0008BB 89               [ 2] 1716 	pushw	x
                                   1717 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 981: tmpccr1h = TIM2->CCR1H;
      0008BC C6 53 11         [ 1] 1718 	ld	a, 0x5311
      0008BF 95               [ 1] 1719 	ld	xh, a
                                   1720 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 982: tmpccr1l = TIM2->CCR1L;
      0008C0 C6 53 12         [ 1] 1721 	ld	a, 0x5312
                                   1722 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 984: tmpccr1 = (uint16_t)(tmpccr1l);
      0008C3 97               [ 1] 1723 	ld	xl, a
                                   1724 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 985: tmpccr1 |= (uint16_t)((uint16_t)tmpccr1h << 8);
      0008C4 0F 02            [ 1] 1725 	clr	(0x02, sp)
                                   1726 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 987: return (uint16_t)tmpccr1;
                                   1727 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 988: }
      0008C6 5B 02            [ 2] 1728 	addw	sp, #2
      0008C8 81               [ 4] 1729 	ret
                                   1730 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 995: uint16_t TIM2_GetCapture2(void)
                                   1731 ;	-----------------------------------------
                                   1732 ;	 function TIM2_GetCapture2
                                   1733 ;	-----------------------------------------
      0008C9                       1734 _TIM2_GetCapture2:
      0008C9 89               [ 2] 1735 	pushw	x
                                   1736 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1001: tmpccr2h = TIM2->CCR2H;
      0008CA C6 53 13         [ 1] 1737 	ld	a, 0x5313
      0008CD 95               [ 1] 1738 	ld	xh, a
                                   1739 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1002: tmpccr2l = TIM2->CCR2L;
      0008CE C6 53 14         [ 1] 1740 	ld	a, 0x5314
                                   1741 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1004: tmpccr2 = (uint16_t)(tmpccr2l);
      0008D1 97               [ 1] 1742 	ld	xl, a
                                   1743 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1005: tmpccr2 |= (uint16_t)((uint16_t)tmpccr2h << 8);
      0008D2 0F 02            [ 1] 1744 	clr	(0x02, sp)
                                   1745 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1007: return (uint16_t)tmpccr2;
                                   1746 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1008: }
      0008D4 5B 02            [ 2] 1747 	addw	sp, #2
      0008D6 81               [ 4] 1748 	ret
                                   1749 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1015: uint16_t TIM2_GetCapture3(void)
                                   1750 ;	-----------------------------------------
                                   1751 ;	 function TIM2_GetCapture3
                                   1752 ;	-----------------------------------------
      0008D7                       1753 _TIM2_GetCapture3:
      0008D7 89               [ 2] 1754 	pushw	x
                                   1755 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1021: tmpccr3h = TIM2->CCR3H;
      0008D8 C6 53 15         [ 1] 1756 	ld	a, 0x5315
      0008DB 95               [ 1] 1757 	ld	xh, a
                                   1758 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1022: tmpccr3l = TIM2->CCR3L;
      0008DC C6 53 16         [ 1] 1759 	ld	a, 0x5316
                                   1760 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1024: tmpccr3 = (uint16_t)(tmpccr3l);
      0008DF 97               [ 1] 1761 	ld	xl, a
                                   1762 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1025: tmpccr3 |= (uint16_t)((uint16_t)tmpccr3h << 8);
      0008E0 0F 02            [ 1] 1763 	clr	(0x02, sp)
                                   1764 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1027: return (uint16_t)tmpccr3;
                                   1765 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1028: }
      0008E2 5B 02            [ 2] 1766 	addw	sp, #2
      0008E4 81               [ 4] 1767 	ret
                                   1768 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1035: uint16_t TIM2_GetCounter(void)
                                   1769 ;	-----------------------------------------
                                   1770 ;	 function TIM2_GetCounter
                                   1771 ;	-----------------------------------------
      0008E5                       1772 _TIM2_GetCounter:
      0008E5 89               [ 2] 1773 	pushw	x
                                   1774 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1039: tmpcntr =  ((uint16_t)TIM2->CNTRH << 8);
      0008E6 C6 53 0C         [ 1] 1775 	ld	a, 0x530c
      0008E9 95               [ 1] 1776 	ld	xh, a
      0008EA 0F 02            [ 1] 1777 	clr	(0x02, sp)
                                   1778 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1041: return (uint16_t)( tmpcntr| (uint16_t)(TIM2->CNTRL));
      0008EC C6 53 0D         [ 1] 1779 	ld	a, 0x530d
      0008EF 97               [ 1] 1780 	ld	xl, a
                                   1781 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1042: }
      0008F0 5B 02            [ 2] 1782 	addw	sp, #2
      0008F2 81               [ 4] 1783 	ret
                                   1784 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1049: TIM2_Prescaler_TypeDef TIM2_GetPrescaler(void)
                                   1785 ;	-----------------------------------------
                                   1786 ;	 function TIM2_GetPrescaler
                                   1787 ;	-----------------------------------------
      0008F3                       1788 _TIM2_GetPrescaler:
                                   1789 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1052: return (TIM2_Prescaler_TypeDef)(TIM2->PSCR);
      0008F3 C6 53 0E         [ 1] 1790 	ld	a, 0x530e
                                   1791 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1053: }
      0008F6 81               [ 4] 1792 	ret
                                   1793 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1068: FlagStatus TIM2_GetFlagStatus(TIM2_FLAG_TypeDef TIM2_FLAG)
                                   1794 ;	-----------------------------------------
                                   1795 ;	 function TIM2_GetFlagStatus
                                   1796 ;	-----------------------------------------
      0008F7                       1797 _TIM2_GetFlagStatus:
      0008F7 52 03            [ 2] 1798 	sub	sp, #3
                                   1799 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1074: assert_param(IS_TIM2_GET_FLAG_OK(TIM2_FLAG));
      0008F9 1F 02            [ 2] 1800 	ldw	(0x02, sp), x
      0008FB A3 00 01         [ 2] 1801 	cpw	x, #0x0001
      0008FE 27 2E            [ 1] 1802 	jreq	00107$
      000900 A3 00 02         [ 2] 1803 	cpw	x, #0x0002
      000903 27 29            [ 1] 1804 	jreq	00107$
      000905 A3 00 04         [ 2] 1805 	cpw	x, #0x0004
      000908 27 24            [ 1] 1806 	jreq	00107$
      00090A A3 00 08         [ 2] 1807 	cpw	x, #0x0008
      00090D 27 1F            [ 1] 1808 	jreq	00107$
      00090F A3 02 00         [ 2] 1809 	cpw	x, #0x0200
      000912 27 1A            [ 1] 1810 	jreq	00107$
      000914 A3 04 00         [ 2] 1811 	cpw	x, #0x0400
      000917 27 15            [ 1] 1812 	jreq	00107$
      000919 A3 08 00         [ 2] 1813 	cpw	x, #0x0800
      00091C 27 10            [ 1] 1814 	jreq	00107$
      00091E 89               [ 2] 1815 	pushw	x
      00091F 4B 32            [ 1] 1816 	push	#0x32
      000921 4B 04            [ 1] 1817 	push	#0x04
      000923 4B 00            [ 1] 1818 	push	#0x00
      000925 4B 00            [ 1] 1819 	push	#0x00
      000927 AEr00r00         [ 2] 1820 	ldw	x, #(___str_0+0)
      00092A CDr00r00         [ 4] 1821 	call	_assert_failed
      00092D 85               [ 2] 1822 	popw	x
      00092E                       1823 00107$:
                                   1824 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1076: tim2_flag_l = (uint8_t)(TIM2->SR1 & (uint8_t)TIM2_FLAG);
      00092E C6 53 04         [ 1] 1825 	ld	a, 0x5304
      000931 6B 01            [ 1] 1826 	ld	(0x01, sp), a
      000933 7B 03            [ 1] 1827 	ld	a, (0x03, sp)
      000935 14 01            [ 1] 1828 	and	a, (0x01, sp)
      000937 6B 01            [ 1] 1829 	ld	(0x01, sp), a
                                   1830 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1077: tim2_flag_h = (uint8_t)((uint16_t)TIM2_FLAG >> 8);
                                   1831 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1079: if ((tim2_flag_l | (uint8_t)(TIM2->SR2 & tim2_flag_h)) != (uint8_t)RESET )
      000939 C6 53 05         [ 1] 1832 	ld	a, 0x5305
      00093C 89               [ 2] 1833 	pushw	x
      00093D 14 01            [ 1] 1834 	and	a, (1, sp)
      00093F 85               [ 2] 1835 	popw	x
      000940 1A 01            [ 1] 1836 	or	a, (0x01, sp)
      000942 27 03            [ 1] 1837 	jreq	00102$
                                   1838 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1081: bitstatus = SET;
      000944 A6 01            [ 1] 1839 	ld	a, #0x01
                                   1840 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1085: bitstatus = RESET;
      000946 21                    1841 	.byte 0x21
      000947                       1842 00102$:
      000947 4F               [ 1] 1843 	clr	a
      000948                       1844 00103$:
                                   1845 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1087: return (FlagStatus)bitstatus;
                                   1846 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1088: }
      000948 5B 03            [ 2] 1847 	addw	sp, #3
      00094A 81               [ 4] 1848 	ret
                                   1849 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1103: void TIM2_ClearFlag(TIM2_FLAG_TypeDef TIM2_FLAG)
                                   1850 ;	-----------------------------------------
                                   1851 ;	 function TIM2_ClearFlag
                                   1852 ;	-----------------------------------------
      00094B                       1853 _TIM2_ClearFlag:
      00094B 89               [ 2] 1854 	pushw	x
      00094C 1F 01            [ 2] 1855 	ldw	(0x01, sp), x
                                   1856 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1106: assert_param(IS_TIM2_CLEAR_FLAG_OK(TIM2_FLAG));
      00094E 7B 02            [ 1] 1857 	ld	a, (0x02, sp)
      000950 A4 F0            [ 1] 1858 	and	a, #0xf0
      000952 97               [ 1] 1859 	ld	xl, a
      000953 7B 01            [ 1] 1860 	ld	a, (0x01, sp)
      000955 A4 F1            [ 1] 1861 	and	a, #0xf1
      000957 95               [ 1] 1862 	ld	xh, a
      000958 5D               [ 2] 1863 	tnzw	x
      000959 26 04            [ 1] 1864 	jrne	00103$
      00095B 1E 01            [ 2] 1865 	ldw	x, (0x01, sp)
      00095D 26 0C            [ 1] 1866 	jrne	00104$
      00095F                       1867 00103$:
      00095F 4B 52            [ 1] 1868 	push	#0x52
      000961 4B 04            [ 1] 1869 	push	#0x04
      000963 5F               [ 1] 1870 	clrw	x
      000964 89               [ 2] 1871 	pushw	x
      000965 AEr00r00         [ 2] 1872 	ldw	x, #(___str_0+0)
      000968 CDr00r00         [ 4] 1873 	call	_assert_failed
      00096B                       1874 00104$:
                                   1875 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1109: TIM2->SR1 = (uint8_t)(~((uint8_t)(TIM2_FLAG)));
      00096B 7B 02            [ 1] 1876 	ld	a, (0x02, sp)
      00096D 43               [ 1] 1877 	cpl	a
      00096E C7 53 04         [ 1] 1878 	ld	0x5304, a
                                   1879 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1110: TIM2->SR2 = (uint8_t)(~((uint8_t)((uint8_t)TIM2_FLAG >> 8)));
      000971 35 FF 53 05      [ 1] 1880 	mov	0x5305+0, #0xff
                                   1881 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1111: }
      000975 85               [ 2] 1882 	popw	x
      000976 81               [ 4] 1883 	ret
                                   1884 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1123: ITStatus TIM2_GetITStatus(TIM2_IT_TypeDef TIM2_IT)
                                   1885 ;	-----------------------------------------
                                   1886 ;	 function TIM2_GetITStatus
                                   1887 ;	-----------------------------------------
      000977                       1888 _TIM2_GetITStatus:
      000977 89               [ 2] 1889 	pushw	x
                                   1890 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1129: assert_param(IS_TIM2_GET_IT_OK(TIM2_IT));
      000978 6B 02            [ 1] 1891 	ld	(0x02, sp), a
      00097A 4A               [ 1] 1892 	dec	a
      00097B 27 1E            [ 1] 1893 	jreq	00108$
      00097D 7B 02            [ 1] 1894 	ld	a, (0x02, sp)
      00097F A1 02            [ 1] 1895 	cp	a, #0x02
      000981 27 18            [ 1] 1896 	jreq	00108$
      000983 7B 02            [ 1] 1897 	ld	a, (0x02, sp)
      000985 A1 04            [ 1] 1898 	cp	a, #0x04
      000987 27 12            [ 1] 1899 	jreq	00108$
      000989 7B 02            [ 1] 1900 	ld	a, (0x02, sp)
      00098B A1 08            [ 1] 1901 	cp	a, #0x08
      00098D 27 0C            [ 1] 1902 	jreq	00108$
      00098F 4B 69            [ 1] 1903 	push	#0x69
      000991 4B 04            [ 1] 1904 	push	#0x04
      000993 5F               [ 1] 1905 	clrw	x
      000994 89               [ 2] 1906 	pushw	x
      000995 AEr00r00         [ 2] 1907 	ldw	x, #(___str_0+0)
      000998 CDr00r00         [ 4] 1908 	call	_assert_failed
      00099B                       1909 00108$:
                                   1910 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1131: TIM2_itStatus = (uint8_t)(TIM2->SR1 & TIM2_IT);
      00099B C6 53 04         [ 1] 1911 	ld	a, 0x5304
      00099E 14 02            [ 1] 1912 	and	a, (0x02, sp)
      0009A0 6B 01            [ 1] 1913 	ld	(0x01, sp), a
                                   1914 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1133: TIM2_itEnable = (uint8_t)(TIM2->IER & TIM2_IT);
      0009A2 C6 53 03         [ 1] 1915 	ld	a, 0x5303
      0009A5 14 02            [ 1] 1916 	and	a, (0x02, sp)
                                   1917 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1135: if ((TIM2_itStatus != (uint8_t)RESET ) && (TIM2_itEnable != (uint8_t)RESET ))
      0009A7 0D 01            [ 1] 1918 	tnz	(0x01, sp)
      0009A9 27 06            [ 1] 1919 	jreq	00102$
      0009AB 4D               [ 1] 1920 	tnz	a
      0009AC 27 03            [ 1] 1921 	jreq	00102$
                                   1922 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1137: bitstatus = SET;
      0009AE A6 01            [ 1] 1923 	ld	a, #0x01
                                   1924 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1141: bitstatus = RESET;
      0009B0 21                    1925 	.byte 0x21
      0009B1                       1926 00102$:
      0009B1 4F               [ 1] 1927 	clr	a
      0009B2                       1928 00103$:
                                   1929 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1143: return (ITStatus)(bitstatus);
                                   1930 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1144: }
      0009B2 85               [ 2] 1931 	popw	x
      0009B3 81               [ 4] 1932 	ret
                                   1933 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1156: void TIM2_ClearITPendingBit(TIM2_IT_TypeDef TIM2_IT)
                                   1934 ;	-----------------------------------------
                                   1935 ;	 function TIM2_ClearITPendingBit
                                   1936 ;	-----------------------------------------
      0009B4                       1937 _TIM2_ClearITPendingBit:
                                   1938 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1159: assert_param(IS_TIM2_IT_OK(TIM2_IT));
      0009B4 4D               [ 1] 1939 	tnz	a
      0009B5 27 04            [ 1] 1940 	jreq	00103$
      0009B7 A1 0F            [ 1] 1941 	cp	a, #0x0f
      0009B9 23 0E            [ 2] 1942 	jrule	00104$
      0009BB                       1943 00103$:
      0009BB 88               [ 1] 1944 	push	a
      0009BC 4B 87            [ 1] 1945 	push	#0x87
      0009BE 4B 04            [ 1] 1946 	push	#0x04
      0009C0 5F               [ 1] 1947 	clrw	x
      0009C1 89               [ 2] 1948 	pushw	x
      0009C2 AEr00r00         [ 2] 1949 	ldw	x, #(___str_0+0)
      0009C5 CDr00r00         [ 4] 1950 	call	_assert_failed
      0009C8 84               [ 1] 1951 	pop	a
      0009C9                       1952 00104$:
                                   1953 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1162: TIM2->SR1 = (uint8_t)(~TIM2_IT);
      0009C9 43               [ 1] 1954 	cpl	a
      0009CA C7 53 04         [ 1] 1955 	ld	0x5304, a
                                   1956 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1163: }
      0009CD 81               [ 4] 1957 	ret
                                   1958 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1181: static void TI1_Config(uint8_t TIM2_ICPolarity,
                                   1959 ;	-----------------------------------------
                                   1960 ;	 function TI1_Config
                                   1961 ;	-----------------------------------------
      0009CE                       1962 _TI1_Config:
      0009CE 89               [ 2] 1963 	pushw	x
      0009CF 6B 02            [ 1] 1964 	ld	(0x02, sp), a
                                   1965 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1186: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      0009D1 72 11 53 0A      [ 1] 1966 	bres	0x530a, #0
                                   1967 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1189: TIM2->CCMR1  = (uint8_t)((uint8_t)(TIM2->CCMR1 & (uint8_t)(~(uint8_t)( TIM2_CCMR_CCxS | TIM2_CCMR_ICxF )))
      0009D5 C6 53 07         [ 1] 1968 	ld	a, 0x5307
      0009D8 A4 0C            [ 1] 1969 	and	a, #0x0c
      0009DA 6B 01            [ 1] 1970 	ld	(0x01, sp), a
                                   1971 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1190: | (uint8_t)(((TIM2_ICSelection)) | ((uint8_t)( TIM2_ICFilter << 4))));
      0009DC 7B 06            [ 1] 1972 	ld	a, (0x06, sp)
      0009DE 4E               [ 1] 1973 	swap	a
      0009DF A4 F0            [ 1] 1974 	and	a, #0xf0
      0009E1 1A 05            [ 1] 1975 	or	a, (0x05, sp)
      0009E3 1A 01            [ 1] 1976 	or	a, (0x01, sp)
      0009E5 C7 53 07         [ 1] 1977 	ld	0x5307, a
                                   1978 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1186: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1E);
      0009E8 C6 53 0A         [ 1] 1979 	ld	a, 0x530a
                                   1980 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1193: if (TIM2_ICPolarity != TIM2_ICPOLARITY_RISING)
      0009EB 0D 02            [ 1] 1981 	tnz	(0x02, sp)
      0009ED 27 07            [ 1] 1982 	jreq	00102$
                                   1983 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1195: TIM2->CCER1 |= TIM2_CCER1_CC1P;
      0009EF AA 02            [ 1] 1984 	or	a, #0x02
      0009F1 C7 53 0A         [ 1] 1985 	ld	0x530a, a
      0009F4 20 05            [ 2] 1986 	jra	00103$
      0009F6                       1987 00102$:
                                   1988 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1199: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC1P);
      0009F6 A4 FD            [ 1] 1989 	and	a, #0xfd
      0009F8 C7 53 0A         [ 1] 1990 	ld	0x530a, a
      0009FB                       1991 00103$:
                                   1992 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1202: TIM2->CCER1 |= TIM2_CCER1_CC1E;
      0009FB C6 53 0A         [ 1] 1993 	ld	a, 0x530a
      0009FE AA 01            [ 1] 1994 	or	a, #0x01
      000A00 C7 53 0A         [ 1] 1995 	ld	0x530a, a
                                   1996 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1203: }
      000A03 1E 03            [ 2] 1997 	ldw	x, (3, sp)
      000A05 5B 06            [ 2] 1998 	addw	sp, #6
      000A07 FC               [ 2] 1999 	jp	(x)
                                   2000 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1221: static void TI2_Config(uint8_t TIM2_ICPolarity,
                                   2001 ;	-----------------------------------------
                                   2002 ;	 function TI2_Config
                                   2003 ;	-----------------------------------------
      000A08                       2004 _TI2_Config:
      000A08 89               [ 2] 2005 	pushw	x
      000A09 6B 02            [ 1] 2006 	ld	(0x02, sp), a
                                   2007 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1226: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      000A0B 72 19 53 0A      [ 1] 2008 	bres	0x530a, #4
                                   2009 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1229: TIM2->CCMR2 = (uint8_t)((uint8_t)(TIM2->CCMR2 & (uint8_t)(~(uint8_t)( TIM2_CCMR_CCxS | TIM2_CCMR_ICxF ))) 
      000A0F C6 53 08         [ 1] 2010 	ld	a, 0x5308
      000A12 A4 0C            [ 1] 2011 	and	a, #0x0c
      000A14 6B 01            [ 1] 2012 	ld	(0x01, sp), a
                                   2013 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1230: | (uint8_t)(( (TIM2_ICSelection)) | ((uint8_t)( TIM2_ICFilter << 4))));
      000A16 7B 06            [ 1] 2014 	ld	a, (0x06, sp)
      000A18 4E               [ 1] 2015 	swap	a
      000A19 A4 F0            [ 1] 2016 	and	a, #0xf0
      000A1B 1A 05            [ 1] 2017 	or	a, (0x05, sp)
      000A1D 1A 01            [ 1] 2018 	or	a, (0x01, sp)
      000A1F C7 53 08         [ 1] 2019 	ld	0x5308, a
                                   2020 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1226: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2E);
      000A22 C6 53 0A         [ 1] 2021 	ld	a, 0x530a
                                   2022 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1234: if (TIM2_ICPolarity != TIM2_ICPOLARITY_RISING)
      000A25 0D 02            [ 1] 2023 	tnz	(0x02, sp)
      000A27 27 07            [ 1] 2024 	jreq	00102$
                                   2025 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1236: TIM2->CCER1 |= TIM2_CCER1_CC2P;
      000A29 AA 20            [ 1] 2026 	or	a, #0x20
      000A2B C7 53 0A         [ 1] 2027 	ld	0x530a, a
      000A2E 20 05            [ 2] 2028 	jra	00103$
      000A30                       2029 00102$:
                                   2030 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1240: TIM2->CCER1 &= (uint8_t)(~TIM2_CCER1_CC2P);
      000A30 A4 DF            [ 1] 2031 	and	a, #0xdf
      000A32 C7 53 0A         [ 1] 2032 	ld	0x530a, a
      000A35                       2033 00103$:
                                   2034 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1244: TIM2->CCER1 |= TIM2_CCER1_CC2E;
      000A35 C6 53 0A         [ 1] 2035 	ld	a, 0x530a
      000A38 AA 10            [ 1] 2036 	or	a, #0x10
      000A3A C7 53 0A         [ 1] 2037 	ld	0x530a, a
                                   2038 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1245: }
      000A3D 1E 03            [ 2] 2039 	ldw	x, (3, sp)
      000A3F 5B 06            [ 2] 2040 	addw	sp, #6
      000A41 FC               [ 2] 2041 	jp	(x)
                                   2042 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1261: static void TI3_Config(uint8_t TIM2_ICPolarity, uint8_t TIM2_ICSelection,
                                   2043 ;	-----------------------------------------
                                   2044 ;	 function TI3_Config
                                   2045 ;	-----------------------------------------
      000A42                       2046 _TI3_Config:
      000A42 89               [ 2] 2047 	pushw	x
      000A43 6B 02            [ 1] 2048 	ld	(0x02, sp), a
                                   2049 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1265: TIM2->CCER2 &=  (uint8_t)(~TIM2_CCER2_CC3E);
      000A45 72 11 53 0B      [ 1] 2050 	bres	0x530b, #0
                                   2051 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1268: TIM2->CCMR3 = (uint8_t)((uint8_t)(TIM2->CCMR3 & (uint8_t)(~( TIM2_CCMR_CCxS | TIM2_CCMR_ICxF))) 
      000A49 C6 53 09         [ 1] 2052 	ld	a, 0x5309
      000A4C A4 0C            [ 1] 2053 	and	a, #0x0c
      000A4E 6B 01            [ 1] 2054 	ld	(0x01, sp), a
                                   2055 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1269: | (uint8_t)(( (TIM2_ICSelection)) | ((uint8_t)( TIM2_ICFilter << 4))));
      000A50 7B 06            [ 1] 2056 	ld	a, (0x06, sp)
      000A52 4E               [ 1] 2057 	swap	a
      000A53 A4 F0            [ 1] 2058 	and	a, #0xf0
      000A55 1A 05            [ 1] 2059 	or	a, (0x05, sp)
      000A57 1A 01            [ 1] 2060 	or	a, (0x01, sp)
      000A59 C7 53 09         [ 1] 2061 	ld	0x5309, a
                                   2062 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1265: TIM2->CCER2 &=  (uint8_t)(~TIM2_CCER2_CC3E);
      000A5C C6 53 0B         [ 1] 2063 	ld	a, 0x530b
                                   2064 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1273: if (TIM2_ICPolarity != TIM2_ICPOLARITY_RISING)
      000A5F 0D 02            [ 1] 2065 	tnz	(0x02, sp)
      000A61 27 07            [ 1] 2066 	jreq	00102$
                                   2067 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1275: TIM2->CCER2 |= TIM2_CCER2_CC3P;
      000A63 AA 02            [ 1] 2068 	or	a, #0x02
      000A65 C7 53 0B         [ 1] 2069 	ld	0x530b, a
      000A68 20 05            [ 2] 2070 	jra	00103$
      000A6A                       2071 00102$:
                                   2072 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1279: TIM2->CCER2 &= (uint8_t)(~TIM2_CCER2_CC3P);
      000A6A A4 FD            [ 1] 2073 	and	a, #0xfd
      000A6C C7 53 0B         [ 1] 2074 	ld	0x530b, a
      000A6F                       2075 00103$:
                                   2076 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1282: TIM2->CCER2 |= TIM2_CCER2_CC3E;
      000A6F C6 53 0B         [ 1] 2077 	ld	a, 0x530b
      000A72 AA 01            [ 1] 2078 	or	a, #0x01
      000A74 C7 53 0B         [ 1] 2079 	ld	0x530b, a
                                   2080 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim2.c: 1283: }
      000A77 1E 03            [ 2] 2081 	ldw	x, (3, sp)
      000A79 5B 06            [ 2] 2082 	addw	sp, #6
      000A7B FC               [ 2] 2083 	jp	(x)
                                   2084 	.area CODE
                                   2085 	.area CONST
                                   2086 	.area CONST
      000000                       2087 ___str_0:
      000000 2E 2F 53 54 4D 38 53  2088 	.ascii "./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/s"
             5F 53 74 64 50 65 72
             69 70 68 5F 4C 69 62
             2F 4C 69 62 72 61 72
             69 65 73 2F 53 54 4D
             38 53 5F 53 74 64 50
             65 72 69 70 68 5F 44
             72 69 76 65 72 2F 73
             72 63 2F 73
      00003C 74 6D 38 73 5F 74 69  2089 	.ascii "tm8s_tim2.c"
             6D 32 2E 63
      000047 00                    2090 	.db 0x00
                                   2091 	.area CODE
                                   2092 	.area INITIALIZER
                                   2093 	.area CABS (ABS)
