                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ISO C Compiler 
                                      3 ; Version 4.4.0 #14620 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_tim1
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _assert_failed
                                     12 	.globl _TIM1_DeInit
                                     13 	.globl _TIM1_TimeBaseInit
                                     14 	.globl _TIM1_OC1Init
                                     15 	.globl _TIM1_OC2Init
                                     16 	.globl _TIM1_OC3Init
                                     17 	.globl _TIM1_OC4Init
                                     18 	.globl _TIM1_BDTRConfig
                                     19 	.globl _TIM1_ICInit
                                     20 	.globl _TIM1_PWMIConfig
                                     21 	.globl _TIM1_Cmd
                                     22 	.globl _TIM1_CtrlPWMOutputs
                                     23 	.globl _TIM1_ITConfig
                                     24 	.globl _TIM1_InternalClockConfig
                                     25 	.globl _TIM1_ETRClockMode1Config
                                     26 	.globl _TIM1_ETRClockMode2Config
                                     27 	.globl _TIM1_ETRConfig
                                     28 	.globl _TIM1_TIxExternalClockConfig
                                     29 	.globl _TIM1_SelectInputTrigger
                                     30 	.globl _TIM1_UpdateDisableConfig
                                     31 	.globl _TIM1_UpdateRequestConfig
                                     32 	.globl _TIM1_SelectHallSensor
                                     33 	.globl _TIM1_SelectOnePulseMode
                                     34 	.globl _TIM1_SelectOutputTrigger
                                     35 	.globl _TIM1_SelectSlaveMode
                                     36 	.globl _TIM1_SelectMasterSlaveMode
                                     37 	.globl _TIM1_EncoderInterfaceConfig
                                     38 	.globl _TIM1_PrescalerConfig
                                     39 	.globl _TIM1_CounterModeConfig
                                     40 	.globl _TIM1_ForcedOC1Config
                                     41 	.globl _TIM1_ForcedOC2Config
                                     42 	.globl _TIM1_ForcedOC3Config
                                     43 	.globl _TIM1_ForcedOC4Config
                                     44 	.globl _TIM1_ARRPreloadConfig
                                     45 	.globl _TIM1_SelectCOM
                                     46 	.globl _TIM1_CCPreloadControl
                                     47 	.globl _TIM1_OC1PreloadConfig
                                     48 	.globl _TIM1_OC2PreloadConfig
                                     49 	.globl _TIM1_OC3PreloadConfig
                                     50 	.globl _TIM1_OC4PreloadConfig
                                     51 	.globl _TIM1_OC1FastConfig
                                     52 	.globl _TIM1_OC2FastConfig
                                     53 	.globl _TIM1_OC3FastConfig
                                     54 	.globl _TIM1_OC4FastConfig
                                     55 	.globl _TIM1_GenerateEvent
                                     56 	.globl _TIM1_OC1PolarityConfig
                                     57 	.globl _TIM1_OC1NPolarityConfig
                                     58 	.globl _TIM1_OC2PolarityConfig
                                     59 	.globl _TIM1_OC2NPolarityConfig
                                     60 	.globl _TIM1_OC3PolarityConfig
                                     61 	.globl _TIM1_OC3NPolarityConfig
                                     62 	.globl _TIM1_OC4PolarityConfig
                                     63 	.globl _TIM1_CCxCmd
                                     64 	.globl _TIM1_CCxNCmd
                                     65 	.globl _TIM1_SelectOCxM
                                     66 	.globl _TIM1_SetCounter
                                     67 	.globl _TIM1_SetAutoreload
                                     68 	.globl _TIM1_SetCompare1
                                     69 	.globl _TIM1_SetCompare2
                                     70 	.globl _TIM1_SetCompare3
                                     71 	.globl _TIM1_SetCompare4
                                     72 	.globl _TIM1_SetIC1Prescaler
                                     73 	.globl _TIM1_SetIC2Prescaler
                                     74 	.globl _TIM1_SetIC3Prescaler
                                     75 	.globl _TIM1_SetIC4Prescaler
                                     76 	.globl _TIM1_GetCapture1
                                     77 	.globl _TIM1_GetCapture2
                                     78 	.globl _TIM1_GetCapture3
                                     79 	.globl _TIM1_GetCapture4
                                     80 	.globl _TIM1_GetCounter
                                     81 	.globl _TIM1_GetPrescaler
                                     82 	.globl _TIM1_GetFlagStatus
                                     83 	.globl _TIM1_ClearFlag
                                     84 	.globl _TIM1_GetITStatus
                                     85 	.globl _TIM1_ClearITPendingBit
                                     86 ;--------------------------------------------------------
                                     87 ; ram data
                                     88 ;--------------------------------------------------------
                                     89 	.area DATA
                                     90 ;--------------------------------------------------------
                                     91 ; ram data
                                     92 ;--------------------------------------------------------
                                     93 	.area INITIALIZED
                                     94 ;--------------------------------------------------------
                                     95 ; absolute external ram data
                                     96 ;--------------------------------------------------------
                                     97 	.area DABS (ABS)
                                     98 
                                     99 ; default segment ordering for linker
                                    100 	.area HOME
                                    101 	.area GSINIT
                                    102 	.area GSFINAL
                                    103 	.area CONST
                                    104 	.area INITIALIZER
                                    105 	.area CODE
                                    106 
                                    107 ;--------------------------------------------------------
                                    108 ; global & static initialisations
                                    109 ;--------------------------------------------------------
                                    110 	.area HOME
                                    111 	.area GSINIT
                                    112 	.area GSFINAL
                                    113 	.area GSINIT
                                    114 ;--------------------------------------------------------
                                    115 ; Home
                                    116 ;--------------------------------------------------------
                                    117 	.area HOME
                                    118 	.area HOME
                                    119 ;--------------------------------------------------------
                                    120 ; code
                                    121 ;--------------------------------------------------------
                                    122 	.area CODE
                                    123 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 58: void TIM1_DeInit(void)
                                    124 ;	-----------------------------------------
                                    125 ;	 function TIM1_DeInit
                                    126 ;	-----------------------------------------
      000000                        127 _TIM1_DeInit:
                                    128 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 60: TIM1->CR1  = TIM1_CR1_RESET_VALUE;
      000000 35 00 52 50      [ 1]  129 	mov	0x5250+0, #0x00
                                    130 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 61: TIM1->CR2  = TIM1_CR2_RESET_VALUE;
      000004 35 00 52 51      [ 1]  131 	mov	0x5251+0, #0x00
                                    132 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 62: TIM1->SMCR = TIM1_SMCR_RESET_VALUE;
      000008 35 00 52 52      [ 1]  133 	mov	0x5252+0, #0x00
                                    134 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 63: TIM1->ETR  = TIM1_ETR_RESET_VALUE;
      00000C 35 00 52 53      [ 1]  135 	mov	0x5253+0, #0x00
                                    136 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 64: TIM1->IER  = TIM1_IER_RESET_VALUE;
      000010 35 00 52 54      [ 1]  137 	mov	0x5254+0, #0x00
                                    138 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 65: TIM1->SR2  = TIM1_SR2_RESET_VALUE;
      000014 35 00 52 56      [ 1]  139 	mov	0x5256+0, #0x00
                                    140 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 67: TIM1->CCER1 = TIM1_CCER1_RESET_VALUE;
      000018 35 00 52 5C      [ 1]  141 	mov	0x525c+0, #0x00
                                    142 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 68: TIM1->CCER2 = TIM1_CCER2_RESET_VALUE;
      00001C 35 00 52 5D      [ 1]  143 	mov	0x525d+0, #0x00
                                    144 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 70: TIM1->CCMR1 = 0x01;
      000020 35 01 52 58      [ 1]  145 	mov	0x5258+0, #0x01
                                    146 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 71: TIM1->CCMR2 = 0x01;
      000024 35 01 52 59      [ 1]  147 	mov	0x5259+0, #0x01
                                    148 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 72: TIM1->CCMR3 = 0x01;
      000028 35 01 52 5A      [ 1]  149 	mov	0x525a+0, #0x01
                                    150 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 73: TIM1->CCMR4 = 0x01;
      00002C 35 01 52 5B      [ 1]  151 	mov	0x525b+0, #0x01
                                    152 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 75: TIM1->CCER1 = TIM1_CCER1_RESET_VALUE;
      000030 35 00 52 5C      [ 1]  153 	mov	0x525c+0, #0x00
                                    154 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 76: TIM1->CCER2 = TIM1_CCER2_RESET_VALUE;
      000034 35 00 52 5D      [ 1]  155 	mov	0x525d+0, #0x00
                                    156 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 77: TIM1->CCMR1 = TIM1_CCMR1_RESET_VALUE;
      000038 35 00 52 58      [ 1]  157 	mov	0x5258+0, #0x00
                                    158 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 78: TIM1->CCMR2 = TIM1_CCMR2_RESET_VALUE;
      00003C 35 00 52 59      [ 1]  159 	mov	0x5259+0, #0x00
                                    160 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 79: TIM1->CCMR3 = TIM1_CCMR3_RESET_VALUE;
      000040 35 00 52 5A      [ 1]  161 	mov	0x525a+0, #0x00
                                    162 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 80: TIM1->CCMR4 = TIM1_CCMR4_RESET_VALUE;
      000044 35 00 52 5B      [ 1]  163 	mov	0x525b+0, #0x00
                                    164 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 81: TIM1->CNTRH = TIM1_CNTRH_RESET_VALUE;
      000048 35 00 52 5E      [ 1]  165 	mov	0x525e+0, #0x00
                                    166 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 82: TIM1->CNTRL = TIM1_CNTRL_RESET_VALUE;
      00004C 35 00 52 5F      [ 1]  167 	mov	0x525f+0, #0x00
                                    168 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 83: TIM1->PSCRH = TIM1_PSCRH_RESET_VALUE;
      000050 35 00 52 60      [ 1]  169 	mov	0x5260+0, #0x00
                                    170 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 84: TIM1->PSCRL = TIM1_PSCRL_RESET_VALUE;
      000054 35 00 52 61      [ 1]  171 	mov	0x5261+0, #0x00
                                    172 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 85: TIM1->ARRH  = TIM1_ARRH_RESET_VALUE;
      000058 35 FF 52 62      [ 1]  173 	mov	0x5262+0, #0xff
                                    174 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 86: TIM1->ARRL  = TIM1_ARRL_RESET_VALUE;
      00005C 35 FF 52 63      [ 1]  175 	mov	0x5263+0, #0xff
                                    176 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 87: TIM1->CCR1H = TIM1_CCR1H_RESET_VALUE;
      000060 35 00 52 65      [ 1]  177 	mov	0x5265+0, #0x00
                                    178 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 88: TIM1->CCR1L = TIM1_CCR1L_RESET_VALUE;
      000064 35 00 52 66      [ 1]  179 	mov	0x5266+0, #0x00
                                    180 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 89: TIM1->CCR2H = TIM1_CCR2H_RESET_VALUE;
      000068 35 00 52 67      [ 1]  181 	mov	0x5267+0, #0x00
                                    182 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 90: TIM1->CCR2L = TIM1_CCR2L_RESET_VALUE;
      00006C 35 00 52 68      [ 1]  183 	mov	0x5268+0, #0x00
                                    184 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 91: TIM1->CCR3H = TIM1_CCR3H_RESET_VALUE;
      000070 35 00 52 69      [ 1]  185 	mov	0x5269+0, #0x00
                                    186 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 92: TIM1->CCR3L = TIM1_CCR3L_RESET_VALUE;
      000074 35 00 52 6A      [ 1]  187 	mov	0x526a+0, #0x00
                                    188 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 93: TIM1->CCR4H = TIM1_CCR4H_RESET_VALUE;
      000078 35 00 52 6B      [ 1]  189 	mov	0x526b+0, #0x00
                                    190 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 94: TIM1->CCR4L = TIM1_CCR4L_RESET_VALUE;
      00007C 35 00 52 6C      [ 1]  191 	mov	0x526c+0, #0x00
                                    192 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 95: TIM1->OISR  = TIM1_OISR_RESET_VALUE;
      000080 35 00 52 6F      [ 1]  193 	mov	0x526f+0, #0x00
                                    194 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 96: TIM1->EGR   = 0x01; /* TIM1_EGR_UG */
      000084 35 01 52 57      [ 1]  195 	mov	0x5257+0, #0x01
                                    196 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 97: TIM1->DTR   = TIM1_DTR_RESET_VALUE;
      000088 35 00 52 6E      [ 1]  197 	mov	0x526e+0, #0x00
                                    198 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 98: TIM1->BKR   = TIM1_BKR_RESET_VALUE;
      00008C 35 00 52 6D      [ 1]  199 	mov	0x526d+0, #0x00
                                    200 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 99: TIM1->RCR   = TIM1_RCR_RESET_VALUE;
      000090 35 00 52 64      [ 1]  201 	mov	0x5264+0, #0x00
                                    202 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 100: TIM1->SR1   = TIM1_SR1_RESET_VALUE;
      000094 35 00 52 55      [ 1]  203 	mov	0x5255+0, #0x00
                                    204 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 101: }
      000098 81               [ 4]  205 	ret
                                    206 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 111: void TIM1_TimeBaseInit(uint16_t TIM1_Prescaler,
                                    207 ;	-----------------------------------------
                                    208 ;	 function TIM1_TimeBaseInit
                                    209 ;	-----------------------------------------
      000099                        210 _TIM1_TimeBaseInit:
      000099 88               [ 1]  211 	push	a
                                    212 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 117: assert_param(IS_TIM1_COUNTER_MODE_OK(TIM1_CounterMode));
      00009A 6B 01            [ 1]  213 	ld	(0x01, sp), a
      00009C 27 28            [ 1]  214 	jreq	00104$
      00009E 7B 01            [ 1]  215 	ld	a, (0x01, sp)
      0000A0 A1 10            [ 1]  216 	cp	a, #0x10
      0000A2 27 22            [ 1]  217 	jreq	00104$
      0000A4 7B 01            [ 1]  218 	ld	a, (0x01, sp)
      0000A6 A1 20            [ 1]  219 	cp	a, #0x20
      0000A8 27 1C            [ 1]  220 	jreq	00104$
      0000AA 7B 01            [ 1]  221 	ld	a, (0x01, sp)
      0000AC A1 40            [ 1]  222 	cp	a, #0x40
      0000AE 27 16            [ 1]  223 	jreq	00104$
      0000B0 7B 01            [ 1]  224 	ld	a, (0x01, sp)
      0000B2 A1 60            [ 1]  225 	cp	a, #0x60
      0000B4 27 10            [ 1]  226 	jreq	00104$
      0000B6 89               [ 2]  227 	pushw	x
      0000B7 4B 75            [ 1]  228 	push	#0x75
      0000B9 4B 00            [ 1]  229 	push	#0x00
      0000BB 4B 00            [ 1]  230 	push	#0x00
      0000BD 4B 00            [ 1]  231 	push	#0x00
      0000BF AEr00r00         [ 2]  232 	ldw	x, #(___str_0+0)
      0000C2 CDr00r00         [ 4]  233 	call	_assert_failed
      0000C5 85               [ 2]  234 	popw	x
      0000C6                        235 00104$:
                                    236 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 120: TIM1->ARRH = (uint8_t)(TIM1_Period >> 8);
      0000C6 7B 04            [ 1]  237 	ld	a, (0x04, sp)
      0000C8 C7 52 62         [ 1]  238 	ld	0x5262, a
                                    239 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 121: TIM1->ARRL = (uint8_t)(TIM1_Period);
      0000CB 7B 05            [ 1]  240 	ld	a, (0x05, sp)
      0000CD C7 52 63         [ 1]  241 	ld	0x5263, a
                                    242 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 124: TIM1->PSCRH = (uint8_t)(TIM1_Prescaler >> 8);
      0000D0 9E               [ 1]  243 	ld	a, xh
      0000D1 C7 52 60         [ 1]  244 	ld	0x5260, a
                                    245 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 125: TIM1->PSCRL = (uint8_t)(TIM1_Prescaler);
      0000D4 9F               [ 1]  246 	ld	a, xl
      0000D5 C7 52 61         [ 1]  247 	ld	0x5261, a
                                    248 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 128: TIM1->CR1 = (uint8_t)((uint8_t)(TIM1->CR1 & (uint8_t)(~(TIM1_CR1_CMS | TIM1_CR1_DIR)))
      0000D8 C6 52 50         [ 1]  249 	ld	a, 0x5250
      0000DB A4 8F            [ 1]  250 	and	a, #0x8f
                                    251 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 129: | (uint8_t)(TIM1_CounterMode));
      0000DD 1A 01            [ 1]  252 	or	a, (0x01, sp)
      0000DF C7 52 50         [ 1]  253 	ld	0x5250, a
                                    254 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 132: TIM1->RCR = TIM1_RepetitionCounter;
      0000E2 AE 52 64         [ 2]  255 	ldw	x, #0x5264
      0000E5 7B 06            [ 1]  256 	ld	a, (0x06, sp)
      0000E7 F7               [ 1]  257 	ld	(x), a
                                    258 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 133: }
      0000E8 1E 02            [ 2]  259 	ldw	x, (2, sp)
      0000EA 5B 06            [ 2]  260 	addw	sp, #6
      0000EC FC               [ 2]  261 	jp	(x)
                                    262 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 154: void TIM1_OC1Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    263 ;	-----------------------------------------
                                    264 ;	 function TIM1_OC1Init
                                    265 ;	-----------------------------------------
      0000ED                        266 _TIM1_OC1Init:
      0000ED 52 04            [ 2]  267 	sub	sp, #4
                                    268 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 164: assert_param(IS_TIM1_OC_MODE_OK(TIM1_OCMode));
      0000EF 6B 04            [ 1]  269 	ld	(0x04, sp), a
      0000F1 27 2A            [ 1]  270 	jreq	00104$
      0000F3 7B 04            [ 1]  271 	ld	a, (0x04, sp)
      0000F5 A1 10            [ 1]  272 	cp	a, #0x10
      0000F7 27 24            [ 1]  273 	jreq	00104$
      0000F9 7B 04            [ 1]  274 	ld	a, (0x04, sp)
      0000FB A1 20            [ 1]  275 	cp	a, #0x20
      0000FD 27 1E            [ 1]  276 	jreq	00104$
      0000FF 7B 04            [ 1]  277 	ld	a, (0x04, sp)
      000101 A1 30            [ 1]  278 	cp	a, #0x30
      000103 27 18            [ 1]  279 	jreq	00104$
      000105 7B 04            [ 1]  280 	ld	a, (0x04, sp)
      000107 A1 60            [ 1]  281 	cp	a, #0x60
      000109 27 12            [ 1]  282 	jreq	00104$
      00010B 7B 04            [ 1]  283 	ld	a, (0x04, sp)
      00010D A1 70            [ 1]  284 	cp	a, #0x70
      00010F 27 0C            [ 1]  285 	jreq	00104$
      000111 4B A4            [ 1]  286 	push	#0xa4
      000113 5F               [ 1]  287 	clrw	x
      000114 89               [ 2]  288 	pushw	x
      000115 4B 00            [ 1]  289 	push	#0x00
      000117 AEr00r00         [ 2]  290 	ldw	x, #(___str_0+0)
      00011A CDr00r00         [ 4]  291 	call	_assert_failed
      00011D                        292 00104$:
                                    293 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 165: assert_param(IS_TIM1_OUTPUT_STATE_OK(TIM1_OutputState));
      00011D 0D 07            [ 1]  294 	tnz	(0x07, sp)
      00011F 27 12            [ 1]  295 	jreq	00121$
      000121 7B 07            [ 1]  296 	ld	a, (0x07, sp)
      000123 A1 11            [ 1]  297 	cp	a, #0x11
      000125 27 0C            [ 1]  298 	jreq	00121$
      000127 4B A5            [ 1]  299 	push	#0xa5
      000129 5F               [ 1]  300 	clrw	x
      00012A 89               [ 2]  301 	pushw	x
      00012B 4B 00            [ 1]  302 	push	#0x00
      00012D AEr00r00         [ 2]  303 	ldw	x, #(___str_0+0)
      000130 CDr00r00         [ 4]  304 	call	_assert_failed
      000133                        305 00121$:
                                    306 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 166: assert_param(IS_TIM1_OUTPUTN_STATE_OK(TIM1_OutputNState));
      000133 0D 08            [ 1]  307 	tnz	(0x08, sp)
      000135 27 12            [ 1]  308 	jreq	00126$
      000137 7B 08            [ 1]  309 	ld	a, (0x08, sp)
      000139 A1 44            [ 1]  310 	cp	a, #0x44
      00013B 27 0C            [ 1]  311 	jreq	00126$
      00013D 4B A6            [ 1]  312 	push	#0xa6
      00013F 5F               [ 1]  313 	clrw	x
      000140 89               [ 2]  314 	pushw	x
      000141 4B 00            [ 1]  315 	push	#0x00
      000143 AEr00r00         [ 2]  316 	ldw	x, #(___str_0+0)
      000146 CDr00r00         [ 4]  317 	call	_assert_failed
      000149                        318 00126$:
                                    319 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 167: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      000149 0D 0B            [ 1]  320 	tnz	(0x0b, sp)
      00014B 27 12            [ 1]  321 	jreq	00131$
      00014D 7B 0B            [ 1]  322 	ld	a, (0x0b, sp)
      00014F A1 22            [ 1]  323 	cp	a, #0x22
      000151 27 0C            [ 1]  324 	jreq	00131$
      000153 4B A7            [ 1]  325 	push	#0xa7
      000155 5F               [ 1]  326 	clrw	x
      000156 89               [ 2]  327 	pushw	x
      000157 4B 00            [ 1]  328 	push	#0x00
      000159 AEr00r00         [ 2]  329 	ldw	x, #(___str_0+0)
      00015C CDr00r00         [ 4]  330 	call	_assert_failed
      00015F                        331 00131$:
                                    332 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 168: assert_param(IS_TIM1_OCN_POLARITY_OK(TIM1_OCNPolarity));
      00015F 0D 0C            [ 1]  333 	tnz	(0x0c, sp)
      000161 27 12            [ 1]  334 	jreq	00136$
      000163 7B 0C            [ 1]  335 	ld	a, (0x0c, sp)
      000165 A1 88            [ 1]  336 	cp	a, #0x88
      000167 27 0C            [ 1]  337 	jreq	00136$
      000169 4B A8            [ 1]  338 	push	#0xa8
      00016B 5F               [ 1]  339 	clrw	x
      00016C 89               [ 2]  340 	pushw	x
      00016D 4B 00            [ 1]  341 	push	#0x00
      00016F AEr00r00         [ 2]  342 	ldw	x, #(___str_0+0)
      000172 CDr00r00         [ 4]  343 	call	_assert_failed
      000175                        344 00136$:
                                    345 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 169: assert_param(IS_TIM1_OCIDLE_STATE_OK(TIM1_OCIdleState));
      000175 7B 0D            [ 1]  346 	ld	a, (0x0d, sp)
      000177 A1 55            [ 1]  347 	cp	a, #0x55
      000179 27 10            [ 1]  348 	jreq	00141$
      00017B 0D 0D            [ 1]  349 	tnz	(0x0d, sp)
      00017D 27 0C            [ 1]  350 	jreq	00141$
      00017F 4B A9            [ 1]  351 	push	#0xa9
      000181 5F               [ 1]  352 	clrw	x
      000182 89               [ 2]  353 	pushw	x
      000183 4B 00            [ 1]  354 	push	#0x00
      000185 AEr00r00         [ 2]  355 	ldw	x, #(___str_0+0)
      000188 CDr00r00         [ 4]  356 	call	_assert_failed
      00018B                        357 00141$:
                                    358 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 170: assert_param(IS_TIM1_OCNIDLE_STATE_OK(TIM1_OCNIdleState));
      00018B 7B 0E            [ 1]  359 	ld	a, (0x0e, sp)
      00018D A1 2A            [ 1]  360 	cp	a, #0x2a
      00018F 27 10            [ 1]  361 	jreq	00146$
      000191 0D 0E            [ 1]  362 	tnz	(0x0e, sp)
      000193 27 0C            [ 1]  363 	jreq	00146$
      000195 4B AA            [ 1]  364 	push	#0xaa
      000197 5F               [ 1]  365 	clrw	x
      000198 89               [ 2]  366 	pushw	x
      000199 4B 00            [ 1]  367 	push	#0x00
      00019B AEr00r00         [ 2]  368 	ldw	x, #(___str_0+0)
      00019E CDr00r00         [ 4]  369 	call	_assert_failed
      0001A1                        370 00146$:
                                    371 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 174: TIM1->CCER1 &= (uint8_t)(~( TIM1_CCER1_CC1E | TIM1_CCER1_CC1NE 
      0001A1 C6 52 5C         [ 1]  372 	ld	a, 0x525c
      0001A4 A4 F0            [ 1]  373 	and	a, #0xf0
      0001A6 C7 52 5C         [ 1]  374 	ld	0x525c, a
                                    375 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 178: TIM1->CCER1 |= (uint8_t)((uint8_t)((uint8_t)(TIM1_OutputState & TIM1_CCER1_CC1E)
      0001A9 C6 52 5C         [ 1]  376 	ld	a, 0x525c
      0001AC 6B 01            [ 1]  377 	ld	(0x01, sp), a
      0001AE 7B 07            [ 1]  378 	ld	a, (0x07, sp)
      0001B0 A4 01            [ 1]  379 	and	a, #0x01
      0001B2 6B 03            [ 1]  380 	ld	(0x03, sp), a
                                    381 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 179: | (uint8_t)(TIM1_OutputNState & TIM1_CCER1_CC1NE))
      0001B4 7B 08            [ 1]  382 	ld	a, (0x08, sp)
      0001B6 A4 04            [ 1]  383 	and	a, #0x04
      0001B8 1A 03            [ 1]  384 	or	a, (0x03, sp)
      0001BA 6B 02            [ 1]  385 	ld	(0x02, sp), a
                                    386 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 180: | (uint8_t)( (uint8_t)(TIM1_OCPolarity  & TIM1_CCER1_CC1P)
      0001BC 7B 0B            [ 1]  387 	ld	a, (0x0b, sp)
      0001BE A4 02            [ 1]  388 	and	a, #0x02
      0001C0 6B 03            [ 1]  389 	ld	(0x03, sp), a
                                    390 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 181: | (uint8_t)(TIM1_OCNPolarity & TIM1_CCER1_CC1NP)));
      0001C2 7B 0C            [ 1]  391 	ld	a, (0x0c, sp)
      0001C4 A4 08            [ 1]  392 	and	a, #0x08
      0001C6 1A 03            [ 1]  393 	or	a, (0x03, sp)
      0001C8 1A 02            [ 1]  394 	or	a, (0x02, sp)
      0001CA 1A 01            [ 1]  395 	or	a, (0x01, sp)
      0001CC C7 52 5C         [ 1]  396 	ld	0x525c, a
                                    397 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 184: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      0001CF C6 52 58         [ 1]  398 	ld	a, 0x5258
      0001D2 A4 8F            [ 1]  399 	and	a, #0x8f
                                    400 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 185: (uint8_t)TIM1_OCMode);
      0001D4 1A 04            [ 1]  401 	or	a, (0x04, sp)
      0001D6 C7 52 58         [ 1]  402 	ld	0x5258, a
                                    403 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 188: TIM1->OISR &= (uint8_t)(~(TIM1_OISR_OIS1 | TIM1_OISR_OIS1N));
      0001D9 C6 52 6F         [ 1]  404 	ld	a, 0x526f
      0001DC A4 FC            [ 1]  405 	and	a, #0xfc
      0001DE C7 52 6F         [ 1]  406 	ld	0x526f, a
                                    407 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 190: TIM1->OISR |= (uint8_t)((uint8_t)( TIM1_OCIdleState & TIM1_OISR_OIS1 ) | 
      0001E1 C6 52 6F         [ 1]  408 	ld	a, 0x526f
      0001E4 6B 02            [ 1]  409 	ld	(0x02, sp), a
      0001E6 7B 0D            [ 1]  410 	ld	a, (0x0d, sp)
      0001E8 A4 01            [ 1]  411 	and	a, #0x01
      0001EA 6B 03            [ 1]  412 	ld	(0x03, sp), a
                                    413 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 191: (uint8_t)( TIM1_OCNIdleState & TIM1_OISR_OIS1N ));
      0001EC 7B 0E            [ 1]  414 	ld	a, (0x0e, sp)
      0001EE A4 02            [ 1]  415 	and	a, #0x02
      0001F0 1A 03            [ 1]  416 	or	a, (0x03, sp)
      0001F2 1A 02            [ 1]  417 	or	a, (0x02, sp)
      0001F4 C7 52 6F         [ 1]  418 	ld	0x526f, a
                                    419 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 194: TIM1->CCR1H = (uint8_t)(TIM1_Pulse >> 8);
      0001F7 7B 09            [ 1]  420 	ld	a, (0x09, sp)
      0001F9 C7 52 65         [ 1]  421 	ld	0x5265, a
                                    422 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 195: TIM1->CCR1L = (uint8_t)(TIM1_Pulse);
      0001FC 7B 0A            [ 1]  423 	ld	a, (0x0a, sp)
      0001FE C7 52 66         [ 1]  424 	ld	0x5266, a
                                    425 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 196: }
      000201 1E 05            [ 2]  426 	ldw	x, (5, sp)
      000203 5B 0E            [ 2]  427 	addw	sp, #14
      000205 FC               [ 2]  428 	jp	(x)
                                    429 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 217: void TIM1_OC2Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    430 ;	-----------------------------------------
                                    431 ;	 function TIM1_OC2Init
                                    432 ;	-----------------------------------------
      000206                        433 _TIM1_OC2Init:
      000206 52 04            [ 2]  434 	sub	sp, #4
                                    435 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 227: assert_param(IS_TIM1_OC_MODE_OK(TIM1_OCMode));
      000208 6B 04            [ 1]  436 	ld	(0x04, sp), a
      00020A 27 2A            [ 1]  437 	jreq	00104$
      00020C 7B 04            [ 1]  438 	ld	a, (0x04, sp)
      00020E A1 10            [ 1]  439 	cp	a, #0x10
      000210 27 24            [ 1]  440 	jreq	00104$
      000212 7B 04            [ 1]  441 	ld	a, (0x04, sp)
      000214 A1 20            [ 1]  442 	cp	a, #0x20
      000216 27 1E            [ 1]  443 	jreq	00104$
      000218 7B 04            [ 1]  444 	ld	a, (0x04, sp)
      00021A A1 30            [ 1]  445 	cp	a, #0x30
      00021C 27 18            [ 1]  446 	jreq	00104$
      00021E 7B 04            [ 1]  447 	ld	a, (0x04, sp)
      000220 A1 60            [ 1]  448 	cp	a, #0x60
      000222 27 12            [ 1]  449 	jreq	00104$
      000224 7B 04            [ 1]  450 	ld	a, (0x04, sp)
      000226 A1 70            [ 1]  451 	cp	a, #0x70
      000228 27 0C            [ 1]  452 	jreq	00104$
      00022A 4B E3            [ 1]  453 	push	#0xe3
      00022C 5F               [ 1]  454 	clrw	x
      00022D 89               [ 2]  455 	pushw	x
      00022E 4B 00            [ 1]  456 	push	#0x00
      000230 AEr00r00         [ 2]  457 	ldw	x, #(___str_0+0)
      000233 CDr00r00         [ 4]  458 	call	_assert_failed
      000236                        459 00104$:
                                    460 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 228: assert_param(IS_TIM1_OUTPUT_STATE_OK(TIM1_OutputState));
      000236 0D 07            [ 1]  461 	tnz	(0x07, sp)
      000238 27 12            [ 1]  462 	jreq	00121$
      00023A 7B 07            [ 1]  463 	ld	a, (0x07, sp)
      00023C A1 11            [ 1]  464 	cp	a, #0x11
      00023E 27 0C            [ 1]  465 	jreq	00121$
      000240 4B E4            [ 1]  466 	push	#0xe4
      000242 5F               [ 1]  467 	clrw	x
      000243 89               [ 2]  468 	pushw	x
      000244 4B 00            [ 1]  469 	push	#0x00
      000246 AEr00r00         [ 2]  470 	ldw	x, #(___str_0+0)
      000249 CDr00r00         [ 4]  471 	call	_assert_failed
      00024C                        472 00121$:
                                    473 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 229: assert_param(IS_TIM1_OUTPUTN_STATE_OK(TIM1_OutputNState));
      00024C 0D 08            [ 1]  474 	tnz	(0x08, sp)
      00024E 27 12            [ 1]  475 	jreq	00126$
      000250 7B 08            [ 1]  476 	ld	a, (0x08, sp)
      000252 A1 44            [ 1]  477 	cp	a, #0x44
      000254 27 0C            [ 1]  478 	jreq	00126$
      000256 4B E5            [ 1]  479 	push	#0xe5
      000258 5F               [ 1]  480 	clrw	x
      000259 89               [ 2]  481 	pushw	x
      00025A 4B 00            [ 1]  482 	push	#0x00
      00025C AEr00r00         [ 2]  483 	ldw	x, #(___str_0+0)
      00025F CDr00r00         [ 4]  484 	call	_assert_failed
      000262                        485 00126$:
                                    486 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 230: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      000262 0D 0B            [ 1]  487 	tnz	(0x0b, sp)
      000264 27 12            [ 1]  488 	jreq	00131$
      000266 7B 0B            [ 1]  489 	ld	a, (0x0b, sp)
      000268 A1 22            [ 1]  490 	cp	a, #0x22
      00026A 27 0C            [ 1]  491 	jreq	00131$
      00026C 4B E6            [ 1]  492 	push	#0xe6
      00026E 5F               [ 1]  493 	clrw	x
      00026F 89               [ 2]  494 	pushw	x
      000270 4B 00            [ 1]  495 	push	#0x00
      000272 AEr00r00         [ 2]  496 	ldw	x, #(___str_0+0)
      000275 CDr00r00         [ 4]  497 	call	_assert_failed
      000278                        498 00131$:
                                    499 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 231: assert_param(IS_TIM1_OCN_POLARITY_OK(TIM1_OCNPolarity));
      000278 0D 0C            [ 1]  500 	tnz	(0x0c, sp)
      00027A 27 12            [ 1]  501 	jreq	00136$
      00027C 7B 0C            [ 1]  502 	ld	a, (0x0c, sp)
      00027E A1 88            [ 1]  503 	cp	a, #0x88
      000280 27 0C            [ 1]  504 	jreq	00136$
      000282 4B E7            [ 1]  505 	push	#0xe7
      000284 5F               [ 1]  506 	clrw	x
      000285 89               [ 2]  507 	pushw	x
      000286 4B 00            [ 1]  508 	push	#0x00
      000288 AEr00r00         [ 2]  509 	ldw	x, #(___str_0+0)
      00028B CDr00r00         [ 4]  510 	call	_assert_failed
      00028E                        511 00136$:
                                    512 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 232: assert_param(IS_TIM1_OCIDLE_STATE_OK(TIM1_OCIdleState));
      00028E 7B 0D            [ 1]  513 	ld	a, (0x0d, sp)
      000290 A1 55            [ 1]  514 	cp	a, #0x55
      000292 27 10            [ 1]  515 	jreq	00141$
      000294 0D 0D            [ 1]  516 	tnz	(0x0d, sp)
      000296 27 0C            [ 1]  517 	jreq	00141$
      000298 4B E8            [ 1]  518 	push	#0xe8
      00029A 5F               [ 1]  519 	clrw	x
      00029B 89               [ 2]  520 	pushw	x
      00029C 4B 00            [ 1]  521 	push	#0x00
      00029E AEr00r00         [ 2]  522 	ldw	x, #(___str_0+0)
      0002A1 CDr00r00         [ 4]  523 	call	_assert_failed
      0002A4                        524 00141$:
                                    525 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 233: assert_param(IS_TIM1_OCNIDLE_STATE_OK(TIM1_OCNIdleState));
      0002A4 7B 0E            [ 1]  526 	ld	a, (0x0e, sp)
      0002A6 A1 2A            [ 1]  527 	cp	a, #0x2a
      0002A8 27 10            [ 1]  528 	jreq	00146$
      0002AA 0D 0E            [ 1]  529 	tnz	(0x0e, sp)
      0002AC 27 0C            [ 1]  530 	jreq	00146$
      0002AE 4B E9            [ 1]  531 	push	#0xe9
      0002B0 5F               [ 1]  532 	clrw	x
      0002B1 89               [ 2]  533 	pushw	x
      0002B2 4B 00            [ 1]  534 	push	#0x00
      0002B4 AEr00r00         [ 2]  535 	ldw	x, #(___str_0+0)
      0002B7 CDr00r00         [ 4]  536 	call	_assert_failed
      0002BA                        537 00146$:
                                    538 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 237: TIM1->CCER1 &= (uint8_t)(~( TIM1_CCER1_CC2E | TIM1_CCER1_CC2NE | 
      0002BA C6 52 5C         [ 1]  539 	ld	a, 0x525c
      0002BD A4 0F            [ 1]  540 	and	a, #0x0f
      0002BF C7 52 5C         [ 1]  541 	ld	0x525c, a
                                    542 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 242: TIM1->CCER1 |= (uint8_t)((uint8_t)((uint8_t)(TIM1_OutputState & TIM1_CCER1_CC2E  ) | 
      0002C2 C6 52 5C         [ 1]  543 	ld	a, 0x525c
      0002C5 6B 01            [ 1]  544 	ld	(0x01, sp), a
      0002C7 7B 07            [ 1]  545 	ld	a, (0x07, sp)
      0002C9 A4 10            [ 1]  546 	and	a, #0x10
      0002CB 6B 03            [ 1]  547 	ld	(0x03, sp), a
                                    548 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 243: (uint8_t)(TIM1_OutputNState & TIM1_CCER1_CC2NE )) | 
      0002CD 7B 08            [ 1]  549 	ld	a, (0x08, sp)
      0002CF A4 40            [ 1]  550 	and	a, #0x40
      0002D1 1A 03            [ 1]  551 	or	a, (0x03, sp)
      0002D3 6B 02            [ 1]  552 	ld	(0x02, sp), a
                                    553 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 244: (uint8_t)((uint8_t)(TIM1_OCPolarity  & TIM1_CCER1_CC2P  ) | 
      0002D5 7B 0B            [ 1]  554 	ld	a, (0x0b, sp)
      0002D7 A4 20            [ 1]  555 	and	a, #0x20
      0002D9 6B 03            [ 1]  556 	ld	(0x03, sp), a
                                    557 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 245: (uint8_t)(TIM1_OCNPolarity & TIM1_CCER1_CC2NP )));
      0002DB 7B 0C            [ 1]  558 	ld	a, (0x0c, sp)
      0002DD A4 80            [ 1]  559 	and	a, #0x80
      0002DF 1A 03            [ 1]  560 	or	a, (0x03, sp)
      0002E1 1A 02            [ 1]  561 	or	a, (0x02, sp)
      0002E3 1A 01            [ 1]  562 	or	a, (0x01, sp)
      0002E5 C7 52 5C         [ 1]  563 	ld	0x525c, a
                                    564 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 248: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      0002E8 C6 52 59         [ 1]  565 	ld	a, 0x5259
      0002EB A4 8F            [ 1]  566 	and	a, #0x8f
                                    567 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 249: (uint8_t)TIM1_OCMode);
      0002ED 1A 04            [ 1]  568 	or	a, (0x04, sp)
      0002EF C7 52 59         [ 1]  569 	ld	0x5259, a
                                    570 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 252: TIM1->OISR &= (uint8_t)(~(TIM1_OISR_OIS2 | TIM1_OISR_OIS2N));
      0002F2 C6 52 6F         [ 1]  571 	ld	a, 0x526f
      0002F5 A4 F3            [ 1]  572 	and	a, #0xf3
      0002F7 C7 52 6F         [ 1]  573 	ld	0x526f, a
                                    574 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 254: TIM1->OISR |= (uint8_t)((uint8_t)(TIM1_OISR_OIS2 & TIM1_OCIdleState) | 
      0002FA C6 52 6F         [ 1]  575 	ld	a, 0x526f
      0002FD 6B 02            [ 1]  576 	ld	(0x02, sp), a
      0002FF 7B 0D            [ 1]  577 	ld	a, (0x0d, sp)
      000301 A4 04            [ 1]  578 	and	a, #0x04
      000303 6B 03            [ 1]  579 	ld	(0x03, sp), a
                                    580 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 255: (uint8_t)(TIM1_OISR_OIS2N & TIM1_OCNIdleState));
      000305 7B 0E            [ 1]  581 	ld	a, (0x0e, sp)
      000307 A4 08            [ 1]  582 	and	a, #0x08
      000309 1A 03            [ 1]  583 	or	a, (0x03, sp)
      00030B 1A 02            [ 1]  584 	or	a, (0x02, sp)
      00030D C7 52 6F         [ 1]  585 	ld	0x526f, a
                                    586 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 258: TIM1->CCR2H = (uint8_t)(TIM1_Pulse >> 8);
      000310 7B 09            [ 1]  587 	ld	a, (0x09, sp)
      000312 C7 52 67         [ 1]  588 	ld	0x5267, a
                                    589 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 259: TIM1->CCR2L = (uint8_t)(TIM1_Pulse);
      000315 7B 0A            [ 1]  590 	ld	a, (0x0a, sp)
      000317 C7 52 68         [ 1]  591 	ld	0x5268, a
                                    592 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 260: }
      00031A 1E 05            [ 2]  593 	ldw	x, (5, sp)
      00031C 5B 0E            [ 2]  594 	addw	sp, #14
      00031E FC               [ 2]  595 	jp	(x)
                                    596 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 281: void TIM1_OC3Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    597 ;	-----------------------------------------
                                    598 ;	 function TIM1_OC3Init
                                    599 ;	-----------------------------------------
      00031F                        600 _TIM1_OC3Init:
      00031F 52 04            [ 2]  601 	sub	sp, #4
                                    602 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 291: assert_param(IS_TIM1_OC_MODE_OK(TIM1_OCMode));
      000321 6B 04            [ 1]  603 	ld	(0x04, sp), a
      000323 27 2A            [ 1]  604 	jreq	00104$
      000325 7B 04            [ 1]  605 	ld	a, (0x04, sp)
      000327 A1 10            [ 1]  606 	cp	a, #0x10
      000329 27 24            [ 1]  607 	jreq	00104$
      00032B 7B 04            [ 1]  608 	ld	a, (0x04, sp)
      00032D A1 20            [ 1]  609 	cp	a, #0x20
      00032F 27 1E            [ 1]  610 	jreq	00104$
      000331 7B 04            [ 1]  611 	ld	a, (0x04, sp)
      000333 A1 30            [ 1]  612 	cp	a, #0x30
      000335 27 18            [ 1]  613 	jreq	00104$
      000337 7B 04            [ 1]  614 	ld	a, (0x04, sp)
      000339 A1 60            [ 1]  615 	cp	a, #0x60
      00033B 27 12            [ 1]  616 	jreq	00104$
      00033D 7B 04            [ 1]  617 	ld	a, (0x04, sp)
      00033F A1 70            [ 1]  618 	cp	a, #0x70
      000341 27 0C            [ 1]  619 	jreq	00104$
      000343 4B 23            [ 1]  620 	push	#0x23
      000345 4B 01            [ 1]  621 	push	#0x01
      000347 5F               [ 1]  622 	clrw	x
      000348 89               [ 2]  623 	pushw	x
      000349 AEr00r00         [ 2]  624 	ldw	x, #(___str_0+0)
      00034C CDr00r00         [ 4]  625 	call	_assert_failed
      00034F                        626 00104$:
                                    627 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 292: assert_param(IS_TIM1_OUTPUT_STATE_OK(TIM1_OutputState));
      00034F 0D 07            [ 1]  628 	tnz	(0x07, sp)
      000351 27 12            [ 1]  629 	jreq	00121$
      000353 7B 07            [ 1]  630 	ld	a, (0x07, sp)
      000355 A1 11            [ 1]  631 	cp	a, #0x11
      000357 27 0C            [ 1]  632 	jreq	00121$
      000359 4B 24            [ 1]  633 	push	#0x24
      00035B 4B 01            [ 1]  634 	push	#0x01
      00035D 5F               [ 1]  635 	clrw	x
      00035E 89               [ 2]  636 	pushw	x
      00035F AEr00r00         [ 2]  637 	ldw	x, #(___str_0+0)
      000362 CDr00r00         [ 4]  638 	call	_assert_failed
      000365                        639 00121$:
                                    640 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 293: assert_param(IS_TIM1_OUTPUTN_STATE_OK(TIM1_OutputNState));
      000365 0D 08            [ 1]  641 	tnz	(0x08, sp)
      000367 27 12            [ 1]  642 	jreq	00126$
      000369 7B 08            [ 1]  643 	ld	a, (0x08, sp)
      00036B A1 44            [ 1]  644 	cp	a, #0x44
      00036D 27 0C            [ 1]  645 	jreq	00126$
      00036F 4B 25            [ 1]  646 	push	#0x25
      000371 4B 01            [ 1]  647 	push	#0x01
      000373 5F               [ 1]  648 	clrw	x
      000374 89               [ 2]  649 	pushw	x
      000375 AEr00r00         [ 2]  650 	ldw	x, #(___str_0+0)
      000378 CDr00r00         [ 4]  651 	call	_assert_failed
      00037B                        652 00126$:
                                    653 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 294: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      00037B 0D 0B            [ 1]  654 	tnz	(0x0b, sp)
      00037D 27 12            [ 1]  655 	jreq	00131$
      00037F 7B 0B            [ 1]  656 	ld	a, (0x0b, sp)
      000381 A1 22            [ 1]  657 	cp	a, #0x22
      000383 27 0C            [ 1]  658 	jreq	00131$
      000385 4B 26            [ 1]  659 	push	#0x26
      000387 4B 01            [ 1]  660 	push	#0x01
      000389 5F               [ 1]  661 	clrw	x
      00038A 89               [ 2]  662 	pushw	x
      00038B AEr00r00         [ 2]  663 	ldw	x, #(___str_0+0)
      00038E CDr00r00         [ 4]  664 	call	_assert_failed
      000391                        665 00131$:
                                    666 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 295: assert_param(IS_TIM1_OCN_POLARITY_OK(TIM1_OCNPolarity));
      000391 0D 0C            [ 1]  667 	tnz	(0x0c, sp)
      000393 27 12            [ 1]  668 	jreq	00136$
      000395 7B 0C            [ 1]  669 	ld	a, (0x0c, sp)
      000397 A1 88            [ 1]  670 	cp	a, #0x88
      000399 27 0C            [ 1]  671 	jreq	00136$
      00039B 4B 27            [ 1]  672 	push	#0x27
      00039D 4B 01            [ 1]  673 	push	#0x01
      00039F 5F               [ 1]  674 	clrw	x
      0003A0 89               [ 2]  675 	pushw	x
      0003A1 AEr00r00         [ 2]  676 	ldw	x, #(___str_0+0)
      0003A4 CDr00r00         [ 4]  677 	call	_assert_failed
      0003A7                        678 00136$:
                                    679 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 296: assert_param(IS_TIM1_OCIDLE_STATE_OK(TIM1_OCIdleState));
      0003A7 7B 0D            [ 1]  680 	ld	a, (0x0d, sp)
      0003A9 A1 55            [ 1]  681 	cp	a, #0x55
      0003AB 27 10            [ 1]  682 	jreq	00141$
      0003AD 0D 0D            [ 1]  683 	tnz	(0x0d, sp)
      0003AF 27 0C            [ 1]  684 	jreq	00141$
      0003B1 4B 28            [ 1]  685 	push	#0x28
      0003B3 4B 01            [ 1]  686 	push	#0x01
      0003B5 5F               [ 1]  687 	clrw	x
      0003B6 89               [ 2]  688 	pushw	x
      0003B7 AEr00r00         [ 2]  689 	ldw	x, #(___str_0+0)
      0003BA CDr00r00         [ 4]  690 	call	_assert_failed
      0003BD                        691 00141$:
                                    692 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 297: assert_param(IS_TIM1_OCNIDLE_STATE_OK(TIM1_OCNIdleState));
      0003BD 7B 0E            [ 1]  693 	ld	a, (0x0e, sp)
      0003BF A1 2A            [ 1]  694 	cp	a, #0x2a
      0003C1 27 10            [ 1]  695 	jreq	00146$
      0003C3 0D 0E            [ 1]  696 	tnz	(0x0e, sp)
      0003C5 27 0C            [ 1]  697 	jreq	00146$
      0003C7 4B 29            [ 1]  698 	push	#0x29
      0003C9 4B 01            [ 1]  699 	push	#0x01
      0003CB 5F               [ 1]  700 	clrw	x
      0003CC 89               [ 2]  701 	pushw	x
      0003CD AEr00r00         [ 2]  702 	ldw	x, #(___str_0+0)
      0003D0 CDr00r00         [ 4]  703 	call	_assert_failed
      0003D3                        704 00146$:
                                    705 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 301: TIM1->CCER2 &= (uint8_t)(~( TIM1_CCER2_CC3E | TIM1_CCER2_CC3NE | 
      0003D3 C6 52 5D         [ 1]  706 	ld	a, 0x525d
      0003D6 A4 F0            [ 1]  707 	and	a, #0xf0
      0003D8 C7 52 5D         [ 1]  708 	ld	0x525d, a
                                    709 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 305: TIM1->CCER2 |= (uint8_t)((uint8_t)((uint8_t)(TIM1_OutputState  & TIM1_CCER2_CC3E   ) |
      0003DB C6 52 5D         [ 1]  710 	ld	a, 0x525d
      0003DE 6B 01            [ 1]  711 	ld	(0x01, sp), a
      0003E0 7B 07            [ 1]  712 	ld	a, (0x07, sp)
      0003E2 A4 01            [ 1]  713 	and	a, #0x01
      0003E4 6B 03            [ 1]  714 	ld	(0x03, sp), a
                                    715 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 306: (uint8_t)(TIM1_OutputNState & TIM1_CCER2_CC3NE  )) | 
      0003E6 7B 08            [ 1]  716 	ld	a, (0x08, sp)
      0003E8 A4 04            [ 1]  717 	and	a, #0x04
      0003EA 1A 03            [ 1]  718 	or	a, (0x03, sp)
      0003EC 6B 02            [ 1]  719 	ld	(0x02, sp), a
                                    720 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 307: (uint8_t)((uint8_t)(TIM1_OCPolarity   & TIM1_CCER2_CC3P   ) | 
      0003EE 7B 0B            [ 1]  721 	ld	a, (0x0b, sp)
      0003F0 A4 02            [ 1]  722 	and	a, #0x02
      0003F2 6B 03            [ 1]  723 	ld	(0x03, sp), a
                                    724 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 308: (uint8_t)(TIM1_OCNPolarity  & TIM1_CCER2_CC3NP  )));
      0003F4 7B 0C            [ 1]  725 	ld	a, (0x0c, sp)
      0003F6 A4 08            [ 1]  726 	and	a, #0x08
      0003F8 1A 03            [ 1]  727 	or	a, (0x03, sp)
      0003FA 1A 02            [ 1]  728 	or	a, (0x02, sp)
      0003FC 1A 01            [ 1]  729 	or	a, (0x01, sp)
      0003FE C7 52 5D         [ 1]  730 	ld	0x525d, a
                                    731 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 311: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      000401 C6 52 5A         [ 1]  732 	ld	a, 0x525a
      000404 A4 8F            [ 1]  733 	and	a, #0x8f
                                    734 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 312: (uint8_t)TIM1_OCMode);
      000406 1A 04            [ 1]  735 	or	a, (0x04, sp)
      000408 C7 52 5A         [ 1]  736 	ld	0x525a, a
                                    737 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 315: TIM1->OISR &= (uint8_t)(~(TIM1_OISR_OIS3 | TIM1_OISR_OIS3N));
      00040B C6 52 6F         [ 1]  738 	ld	a, 0x526f
      00040E A4 CF            [ 1]  739 	and	a, #0xcf
      000410 C7 52 6F         [ 1]  740 	ld	0x526f, a
                                    741 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 317: TIM1->OISR |= (uint8_t)((uint8_t)(TIM1_OISR_OIS3 & TIM1_OCIdleState) | 
      000413 C6 52 6F         [ 1]  742 	ld	a, 0x526f
      000416 6B 02            [ 1]  743 	ld	(0x02, sp), a
      000418 7B 0D            [ 1]  744 	ld	a, (0x0d, sp)
      00041A A4 10            [ 1]  745 	and	a, #0x10
      00041C 6B 03            [ 1]  746 	ld	(0x03, sp), a
                                    747 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 318: (uint8_t)(TIM1_OISR_OIS3N & TIM1_OCNIdleState));
      00041E 7B 0E            [ 1]  748 	ld	a, (0x0e, sp)
      000420 A4 20            [ 1]  749 	and	a, #0x20
      000422 1A 03            [ 1]  750 	or	a, (0x03, sp)
      000424 1A 02            [ 1]  751 	or	a, (0x02, sp)
      000426 C7 52 6F         [ 1]  752 	ld	0x526f, a
                                    753 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 321: TIM1->CCR3H = (uint8_t)(TIM1_Pulse >> 8);
      000429 7B 09            [ 1]  754 	ld	a, (0x09, sp)
      00042B C7 52 69         [ 1]  755 	ld	0x5269, a
                                    756 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 322: TIM1->CCR3L = (uint8_t)(TIM1_Pulse);
      00042E 7B 0A            [ 1]  757 	ld	a, (0x0a, sp)
      000430 C7 52 6A         [ 1]  758 	ld	0x526a, a
                                    759 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 323: }
      000433 1E 05            [ 2]  760 	ldw	x, (5, sp)
      000435 5B 0E            [ 2]  761 	addw	sp, #14
      000437 FC               [ 2]  762 	jp	(x)
                                    763 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 338: void TIM1_OC4Init(TIM1_OCMode_TypeDef TIM1_OCMode,
                                    764 ;	-----------------------------------------
                                    765 ;	 function TIM1_OC4Init
                                    766 ;	-----------------------------------------
      000438                        767 _TIM1_OC4Init:
      000438 52 03            [ 2]  768 	sub	sp, #3
                                    769 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 345: assert_param(IS_TIM1_OC_MODE_OK(TIM1_OCMode));
      00043A 6B 03            [ 1]  770 	ld	(0x03, sp), a
      00043C 27 2A            [ 1]  771 	jreq	00107$
      00043E 7B 03            [ 1]  772 	ld	a, (0x03, sp)
      000440 A1 10            [ 1]  773 	cp	a, #0x10
      000442 27 24            [ 1]  774 	jreq	00107$
      000444 7B 03            [ 1]  775 	ld	a, (0x03, sp)
      000446 A1 20            [ 1]  776 	cp	a, #0x20
      000448 27 1E            [ 1]  777 	jreq	00107$
      00044A 7B 03            [ 1]  778 	ld	a, (0x03, sp)
      00044C A1 30            [ 1]  779 	cp	a, #0x30
      00044E 27 18            [ 1]  780 	jreq	00107$
      000450 7B 03            [ 1]  781 	ld	a, (0x03, sp)
      000452 A1 60            [ 1]  782 	cp	a, #0x60
      000454 27 12            [ 1]  783 	jreq	00107$
      000456 7B 03            [ 1]  784 	ld	a, (0x03, sp)
      000458 A1 70            [ 1]  785 	cp	a, #0x70
      00045A 27 0C            [ 1]  786 	jreq	00107$
      00045C 4B 59            [ 1]  787 	push	#0x59
      00045E 4B 01            [ 1]  788 	push	#0x01
      000460 5F               [ 1]  789 	clrw	x
      000461 89               [ 2]  790 	pushw	x
      000462 AEr00r00         [ 2]  791 	ldw	x, #(___str_0+0)
      000465 CDr00r00         [ 4]  792 	call	_assert_failed
      000468                        793 00107$:
                                    794 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 346: assert_param(IS_TIM1_OUTPUT_STATE_OK(TIM1_OutputState));
      000468 0D 06            [ 1]  795 	tnz	(0x06, sp)
      00046A 27 12            [ 1]  796 	jreq	00124$
      00046C 7B 06            [ 1]  797 	ld	a, (0x06, sp)
      00046E A1 11            [ 1]  798 	cp	a, #0x11
      000470 27 0C            [ 1]  799 	jreq	00124$
      000472 4B 5A            [ 1]  800 	push	#0x5a
      000474 4B 01            [ 1]  801 	push	#0x01
      000476 5F               [ 1]  802 	clrw	x
      000477 89               [ 2]  803 	pushw	x
      000478 AEr00r00         [ 2]  804 	ldw	x, #(___str_0+0)
      00047B CDr00r00         [ 4]  805 	call	_assert_failed
      00047E                        806 00124$:
                                    807 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 347: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      00047E 0D 09            [ 1]  808 	tnz	(0x09, sp)
      000480 27 12            [ 1]  809 	jreq	00129$
      000482 7B 09            [ 1]  810 	ld	a, (0x09, sp)
      000484 A1 22            [ 1]  811 	cp	a, #0x22
      000486 27 0C            [ 1]  812 	jreq	00129$
      000488 4B 5B            [ 1]  813 	push	#0x5b
      00048A 4B 01            [ 1]  814 	push	#0x01
      00048C 5F               [ 1]  815 	clrw	x
      00048D 89               [ 2]  816 	pushw	x
      00048E AEr00r00         [ 2]  817 	ldw	x, #(___str_0+0)
      000491 CDr00r00         [ 4]  818 	call	_assert_failed
      000494                        819 00129$:
                                    820 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 348: assert_param(IS_TIM1_OCIDLE_STATE_OK(TIM1_OCIdleState));
      000494 7B 0A            [ 1]  821 	ld	a, (0x0a, sp)
      000496 A1 55            [ 1]  822 	cp	a, #0x55
      000498 27 10            [ 1]  823 	jreq	00134$
      00049A 0D 0A            [ 1]  824 	tnz	(0x0a, sp)
      00049C 27 0C            [ 1]  825 	jreq	00134$
      00049E 4B 5C            [ 1]  826 	push	#0x5c
      0004A0 4B 01            [ 1]  827 	push	#0x01
      0004A2 5F               [ 1]  828 	clrw	x
      0004A3 89               [ 2]  829 	pushw	x
      0004A4 AEr00r00         [ 2]  830 	ldw	x, #(___str_0+0)
      0004A7 CDr00r00         [ 4]  831 	call	_assert_failed
      0004AA                        832 00134$:
                                    833 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 351: TIM1->CCER2 &= (uint8_t)(~(TIM1_CCER2_CC4E | TIM1_CCER2_CC4P));
      0004AA C6 52 5D         [ 1]  834 	ld	a, 0x525d
      0004AD A4 CF            [ 1]  835 	and	a, #0xcf
      0004AF C7 52 5D         [ 1]  836 	ld	0x525d, a
                                    837 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 353: TIM1->CCER2 |= (uint8_t)((uint8_t)(TIM1_OutputState & TIM1_CCER2_CC4E ) |  
      0004B2 C6 52 5D         [ 1]  838 	ld	a, 0x525d
      0004B5 6B 01            [ 1]  839 	ld	(0x01, sp), a
      0004B7 7B 06            [ 1]  840 	ld	a, (0x06, sp)
      0004B9 A4 10            [ 1]  841 	and	a, #0x10
      0004BB 6B 02            [ 1]  842 	ld	(0x02, sp), a
                                    843 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 354: (uint8_t)(TIM1_OCPolarity  & TIM1_CCER2_CC4P ));
      0004BD 7B 09            [ 1]  844 	ld	a, (0x09, sp)
      0004BF A4 20            [ 1]  845 	and	a, #0x20
      0004C1 1A 02            [ 1]  846 	or	a, (0x02, sp)
      0004C3 1A 01            [ 1]  847 	or	a, (0x01, sp)
      0004C5 C7 52 5D         [ 1]  848 	ld	0x525d, a
                                    849 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 357: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_OCM)) | 
      0004C8 C6 52 5B         [ 1]  850 	ld	a, 0x525b
      0004CB A4 8F            [ 1]  851 	and	a, #0x8f
      0004CD 1A 03            [ 1]  852 	or	a, (0x03, sp)
      0004CF C7 52 5B         [ 1]  853 	ld	0x525b, a
                                    854 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 363: TIM1->OISR |= (uint8_t)(~TIM1_CCER2_CC4P);
      0004D2 C6 52 6F         [ 1]  855 	ld	a, 0x526f
                                    856 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 361: if (TIM1_OCIdleState != TIM1_OCIDLESTATE_RESET)
      0004D5 0D 0A            [ 1]  857 	tnz	(0x0a, sp)
      0004D7 27 07            [ 1]  858 	jreq	00102$
                                    859 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 363: TIM1->OISR |= (uint8_t)(~TIM1_CCER2_CC4P);
      0004D9 AA DF            [ 1]  860 	or	a, #0xdf
      0004DB C7 52 6F         [ 1]  861 	ld	0x526f, a
      0004DE 20 05            [ 2]  862 	jra	00103$
      0004E0                        863 00102$:
                                    864 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 367: TIM1->OISR &= (uint8_t)(~TIM1_OISR_OIS4);
      0004E0 A4 BF            [ 1]  865 	and	a, #0xbf
      0004E2 C7 52 6F         [ 1]  866 	ld	0x526f, a
      0004E5                        867 00103$:
                                    868 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 371: TIM1->CCR4H = (uint8_t)(TIM1_Pulse >> 8);
      0004E5 7B 07            [ 1]  869 	ld	a, (0x07, sp)
      0004E7 C7 52 6B         [ 1]  870 	ld	0x526b, a
                                    871 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 372: TIM1->CCR4L = (uint8_t)(TIM1_Pulse);
      0004EA 7B 08            [ 1]  872 	ld	a, (0x08, sp)
      0004EC C7 52 6C         [ 1]  873 	ld	0x526c, a
                                    874 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 373: }
      0004EF 1E 04            [ 2]  875 	ldw	x, (4, sp)
      0004F1 5B 0A            [ 2]  876 	addw	sp, #10
      0004F3 FC               [ 2]  877 	jp	(x)
                                    878 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 388: void TIM1_BDTRConfig(TIM1_OSSIState_TypeDef TIM1_OSSIState,
                                    879 ;	-----------------------------------------
                                    880 ;	 function TIM1_BDTRConfig
                                    881 ;	-----------------------------------------
      0004F4                        882 _TIM1_BDTRConfig:
      0004F4 89               [ 2]  883 	pushw	x
                                    884 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 396: assert_param(IS_TIM1_OSSI_STATE_OK(TIM1_OSSIState));
      0004F5 6B 02            [ 1]  885 	ld	(0x02, sp), a
      0004F7 A1 04            [ 1]  886 	cp	a, #0x04
      0004F9 27 10            [ 1]  887 	jreq	00104$
      0004FB 0D 02            [ 1]  888 	tnz	(0x02, sp)
      0004FD 27 0C            [ 1]  889 	jreq	00104$
      0004FF 4B 8C            [ 1]  890 	push	#0x8c
      000501 4B 01            [ 1]  891 	push	#0x01
      000503 5F               [ 1]  892 	clrw	x
      000504 89               [ 2]  893 	pushw	x
      000505 AEr00r00         [ 2]  894 	ldw	x, #(___str_0+0)
      000508 CDr00r00         [ 4]  895 	call	_assert_failed
      00050B                        896 00104$:
                                    897 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 397: assert_param(IS_TIM1_LOCK_LEVEL_OK(TIM1_LockLevel));
      00050B 0D 05            [ 1]  898 	tnz	(0x05, sp)
      00050D 27 1D            [ 1]  899 	jreq	00109$
      00050F 7B 05            [ 1]  900 	ld	a, (0x05, sp)
      000511 4A               [ 1]  901 	dec	a
      000512 27 18            [ 1]  902 	jreq	00109$
      000514 7B 05            [ 1]  903 	ld	a, (0x05, sp)
      000516 A1 02            [ 1]  904 	cp	a, #0x02
      000518 27 12            [ 1]  905 	jreq	00109$
      00051A 7B 05            [ 1]  906 	ld	a, (0x05, sp)
      00051C A1 03            [ 1]  907 	cp	a, #0x03
      00051E 27 0C            [ 1]  908 	jreq	00109$
      000520 4B 8D            [ 1]  909 	push	#0x8d
      000522 4B 01            [ 1]  910 	push	#0x01
      000524 5F               [ 1]  911 	clrw	x
      000525 89               [ 2]  912 	pushw	x
      000526 AEr00r00         [ 2]  913 	ldw	x, #(___str_0+0)
      000529 CDr00r00         [ 4]  914 	call	_assert_failed
      00052C                        915 00109$:
                                    916 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 398: assert_param(IS_TIM1_BREAK_STATE_OK(TIM1_Break));
      00052C 7B 07            [ 1]  917 	ld	a, (0x07, sp)
      00052E A1 10            [ 1]  918 	cp	a, #0x10
      000530 27 10            [ 1]  919 	jreq	00120$
      000532 0D 07            [ 1]  920 	tnz	(0x07, sp)
      000534 27 0C            [ 1]  921 	jreq	00120$
      000536 4B 8E            [ 1]  922 	push	#0x8e
      000538 4B 01            [ 1]  923 	push	#0x01
      00053A 5F               [ 1]  924 	clrw	x
      00053B 89               [ 2]  925 	pushw	x
      00053C AEr00r00         [ 2]  926 	ldw	x, #(___str_0+0)
      00053F CDr00r00         [ 4]  927 	call	_assert_failed
      000542                        928 00120$:
                                    929 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 399: assert_param(IS_TIM1_BREAK_POLARITY_OK(TIM1_BreakPolarity));
      000542 0D 08            [ 1]  930 	tnz	(0x08, sp)
      000544 27 12            [ 1]  931 	jreq	00125$
      000546 7B 08            [ 1]  932 	ld	a, (0x08, sp)
      000548 A1 20            [ 1]  933 	cp	a, #0x20
      00054A 27 0C            [ 1]  934 	jreq	00125$
      00054C 4B 8F            [ 1]  935 	push	#0x8f
      00054E 4B 01            [ 1]  936 	push	#0x01
      000550 5F               [ 1]  937 	clrw	x
      000551 89               [ 2]  938 	pushw	x
      000552 AEr00r00         [ 2]  939 	ldw	x, #(___str_0+0)
      000555 CDr00r00         [ 4]  940 	call	_assert_failed
      000558                        941 00125$:
                                    942 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 400: assert_param(IS_TIM1_AUTOMATIC_OUTPUT_STATE_OK(TIM1_AutomaticOutput));
      000558 7B 09            [ 1]  943 	ld	a, (0x09, sp)
      00055A A1 40            [ 1]  944 	cp	a, #0x40
      00055C 27 10            [ 1]  945 	jreq	00130$
      00055E 0D 09            [ 1]  946 	tnz	(0x09, sp)
      000560 27 0C            [ 1]  947 	jreq	00130$
      000562 4B 90            [ 1]  948 	push	#0x90
      000564 4B 01            [ 1]  949 	push	#0x01
      000566 5F               [ 1]  950 	clrw	x
      000567 89               [ 2]  951 	pushw	x
      000568 AEr00r00         [ 2]  952 	ldw	x, #(___str_0+0)
      00056B CDr00r00         [ 4]  953 	call	_assert_failed
      00056E                        954 00130$:
                                    955 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 402: TIM1->DTR = (uint8_t)(TIM1_DeadTime);
      00056E AE 52 6E         [ 2]  956 	ldw	x, #0x526e
      000571 7B 06            [ 1]  957 	ld	a, (0x06, sp)
      000573 F7               [ 1]  958 	ld	(x), a
                                    959 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 406: TIM1->BKR  =  (uint8_t)((uint8_t)(TIM1_OSSIState | (uint8_t)TIM1_LockLevel)  | 
      000574 7B 02            [ 1]  960 	ld	a, (0x02, sp)
      000576 1A 05            [ 1]  961 	or	a, (0x05, sp)
      000578 6B 01            [ 1]  962 	ld	(0x01, sp), a
                                    963 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 407: (uint8_t)((uint8_t)(TIM1_Break | (uint8_t)TIM1_BreakPolarity)  | 
      00057A 7B 07            [ 1]  964 	ld	a, (0x07, sp)
      00057C 1A 08            [ 1]  965 	or	a, (0x08, sp)
                                    966 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 408: (uint8_t)TIM1_AutomaticOutput));
      00057E 1A 09            [ 1]  967 	or	a, (0x09, sp)
      000580 1A 01            [ 1]  968 	or	a, (0x01, sp)
      000582 C7 52 6D         [ 1]  969 	ld	0x526d, a
                                    970 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 409: }
      000585 1E 03            [ 2]  971 	ldw	x, (3, sp)
      000587 5B 09            [ 2]  972 	addw	sp, #9
      000589 FC               [ 2]  973 	jp	(x)
                                    974 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 423: void TIM1_ICInit(TIM1_Channel_TypeDef TIM1_Channel,
                                    975 ;	-----------------------------------------
                                    976 ;	 function TIM1_ICInit
                                    977 ;	-----------------------------------------
      00058A                        978 _TIM1_ICInit:
      00058A 52 03            [ 2]  979 	sub	sp, #3
                                    980 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 430: assert_param(IS_TIM1_CHANNEL_OK(TIM1_Channel));
      00058C 6B 03            [ 1]  981 	ld	(0x03, sp), a
      00058E 4A               [ 1]  982 	dec	a
      00058F 26 05            [ 1]  983 	jrne	00269$
      000591 A6 01            [ 1]  984 	ld	a, #0x01
      000593 6B 01            [ 1]  985 	ld	(0x01, sp), a
      000595 C5                     986 	.byte 0xc5
      000596                        987 00269$:
      000596 0F 01            [ 1]  988 	clr	(0x01, sp)
      000598                        989 00270$:
      000598 7B 03            [ 1]  990 	ld	a, (0x03, sp)
      00059A A0 02            [ 1]  991 	sub	a, #0x02
      00059C 26 04            [ 1]  992 	jrne	00272$
      00059E 4C               [ 1]  993 	inc	a
      00059F 6B 02            [ 1]  994 	ld	(0x02, sp), a
      0005A1 C5                     995 	.byte 0xc5
      0005A2                        996 00272$:
      0005A2 0F 02            [ 1]  997 	clr	(0x02, sp)
      0005A4                        998 00273$:
      0005A4 0D 03            [ 1]  999 	tnz	(0x03, sp)
      0005A6 27 1A            [ 1] 1000 	jreq	00113$
      0005A8 0D 01            [ 1] 1001 	tnz	(0x01, sp)
      0005AA 26 16            [ 1] 1002 	jrne	00113$
      0005AC 0D 02            [ 1] 1003 	tnz	(0x02, sp)
      0005AE 26 12            [ 1] 1004 	jrne	00113$
      0005B0 7B 03            [ 1] 1005 	ld	a, (0x03, sp)
      0005B2 A1 03            [ 1] 1006 	cp	a, #0x03
      0005B4 27 0C            [ 1] 1007 	jreq	00113$
      0005B6 4B AE            [ 1] 1008 	push	#0xae
      0005B8 4B 01            [ 1] 1009 	push	#0x01
      0005BA 5F               [ 1] 1010 	clrw	x
      0005BB 89               [ 2] 1011 	pushw	x
      0005BC AEr00r00         [ 2] 1012 	ldw	x, #(___str_0+0)
      0005BF CDr00r00         [ 4] 1013 	call	_assert_failed
      0005C2                       1014 00113$:
                                   1015 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 431: assert_param(IS_TIM1_IC_POLARITY_OK(TIM1_ICPolarity));
      0005C2 0D 06            [ 1] 1016 	tnz	(0x06, sp)
      0005C4 27 10            [ 1] 1017 	jreq	00124$
      0005C6 0D 06            [ 1] 1018 	tnz	(0x06, sp)
      0005C8 26 0C            [ 1] 1019 	jrne	00124$
      0005CA 4B AF            [ 1] 1020 	push	#0xaf
      0005CC 4B 01            [ 1] 1021 	push	#0x01
      0005CE 5F               [ 1] 1022 	clrw	x
      0005CF 89               [ 2] 1023 	pushw	x
      0005D0 AEr00r00         [ 2] 1024 	ldw	x, #(___str_0+0)
      0005D3 CDr00r00         [ 4] 1025 	call	_assert_failed
      0005D6                       1026 00124$:
                                   1027 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 432: assert_param(IS_TIM1_IC_SELECTION_OK(TIM1_ICSelection));
      0005D6 7B 07            [ 1] 1028 	ld	a, (0x07, sp)
      0005D8 4A               [ 1] 1029 	dec	a
      0005D9 27 18            [ 1] 1030 	jreq	00129$
      0005DB 7B 07            [ 1] 1031 	ld	a, (0x07, sp)
      0005DD A1 02            [ 1] 1032 	cp	a, #0x02
      0005DF 27 12            [ 1] 1033 	jreq	00129$
      0005E1 7B 07            [ 1] 1034 	ld	a, (0x07, sp)
      0005E3 A1 03            [ 1] 1035 	cp	a, #0x03
      0005E5 27 0C            [ 1] 1036 	jreq	00129$
      0005E7 4B B0            [ 1] 1037 	push	#0xb0
      0005E9 4B 01            [ 1] 1038 	push	#0x01
      0005EB 5F               [ 1] 1039 	clrw	x
      0005EC 89               [ 2] 1040 	pushw	x
      0005ED AEr00r00         [ 2] 1041 	ldw	x, #(___str_0+0)
      0005F0 CDr00r00         [ 4] 1042 	call	_assert_failed
      0005F3                       1043 00129$:
                                   1044 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 433: assert_param(IS_TIM1_IC_PRESCALER_OK(TIM1_ICPrescaler));
      0005F3 0D 08            [ 1] 1045 	tnz	(0x08, sp)
      0005F5 27 1E            [ 1] 1046 	jreq	00137$
      0005F7 7B 08            [ 1] 1047 	ld	a, (0x08, sp)
      0005F9 A1 04            [ 1] 1048 	cp	a, #0x04
      0005FB 27 18            [ 1] 1049 	jreq	00137$
      0005FD 7B 08            [ 1] 1050 	ld	a, (0x08, sp)
      0005FF A1 08            [ 1] 1051 	cp	a, #0x08
      000601 27 12            [ 1] 1052 	jreq	00137$
      000603 7B 08            [ 1] 1053 	ld	a, (0x08, sp)
      000605 A1 0C            [ 1] 1054 	cp	a, #0x0c
      000607 27 0C            [ 1] 1055 	jreq	00137$
      000609 4B B1            [ 1] 1056 	push	#0xb1
      00060B 4B 01            [ 1] 1057 	push	#0x01
      00060D 5F               [ 1] 1058 	clrw	x
      00060E 89               [ 2] 1059 	pushw	x
      00060F AEr00r00         [ 2] 1060 	ldw	x, #(___str_0+0)
      000612 CDr00r00         [ 4] 1061 	call	_assert_failed
      000615                       1062 00137$:
                                   1063 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 434: assert_param(IS_TIM1_IC_FILTER_OK(TIM1_ICFilter));
      000615 7B 09            [ 1] 1064 	ld	a, (0x09, sp)
      000617 A1 0F            [ 1] 1065 	cp	a, #0x0f
      000619 23 0C            [ 2] 1066 	jrule	00148$
      00061B 4B B2            [ 1] 1067 	push	#0xb2
      00061D 4B 01            [ 1] 1068 	push	#0x01
      00061F 5F               [ 1] 1069 	clrw	x
      000620 89               [ 2] 1070 	pushw	x
      000621 AEr00r00         [ 2] 1071 	ldw	x, #(___str_0+0)
      000624 CDr00r00         [ 4] 1072 	call	_assert_failed
      000627                       1073 00148$:
                                   1074 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 439: TI1_Config((uint8_t)TIM1_ICPolarity,
      000627 7B 06            [ 1] 1075 	ld	a, (0x06, sp)
      000629 97               [ 1] 1076 	ld	xl, a
                                   1077 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 436: if (TIM1_Channel == TIM1_CHANNEL_1)
      00062A 0D 03            [ 1] 1078 	tnz	(0x03, sp)
      00062C 26 11            [ 1] 1079 	jrne	00108$
                                   1080 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 439: TI1_Config((uint8_t)TIM1_ICPolarity,
      00062E 7B 09            [ 1] 1081 	ld	a, (0x09, sp)
      000630 88               [ 1] 1082 	push	a
      000631 7B 08            [ 1] 1083 	ld	a, (0x08, sp)
      000633 88               [ 1] 1084 	push	a
      000634 9F               [ 1] 1085 	ld	a, xl
      000635 CDr13r94         [ 4] 1086 	call	_TI1_Config
                                   1087 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 443: TIM1_SetIC1Prescaler(TIM1_ICPrescaler);
      000638 7B 08            [ 1] 1088 	ld	a, (0x08, sp)
      00063A CDr11r82         [ 4] 1089 	call	_TIM1_SetIC1Prescaler
      00063D 20 39            [ 2] 1090 	jra	00110$
      00063F                       1091 00108$:
                                   1092 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 445: else if (TIM1_Channel == TIM1_CHANNEL_2)
      00063F 7B 01            [ 1] 1093 	ld	a, (0x01, sp)
      000641 27 11            [ 1] 1094 	jreq	00105$
                                   1095 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 448: TI2_Config((uint8_t)TIM1_ICPolarity,
      000643 7B 09            [ 1] 1096 	ld	a, (0x09, sp)
      000645 88               [ 1] 1097 	push	a
      000646 7B 08            [ 1] 1098 	ld	a, (0x08, sp)
      000648 88               [ 1] 1099 	push	a
      000649 9F               [ 1] 1100 	ld	a, xl
      00064A CDr13rCE         [ 4] 1101 	call	_TI2_Config
                                   1102 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 452: TIM1_SetIC2Prescaler(TIM1_ICPrescaler);
      00064D 7B 08            [ 1] 1103 	ld	a, (0x08, sp)
      00064F CDr11rB1         [ 4] 1104 	call	_TIM1_SetIC2Prescaler
      000652 20 24            [ 2] 1105 	jra	00110$
      000654                       1106 00105$:
                                   1107 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 454: else if (TIM1_Channel == TIM1_CHANNEL_3)
      000654 7B 02            [ 1] 1108 	ld	a, (0x02, sp)
      000656 27 11            [ 1] 1109 	jreq	00102$
                                   1110 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 457: TI3_Config((uint8_t)TIM1_ICPolarity,
      000658 7B 09            [ 1] 1111 	ld	a, (0x09, sp)
      00065A 88               [ 1] 1112 	push	a
      00065B 7B 08            [ 1] 1113 	ld	a, (0x08, sp)
      00065D 88               [ 1] 1114 	push	a
      00065E 9F               [ 1] 1115 	ld	a, xl
      00065F CDr14r08         [ 4] 1116 	call	_TI3_Config
                                   1117 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 461: TIM1_SetIC3Prescaler(TIM1_ICPrescaler);
      000662 7B 08            [ 1] 1118 	ld	a, (0x08, sp)
      000664 CDr11rE0         [ 4] 1119 	call	_TIM1_SetIC3Prescaler
      000667 20 0F            [ 2] 1120 	jra	00110$
      000669                       1121 00102$:
                                   1122 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 466: TI4_Config((uint8_t)TIM1_ICPolarity,
      000669 7B 09            [ 1] 1123 	ld	a, (0x09, sp)
      00066B 88               [ 1] 1124 	push	a
      00066C 7B 08            [ 1] 1125 	ld	a, (0x08, sp)
      00066E 88               [ 1] 1126 	push	a
      00066F 9F               [ 1] 1127 	ld	a, xl
      000670 CDr14r46         [ 4] 1128 	call	_TI4_Config
                                   1129 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 470: TIM1_SetIC4Prescaler(TIM1_ICPrescaler);
      000673 7B 08            [ 1] 1130 	ld	a, (0x08, sp)
      000675 CDr12r0F         [ 4] 1131 	call	_TIM1_SetIC4Prescaler
      000678                       1132 00110$:
                                   1133 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 472: }
      000678 1E 04            [ 2] 1134 	ldw	x, (4, sp)
      00067A 5B 09            [ 2] 1135 	addw	sp, #9
      00067C FC               [ 2] 1136 	jp	(x)
                                   1137 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 488: void TIM1_PWMIConfig(TIM1_Channel_TypeDef TIM1_Channel,
                                   1138 ;	-----------------------------------------
                                   1139 ;	 function TIM1_PWMIConfig
                                   1140 ;	-----------------------------------------
      00067D                       1141 _TIM1_PWMIConfig:
      00067D 52 03            [ 2] 1142 	sub	sp, #3
                                   1143 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 498: assert_param(IS_TIM1_PWMI_CHANNEL_OK(TIM1_Channel));
      00067F 6B 03            [ 1] 1144 	ld	(0x03, sp), a
      000681 27 11            [ 1] 1145 	jreq	00113$
      000683 7B 03            [ 1] 1146 	ld	a, (0x03, sp)
      000685 4A               [ 1] 1147 	dec	a
      000686 27 0C            [ 1] 1148 	jreq	00113$
      000688 4B F2            [ 1] 1149 	push	#0xf2
      00068A 4B 01            [ 1] 1150 	push	#0x01
      00068C 5F               [ 1] 1151 	clrw	x
      00068D 89               [ 2] 1152 	pushw	x
      00068E AEr00r00         [ 2] 1153 	ldw	x, #(___str_0+0)
      000691 CDr00r00         [ 4] 1154 	call	_assert_failed
      000694                       1155 00113$:
                                   1156 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 499: assert_param(IS_TIM1_IC_POLARITY_OK(TIM1_ICPolarity));
      000694 0D 06            [ 1] 1157 	tnz	(0x06, sp)
      000696 27 10            [ 1] 1158 	jreq	00118$
      000698 0D 06            [ 1] 1159 	tnz	(0x06, sp)
      00069A 26 0C            [ 1] 1160 	jrne	00118$
      00069C 4B F3            [ 1] 1161 	push	#0xf3
      00069E 4B 01            [ 1] 1162 	push	#0x01
      0006A0 5F               [ 1] 1163 	clrw	x
      0006A1 89               [ 2] 1164 	pushw	x
      0006A2 AEr00r00         [ 2] 1165 	ldw	x, #(___str_0+0)
      0006A5 CDr00r00         [ 4] 1166 	call	_assert_failed
      0006A8                       1167 00118$:
                                   1168 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 500: assert_param(IS_TIM1_IC_SELECTION_OK(TIM1_ICSelection));
      0006A8 7B 07            [ 1] 1169 	ld	a, (0x07, sp)
      0006AA 4A               [ 1] 1170 	dec	a
      0006AB 26 05            [ 1] 1171 	jrne	00246$
      0006AD A6 01            [ 1] 1172 	ld	a, #0x01
      0006AF 6B 02            [ 1] 1173 	ld	(0x02, sp), a
      0006B1 C5                    1174 	.byte 0xc5
      0006B2                       1175 00246$:
      0006B2 0F 02            [ 1] 1176 	clr	(0x02, sp)
      0006B4                       1177 00247$:
      0006B4 0D 02            [ 1] 1178 	tnz	(0x02, sp)
      0006B6 26 18            [ 1] 1179 	jrne	00123$
      0006B8 7B 07            [ 1] 1180 	ld	a, (0x07, sp)
      0006BA A1 02            [ 1] 1181 	cp	a, #0x02
      0006BC 27 12            [ 1] 1182 	jreq	00123$
      0006BE 7B 07            [ 1] 1183 	ld	a, (0x07, sp)
      0006C0 A1 03            [ 1] 1184 	cp	a, #0x03
      0006C2 27 0C            [ 1] 1185 	jreq	00123$
      0006C4 4B F4            [ 1] 1186 	push	#0xf4
      0006C6 4B 01            [ 1] 1187 	push	#0x01
      0006C8 5F               [ 1] 1188 	clrw	x
      0006C9 89               [ 2] 1189 	pushw	x
      0006CA AEr00r00         [ 2] 1190 	ldw	x, #(___str_0+0)
      0006CD CDr00r00         [ 4] 1191 	call	_assert_failed
      0006D0                       1192 00123$:
                                   1193 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 501: assert_param(IS_TIM1_IC_PRESCALER_OK(TIM1_ICPrescaler));
      0006D0 0D 08            [ 1] 1194 	tnz	(0x08, sp)
      0006D2 27 1E            [ 1] 1195 	jreq	00131$
      0006D4 7B 08            [ 1] 1196 	ld	a, (0x08, sp)
      0006D6 A1 04            [ 1] 1197 	cp	a, #0x04
      0006D8 27 18            [ 1] 1198 	jreq	00131$
      0006DA 7B 08            [ 1] 1199 	ld	a, (0x08, sp)
      0006DC A1 08            [ 1] 1200 	cp	a, #0x08
      0006DE 27 12            [ 1] 1201 	jreq	00131$
      0006E0 7B 08            [ 1] 1202 	ld	a, (0x08, sp)
      0006E2 A1 0C            [ 1] 1203 	cp	a, #0x0c
      0006E4 27 0C            [ 1] 1204 	jreq	00131$
      0006E6 4B F5            [ 1] 1205 	push	#0xf5
      0006E8 4B 01            [ 1] 1206 	push	#0x01
      0006EA 5F               [ 1] 1207 	clrw	x
      0006EB 89               [ 2] 1208 	pushw	x
      0006EC AEr00r00         [ 2] 1209 	ldw	x, #(___str_0+0)
      0006EF CDr00r00         [ 4] 1210 	call	_assert_failed
      0006F2                       1211 00131$:
                                   1212 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 504: if (TIM1_ICPolarity != TIM1_ICPOLARITY_FALLING)
      0006F2 0D 06            [ 1] 1213 	tnz	(0x06, sp)
      0006F4 26 05            [ 1] 1214 	jrne	00102$
                                   1215 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 506: icpolarity = TIM1_ICPOLARITY_FALLING;
      0006F6 A6 01            [ 1] 1216 	ld	a, #0x01
      0006F8 6B 01            [ 1] 1217 	ld	(0x01, sp), a
                                   1218 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 510: icpolarity = TIM1_ICPOLARITY_RISING;
      0006FA C5                    1219 	.byte 0xc5
      0006FB                       1220 00102$:
      0006FB 0F 01            [ 1] 1221 	clr	(0x01, sp)
      0006FD                       1222 00103$:
                                   1223 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 514: if (TIM1_ICSelection == TIM1_ICSELECTION_DIRECTTI)
      0006FD 7B 02            [ 1] 1224 	ld	a, (0x02, sp)
      0006FF 27 06            [ 1] 1225 	jreq	00105$
                                   1226 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 516: icselection = TIM1_ICSELECTION_INDIRECTTI;
      000701 A6 02            [ 1] 1227 	ld	a, #0x02
      000703 6B 02            [ 1] 1228 	ld	(0x02, sp), a
      000705 20 04            [ 2] 1229 	jra	00106$
      000707                       1230 00105$:
                                   1231 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 520: icselection = TIM1_ICSELECTION_DIRECTTI;
      000707 A6 01            [ 1] 1232 	ld	a, #0x01
      000709 6B 02            [ 1] 1233 	ld	(0x02, sp), a
      00070B                       1234 00106$:
                                   1235 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 526: TI1_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSelection,
      00070B 7B 06            [ 1] 1236 	ld	a, (0x06, sp)
      00070D 97               [ 1] 1237 	ld	xl, a
                                   1238 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 523: if (TIM1_Channel == TIM1_CHANNEL_1)
      00070E 0D 03            [ 1] 1239 	tnz	(0x03, sp)
      000710 26 21            [ 1] 1240 	jrne	00108$
                                   1241 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 526: TI1_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSelection,
      000712 7B 09            [ 1] 1242 	ld	a, (0x09, sp)
      000714 88               [ 1] 1243 	push	a
      000715 7B 08            [ 1] 1244 	ld	a, (0x08, sp)
      000717 88               [ 1] 1245 	push	a
      000718 9F               [ 1] 1246 	ld	a, xl
      000719 CDr13r94         [ 4] 1247 	call	_TI1_Config
                                   1248 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 530: TIM1_SetIC1Prescaler(TIM1_ICPrescaler);
      00071C 7B 08            [ 1] 1249 	ld	a, (0x08, sp)
      00071E CDr11r82         [ 4] 1250 	call	_TIM1_SetIC1Prescaler
                                   1251 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 533: TI2_Config(icpolarity, icselection, TIM1_ICFilter);
      000721 7B 09            [ 1] 1252 	ld	a, (0x09, sp)
      000723 88               [ 1] 1253 	push	a
      000724 7B 03            [ 1] 1254 	ld	a, (0x03, sp)
      000726 88               [ 1] 1255 	push	a
      000727 7B 03            [ 1] 1256 	ld	a, (0x03, sp)
      000729 CDr13rCE         [ 4] 1257 	call	_TI2_Config
                                   1258 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 536: TIM1_SetIC2Prescaler(TIM1_ICPrescaler);
      00072C 7B 08            [ 1] 1259 	ld	a, (0x08, sp)
      00072E CDr11rB1         [ 4] 1260 	call	_TIM1_SetIC2Prescaler
      000731 20 1F            [ 2] 1261 	jra	00110$
      000733                       1262 00108$:
                                   1263 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 541: TI2_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSelection,
      000733 7B 09            [ 1] 1264 	ld	a, (0x09, sp)
      000735 88               [ 1] 1265 	push	a
      000736 7B 08            [ 1] 1266 	ld	a, (0x08, sp)
      000738 88               [ 1] 1267 	push	a
      000739 9F               [ 1] 1268 	ld	a, xl
      00073A CDr13rCE         [ 4] 1269 	call	_TI2_Config
                                   1270 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 545: TIM1_SetIC2Prescaler(TIM1_ICPrescaler);
      00073D 7B 08            [ 1] 1271 	ld	a, (0x08, sp)
      00073F CDr11rB1         [ 4] 1272 	call	_TIM1_SetIC2Prescaler
                                   1273 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 548: TI1_Config(icpolarity, icselection, TIM1_ICFilter);
      000742 7B 09            [ 1] 1274 	ld	a, (0x09, sp)
      000744 88               [ 1] 1275 	push	a
      000745 7B 03            [ 1] 1276 	ld	a, (0x03, sp)
      000747 88               [ 1] 1277 	push	a
      000748 7B 03            [ 1] 1278 	ld	a, (0x03, sp)
      00074A CDr13r94         [ 4] 1279 	call	_TI1_Config
                                   1280 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 551: TIM1_SetIC1Prescaler(TIM1_ICPrescaler);
      00074D 7B 08            [ 1] 1281 	ld	a, (0x08, sp)
      00074F CDr11r82         [ 4] 1282 	call	_TIM1_SetIC1Prescaler
      000752                       1283 00110$:
                                   1284 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 553: }
      000752 1E 04            [ 2] 1285 	ldw	x, (4, sp)
      000754 5B 09            [ 2] 1286 	addw	sp, #9
      000756 FC               [ 2] 1287 	jp	(x)
                                   1288 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 561: void TIM1_Cmd(FunctionalState NewState)
                                   1289 ;	-----------------------------------------
                                   1290 ;	 function TIM1_Cmd
                                   1291 ;	-----------------------------------------
      000757                       1292 _TIM1_Cmd:
      000757 88               [ 1] 1293 	push	a
                                   1294 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 564: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000758 6B 01            [ 1] 1295 	ld	(0x01, sp), a
      00075A 27 10            [ 1] 1296 	jreq	00107$
      00075C 0D 01            [ 1] 1297 	tnz	(0x01, sp)
      00075E 26 0C            [ 1] 1298 	jrne	00107$
      000760 4B 34            [ 1] 1299 	push	#0x34
      000762 4B 02            [ 1] 1300 	push	#0x02
      000764 5F               [ 1] 1301 	clrw	x
      000765 89               [ 2] 1302 	pushw	x
      000766 AEr00r00         [ 2] 1303 	ldw	x, #(___str_0+0)
      000769 CDr00r00         [ 4] 1304 	call	_assert_failed
      00076C                       1305 00107$:
                                   1306 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 569: TIM1->CR1 |= TIM1_CR1_CEN;
      00076C C6 52 50         [ 1] 1307 	ld	a, 0x5250
                                   1308 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 567: if (NewState != DISABLE)
      00076F 0D 01            [ 1] 1309 	tnz	(0x01, sp)
      000771 27 07            [ 1] 1310 	jreq	00102$
                                   1311 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 569: TIM1->CR1 |= TIM1_CR1_CEN;
      000773 AA 01            [ 1] 1312 	or	a, #0x01
      000775 C7 52 50         [ 1] 1313 	ld	0x5250, a
      000778 20 05            [ 2] 1314 	jra	00104$
      00077A                       1315 00102$:
                                   1316 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 573: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_CEN);
      00077A A4 FE            [ 1] 1317 	and	a, #0xfe
      00077C C7 52 50         [ 1] 1318 	ld	0x5250, a
      00077F                       1319 00104$:
                                   1320 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 575: }
      00077F 84               [ 1] 1321 	pop	a
      000780 81               [ 4] 1322 	ret
                                   1323 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 583: void TIM1_CtrlPWMOutputs(FunctionalState NewState)
                                   1324 ;	-----------------------------------------
                                   1325 ;	 function TIM1_CtrlPWMOutputs
                                   1326 ;	-----------------------------------------
      000781                       1327 _TIM1_CtrlPWMOutputs:
      000781 88               [ 1] 1328 	push	a
                                   1329 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 586: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000782 6B 01            [ 1] 1330 	ld	(0x01, sp), a
      000784 27 10            [ 1] 1331 	jreq	00107$
      000786 0D 01            [ 1] 1332 	tnz	(0x01, sp)
      000788 26 0C            [ 1] 1333 	jrne	00107$
      00078A 4B 4A            [ 1] 1334 	push	#0x4a
      00078C 4B 02            [ 1] 1335 	push	#0x02
      00078E 5F               [ 1] 1336 	clrw	x
      00078F 89               [ 2] 1337 	pushw	x
      000790 AEr00r00         [ 2] 1338 	ldw	x, #(___str_0+0)
      000793 CDr00r00         [ 4] 1339 	call	_assert_failed
      000796                       1340 00107$:
                                   1341 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 592: TIM1->BKR |= TIM1_BKR_MOE;
      000796 C6 52 6D         [ 1] 1342 	ld	a, 0x526d
                                   1343 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 590: if (NewState != DISABLE)
      000799 0D 01            [ 1] 1344 	tnz	(0x01, sp)
      00079B 27 07            [ 1] 1345 	jreq	00102$
                                   1346 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 592: TIM1->BKR |= TIM1_BKR_MOE;
      00079D AA 80            [ 1] 1347 	or	a, #0x80
      00079F C7 52 6D         [ 1] 1348 	ld	0x526d, a
      0007A2 20 05            [ 2] 1349 	jra	00104$
      0007A4                       1350 00102$:
                                   1351 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 596: TIM1->BKR &= (uint8_t)(~TIM1_BKR_MOE);
      0007A4 A4 7F            [ 1] 1352 	and	a, #0x7f
      0007A6 C7 52 6D         [ 1] 1353 	ld	0x526d, a
      0007A9                       1354 00104$:
                                   1355 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 598: }
      0007A9 84               [ 1] 1356 	pop	a
      0007AA 81               [ 4] 1357 	ret
                                   1358 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 617: void TIM1_ITConfig(TIM1_IT_TypeDef  TIM1_IT, FunctionalState NewState)
                                   1359 ;	-----------------------------------------
                                   1360 ;	 function TIM1_ITConfig
                                   1361 ;	-----------------------------------------
      0007AB                       1362 _TIM1_ITConfig:
      0007AB 89               [ 2] 1363 	pushw	x
                                   1364 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 620: assert_param(IS_TIM1_IT_OK(TIM1_IT));
      0007AC 6B 02            [ 1] 1365 	ld	(0x02, sp), a
      0007AE 26 0C            [ 1] 1366 	jrne	00107$
      0007B0 4B 6C            [ 1] 1367 	push	#0x6c
      0007B2 4B 02            [ 1] 1368 	push	#0x02
      0007B4 5F               [ 1] 1369 	clrw	x
      0007B5 89               [ 2] 1370 	pushw	x
      0007B6 AEr00r00         [ 2] 1371 	ldw	x, #(___str_0+0)
      0007B9 CDr00r00         [ 4] 1372 	call	_assert_failed
      0007BC                       1373 00107$:
                                   1374 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 621: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0007BC 0D 05            [ 1] 1375 	tnz	(0x05, sp)
      0007BE 27 10            [ 1] 1376 	jreq	00109$
      0007C0 0D 05            [ 1] 1377 	tnz	(0x05, sp)
      0007C2 26 0C            [ 1] 1378 	jrne	00109$
      0007C4 4B 6D            [ 1] 1379 	push	#0x6d
      0007C6 4B 02            [ 1] 1380 	push	#0x02
      0007C8 5F               [ 1] 1381 	clrw	x
      0007C9 89               [ 2] 1382 	pushw	x
      0007CA AEr00r00         [ 2] 1383 	ldw	x, #(___str_0+0)
      0007CD CDr00r00         [ 4] 1384 	call	_assert_failed
      0007D0                       1385 00109$:
                                   1386 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 626: TIM1->IER |= (uint8_t)TIM1_IT;
      0007D0 C6 52 54         [ 1] 1387 	ld	a, 0x5254
                                   1388 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 623: if (NewState != DISABLE)
      0007D3 0D 05            [ 1] 1389 	tnz	(0x05, sp)
      0007D5 27 07            [ 1] 1390 	jreq	00102$
                                   1391 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 626: TIM1->IER |= (uint8_t)TIM1_IT;
      0007D7 1A 02            [ 1] 1392 	or	a, (0x02, sp)
      0007D9 C7 52 54         [ 1] 1393 	ld	0x5254, a
      0007DC 20 0C            [ 2] 1394 	jra	00104$
      0007DE                       1395 00102$:
                                   1396 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 631: TIM1->IER &= (uint8_t)(~(uint8_t)TIM1_IT);
      0007DE 88               [ 1] 1397 	push	a
      0007DF 7B 03            [ 1] 1398 	ld	a, (0x03, sp)
      0007E1 43               [ 1] 1399 	cpl	a
      0007E2 6B 02            [ 1] 1400 	ld	(0x02, sp), a
      0007E4 84               [ 1] 1401 	pop	a
      0007E5 14 01            [ 1] 1402 	and	a, (0x01, sp)
      0007E7 C7 52 54         [ 1] 1403 	ld	0x5254, a
      0007EA                       1404 00104$:
                                   1405 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 633: }
      0007EA 85               [ 2] 1406 	popw	x
      0007EB 85               [ 2] 1407 	popw	x
      0007EC 84               [ 1] 1408 	pop	a
      0007ED FC               [ 2] 1409 	jp	(x)
                                   1410 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 640: void TIM1_InternalClockConfig(void)
                                   1411 ;	-----------------------------------------
                                   1412 ;	 function TIM1_InternalClockConfig
                                   1413 ;	-----------------------------------------
      0007EE                       1414 _TIM1_InternalClockConfig:
                                   1415 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 643: TIM1->SMCR &= (uint8_t)(~TIM1_SMCR_SMS);
      0007EE C6 52 52         [ 1] 1416 	ld	a, 0x5252
      0007F1 A4 F8            [ 1] 1417 	and	a, #0xf8
      0007F3 C7 52 52         [ 1] 1418 	ld	0x5252, a
                                   1419 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 644: }
      0007F6 81               [ 4] 1420 	ret
                                   1421 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 662: void TIM1_ETRClockMode1Config(TIM1_ExtTRGPSC_TypeDef TIM1_ExtTRGPrescaler,
                                   1422 ;	-----------------------------------------
                                   1423 ;	 function TIM1_ETRClockMode1Config
                                   1424 ;	-----------------------------------------
      0007F7                       1425 _TIM1_ETRClockMode1Config:
      0007F7 88               [ 1] 1426 	push	a
                                   1427 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 667: assert_param(IS_TIM1_EXT_PRESCALER_OK(TIM1_ExtTRGPrescaler));
      0007F8 6B 01            [ 1] 1428 	ld	(0x01, sp), a
      0007FA 27 1E            [ 1] 1429 	jreq	00104$
      0007FC 7B 01            [ 1] 1430 	ld	a, (0x01, sp)
      0007FE A1 10            [ 1] 1431 	cp	a, #0x10
      000800 27 18            [ 1] 1432 	jreq	00104$
      000802 7B 01            [ 1] 1433 	ld	a, (0x01, sp)
      000804 A1 20            [ 1] 1434 	cp	a, #0x20
      000806 27 12            [ 1] 1435 	jreq	00104$
      000808 7B 01            [ 1] 1436 	ld	a, (0x01, sp)
      00080A A1 30            [ 1] 1437 	cp	a, #0x30
      00080C 27 0C            [ 1] 1438 	jreq	00104$
      00080E 4B 9B            [ 1] 1439 	push	#0x9b
      000810 4B 02            [ 1] 1440 	push	#0x02
      000812 5F               [ 1] 1441 	clrw	x
      000813 89               [ 2] 1442 	pushw	x
      000814 AEr00r00         [ 2] 1443 	ldw	x, #(___str_0+0)
      000817 CDr00r00         [ 4] 1444 	call	_assert_failed
      00081A                       1445 00104$:
                                   1446 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 668: assert_param(IS_TIM1_EXT_POLARITY_OK(TIM1_ExtTRGPolarity));
      00081A 7B 04            [ 1] 1447 	ld	a, (0x04, sp)
      00081C A1 80            [ 1] 1448 	cp	a, #0x80
      00081E 27 10            [ 1] 1449 	jreq	00115$
      000820 0D 04            [ 1] 1450 	tnz	(0x04, sp)
      000822 27 0C            [ 1] 1451 	jreq	00115$
      000824 4B 9C            [ 1] 1452 	push	#0x9c
      000826 4B 02            [ 1] 1453 	push	#0x02
      000828 5F               [ 1] 1454 	clrw	x
      000829 89               [ 2] 1455 	pushw	x
      00082A AEr00r00         [ 2] 1456 	ldw	x, #(___str_0+0)
      00082D CDr00r00         [ 4] 1457 	call	_assert_failed
      000830                       1458 00115$:
                                   1459 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 671: TIM1_ETRConfig(TIM1_ExtTRGPrescaler, TIM1_ExtTRGPolarity, ExtTRGFilter);
      000830 7B 05            [ 1] 1460 	ld	a, (0x05, sp)
      000832 88               [ 1] 1461 	push	a
      000833 7B 05            [ 1] 1462 	ld	a, (0x05, sp)
      000835 88               [ 1] 1463 	push	a
      000836 7B 03            [ 1] 1464 	ld	a, (0x03, sp)
      000838 CDr08r9B         [ 4] 1465 	call	_TIM1_ETRConfig
                                   1466 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 674: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(~(uint8_t)(TIM1_SMCR_SMS | TIM1_SMCR_TS )))
      00083B C6 52 52         [ 1] 1467 	ld	a, 0x5252
      00083E A4 88            [ 1] 1468 	and	a, #0x88
      000840 AA 77            [ 1] 1469 	or	a, #0x77
      000842 C7 52 52         [ 1] 1470 	ld	0x5252, a
                                   1471 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 676: }
      000845 1E 02            [ 2] 1472 	ldw	x, (2, sp)
      000847 5B 05            [ 2] 1473 	addw	sp, #5
      000849 FC               [ 2] 1474 	jp	(x)
                                   1475 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 694: void TIM1_ETRClockMode2Config(TIM1_ExtTRGPSC_TypeDef TIM1_ExtTRGPrescaler,
                                   1476 ;	-----------------------------------------
                                   1477 ;	 function TIM1_ETRClockMode2Config
                                   1478 ;	-----------------------------------------
      00084A                       1479 _TIM1_ETRClockMode2Config:
      00084A 88               [ 1] 1480 	push	a
                                   1481 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 699: assert_param(IS_TIM1_EXT_PRESCALER_OK(TIM1_ExtTRGPrescaler));
      00084B 6B 01            [ 1] 1482 	ld	(0x01, sp), a
      00084D 27 1E            [ 1] 1483 	jreq	00104$
      00084F 7B 01            [ 1] 1484 	ld	a, (0x01, sp)
      000851 A1 10            [ 1] 1485 	cp	a, #0x10
      000853 27 18            [ 1] 1486 	jreq	00104$
      000855 7B 01            [ 1] 1487 	ld	a, (0x01, sp)
      000857 A1 20            [ 1] 1488 	cp	a, #0x20
      000859 27 12            [ 1] 1489 	jreq	00104$
      00085B 7B 01            [ 1] 1490 	ld	a, (0x01, sp)
      00085D A1 30            [ 1] 1491 	cp	a, #0x30
      00085F 27 0C            [ 1] 1492 	jreq	00104$
      000861 4B BB            [ 1] 1493 	push	#0xbb
      000863 4B 02            [ 1] 1494 	push	#0x02
      000865 5F               [ 1] 1495 	clrw	x
      000866 89               [ 2] 1496 	pushw	x
      000867 AEr00r00         [ 2] 1497 	ldw	x, #(___str_0+0)
      00086A CDr00r00         [ 4] 1498 	call	_assert_failed
      00086D                       1499 00104$:
                                   1500 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 700: assert_param(IS_TIM1_EXT_POLARITY_OK(TIM1_ExtTRGPolarity));
      00086D 7B 04            [ 1] 1501 	ld	a, (0x04, sp)
      00086F A1 80            [ 1] 1502 	cp	a, #0x80
      000871 27 10            [ 1] 1503 	jreq	00115$
      000873 0D 04            [ 1] 1504 	tnz	(0x04, sp)
      000875 27 0C            [ 1] 1505 	jreq	00115$
      000877 4B BC            [ 1] 1506 	push	#0xbc
      000879 4B 02            [ 1] 1507 	push	#0x02
      00087B 5F               [ 1] 1508 	clrw	x
      00087C 89               [ 2] 1509 	pushw	x
      00087D AEr00r00         [ 2] 1510 	ldw	x, #(___str_0+0)
      000880 CDr00r00         [ 4] 1511 	call	_assert_failed
      000883                       1512 00115$:
                                   1513 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 703: TIM1_ETRConfig(TIM1_ExtTRGPrescaler, TIM1_ExtTRGPolarity, ExtTRGFilter);
      000883 7B 05            [ 1] 1514 	ld	a, (0x05, sp)
      000885 88               [ 1] 1515 	push	a
      000886 7B 05            [ 1] 1516 	ld	a, (0x05, sp)
      000888 88               [ 1] 1517 	push	a
      000889 7B 03            [ 1] 1518 	ld	a, (0x03, sp)
      00088B CDr08r9B         [ 4] 1519 	call	_TIM1_ETRConfig
                                   1520 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 706: TIM1->ETR |= TIM1_ETR_ECE;
      00088E C6 52 53         [ 1] 1521 	ld	a, 0x5253
      000891 AA 40            [ 1] 1522 	or	a, #0x40
      000893 C7 52 53         [ 1] 1523 	ld	0x5253, a
                                   1524 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 707: }
      000896 1E 02            [ 2] 1525 	ldw	x, (2, sp)
      000898 5B 05            [ 2] 1526 	addw	sp, #5
      00089A FC               [ 2] 1527 	jp	(x)
                                   1528 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 725: void TIM1_ETRConfig(TIM1_ExtTRGPSC_TypeDef TIM1_ExtTRGPrescaler,
                                   1529 ;	-----------------------------------------
                                   1530 ;	 function TIM1_ETRConfig
                                   1531 ;	-----------------------------------------
      00089B                       1532 _TIM1_ETRConfig:
      00089B 89               [ 2] 1533 	pushw	x
      00089C 6B 02            [ 1] 1534 	ld	(0x02, sp), a
                                   1535 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 730: assert_param(IS_TIM1_EXT_TRG_FILTER_OK(ExtTRGFilter));
      00089E 7B 06            [ 1] 1536 	ld	a, (0x06, sp)
      0008A0 A1 0F            [ 1] 1537 	cp	a, #0x0f
      0008A2 23 0C            [ 2] 1538 	jrule	00104$
      0008A4 4B DA            [ 1] 1539 	push	#0xda
      0008A6 4B 02            [ 1] 1540 	push	#0x02
      0008A8 5F               [ 1] 1541 	clrw	x
      0008A9 89               [ 2] 1542 	pushw	x
      0008AA AEr00r00         [ 2] 1543 	ldw	x, #(___str_0+0)
      0008AD CDr00r00         [ 4] 1544 	call	_assert_failed
      0008B0                       1545 00104$:
                                   1546 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 732: TIM1->ETR |= (uint8_t)((uint8_t)(TIM1_ExtTRGPrescaler | (uint8_t)TIM1_ExtTRGPolarity )|
      0008B0 C6 52 53         [ 1] 1547 	ld	a, 0x5253
      0008B3 6B 01            [ 1] 1548 	ld	(0x01, sp), a
      0008B5 7B 02            [ 1] 1549 	ld	a, (0x02, sp)
      0008B7 1A 05            [ 1] 1550 	or	a, (0x05, sp)
                                   1551 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 733: (uint8_t)ExtTRGFilter );
      0008B9 1A 06            [ 1] 1552 	or	a, (0x06, sp)
      0008BB 1A 01            [ 1] 1553 	or	a, (0x01, sp)
      0008BD C7 52 53         [ 1] 1554 	ld	0x5253, a
                                   1555 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 734: }
      0008C0 1E 03            [ 2] 1556 	ldw	x, (3, sp)
      0008C2 5B 06            [ 2] 1557 	addw	sp, #6
      0008C4 FC               [ 2] 1558 	jp	(x)
                                   1559 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 751: void TIM1_TIxExternalClockConfig(TIM1_TIxExternalCLK1Source_TypeDef TIM1_TIxExternalCLKSource,
                                   1560 ;	-----------------------------------------
                                   1561 ;	 function TIM1_TIxExternalClockConfig
                                   1562 ;	-----------------------------------------
      0008C5                       1563 _TIM1_TIxExternalClockConfig:
      0008C5 89               [ 2] 1564 	pushw	x
                                   1565 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 756: assert_param(IS_TIM1_TIXCLK_SOURCE_OK(TIM1_TIxExternalCLKSource));
      0008C6 6B 02            [ 1] 1566 	ld	(0x02, sp), a
      0008C8 A0 60            [ 1] 1567 	sub	a, #0x60
      0008CA 26 04            [ 1] 1568 	jrne	00171$
      0008CC 4C               [ 1] 1569 	inc	a
      0008CD 6B 01            [ 1] 1570 	ld	(0x01, sp), a
      0008CF C5                    1571 	.byte 0xc5
      0008D0                       1572 00171$:
      0008D0 0F 01            [ 1] 1573 	clr	(0x01, sp)
      0008D2                       1574 00172$:
      0008D2 7B 02            [ 1] 1575 	ld	a, (0x02, sp)
      0008D4 A1 40            [ 1] 1576 	cp	a, #0x40
      0008D6 27 16            [ 1] 1577 	jreq	00107$
      0008D8 0D 01            [ 1] 1578 	tnz	(0x01, sp)
      0008DA 26 12            [ 1] 1579 	jrne	00107$
      0008DC 7B 02            [ 1] 1580 	ld	a, (0x02, sp)
      0008DE A1 50            [ 1] 1581 	cp	a, #0x50
      0008E0 27 0C            [ 1] 1582 	jreq	00107$
      0008E2 4B F4            [ 1] 1583 	push	#0xf4
      0008E4 4B 02            [ 1] 1584 	push	#0x02
      0008E6 5F               [ 1] 1585 	clrw	x
      0008E7 89               [ 2] 1586 	pushw	x
      0008E8 AEr00r00         [ 2] 1587 	ldw	x, #(___str_0+0)
      0008EB CDr00r00         [ 4] 1588 	call	_assert_failed
      0008EE                       1589 00107$:
                                   1590 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 757: assert_param(IS_TIM1_IC_POLARITY_OK(TIM1_ICPolarity));
      0008EE 0D 05            [ 1] 1591 	tnz	(0x05, sp)
      0008F0 27 10            [ 1] 1592 	jreq	00115$
      0008F2 0D 05            [ 1] 1593 	tnz	(0x05, sp)
      0008F4 26 0C            [ 1] 1594 	jrne	00115$
      0008F6 4B F5            [ 1] 1595 	push	#0xf5
      0008F8 4B 02            [ 1] 1596 	push	#0x02
      0008FA 5F               [ 1] 1597 	clrw	x
      0008FB 89               [ 2] 1598 	pushw	x
      0008FC AEr00r00         [ 2] 1599 	ldw	x, #(___str_0+0)
      0008FF CDr00r00         [ 4] 1600 	call	_assert_failed
      000902                       1601 00115$:
                                   1602 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 758: assert_param(IS_TIM1_IC_FILTER_OK(ICFilter));
      000902 7B 06            [ 1] 1603 	ld	a, (0x06, sp)
      000904 A1 0F            [ 1] 1604 	cp	a, #0x0f
      000906 23 0C            [ 2] 1605 	jrule	00120$
      000908 4B F6            [ 1] 1606 	push	#0xf6
      00090A 4B 02            [ 1] 1607 	push	#0x02
      00090C 5F               [ 1] 1608 	clrw	x
      00090D 89               [ 2] 1609 	pushw	x
      00090E AEr00r00         [ 2] 1610 	ldw	x, #(___str_0+0)
      000911 CDr00r00         [ 4] 1611 	call	_assert_failed
      000914                       1612 00120$:
                                   1613 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 763: TI2_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSELECTION_DIRECTTI, (uint8_t)ICFilter);
      000914 7B 05            [ 1] 1614 	ld	a, (0x05, sp)
      000916 97               [ 1] 1615 	ld	xl, a
                                   1616 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 761: if (TIM1_TIxExternalCLKSource == TIM1_TIXEXTERNALCLK1SOURCE_TI2)
      000917 7B 01            [ 1] 1617 	ld	a, (0x01, sp)
      000919 27 0B            [ 1] 1618 	jreq	00102$
                                   1619 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 763: TI2_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSELECTION_DIRECTTI, (uint8_t)ICFilter);
      00091B 7B 06            [ 1] 1620 	ld	a, (0x06, sp)
      00091D 88               [ 1] 1621 	push	a
      00091E 4B 01            [ 1] 1622 	push	#0x01
      000920 9F               [ 1] 1623 	ld	a, xl
      000921 CDr13rCE         [ 4] 1624 	call	_TI2_Config
      000924 20 09            [ 2] 1625 	jra	00103$
      000926                       1626 00102$:
                                   1627 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 767: TI1_Config((uint8_t)TIM1_ICPolarity, (uint8_t)TIM1_ICSELECTION_DIRECTTI, (uint8_t)ICFilter);
      000926 7B 06            [ 1] 1628 	ld	a, (0x06, sp)
      000928 88               [ 1] 1629 	push	a
      000929 4B 01            [ 1] 1630 	push	#0x01
      00092B 9F               [ 1] 1631 	ld	a, xl
      00092C CDr13r94         [ 4] 1632 	call	_TI1_Config
      00092F                       1633 00103$:
                                   1634 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 771: TIM1_SelectInputTrigger((TIM1_TS_TypeDef)TIM1_TIxExternalCLKSource);
      00092F 7B 02            [ 1] 1635 	ld	a, (0x02, sp)
      000931 CDr09r41         [ 4] 1636 	call	_TIM1_SelectInputTrigger
                                   1637 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 774: TIM1->SMCR |= (uint8_t)(TIM1_SLAVEMODE_EXTERNAL1);
      000934 C6 52 52         [ 1] 1638 	ld	a, 0x5252
      000937 AA 07            [ 1] 1639 	or	a, #0x07
      000939 C7 52 52         [ 1] 1640 	ld	0x5252, a
                                   1641 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 775: }
      00093C 1E 03            [ 2] 1642 	ldw	x, (3, sp)
      00093E 5B 06            [ 2] 1643 	addw	sp, #6
      000940 FC               [ 2] 1644 	jp	(x)
                                   1645 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 787: void TIM1_SelectInputTrigger(TIM1_TS_TypeDef TIM1_InputTriggerSource)
                                   1646 ;	-----------------------------------------
                                   1647 ;	 function TIM1_SelectInputTrigger
                                   1648 ;	-----------------------------------------
      000941                       1649 _TIM1_SelectInputTrigger:
      000941 88               [ 1] 1650 	push	a
                                   1651 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 790: assert_param(IS_TIM1_TRIGGER_SELECTION_OK(TIM1_InputTriggerSource));
      000942 A1 40            [ 1] 1652 	cp	a, #0x40
      000944 27 21            [ 1] 1653 	jreq	00104$
      000946 A1 50            [ 1] 1654 	cp	a, #0x50
      000948 27 1D            [ 1] 1655 	jreq	00104$
      00094A A1 60            [ 1] 1656 	cp	a, #0x60
      00094C 27 19            [ 1] 1657 	jreq	00104$
      00094E A1 70            [ 1] 1658 	cp	a, #0x70
      000950 27 15            [ 1] 1659 	jreq	00104$
      000952 A1 30            [ 1] 1660 	cp	a, #0x30
      000954 27 11            [ 1] 1661 	jreq	00104$
      000956 4D               [ 1] 1662 	tnz	a
      000957 27 0E            [ 1] 1663 	jreq	00104$
      000959 88               [ 1] 1664 	push	a
      00095A 4B 16            [ 1] 1665 	push	#0x16
      00095C 4B 03            [ 1] 1666 	push	#0x03
      00095E 5F               [ 1] 1667 	clrw	x
      00095F 89               [ 2] 1668 	pushw	x
      000960 AEr00r00         [ 2] 1669 	ldw	x, #(___str_0+0)
      000963 CDr00r00         [ 4] 1670 	call	_assert_failed
      000966 84               [ 1] 1671 	pop	a
      000967                       1672 00104$:
                                   1673 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 793: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(~TIM1_SMCR_TS)) | (uint8_t)TIM1_InputTriggerSource);
      000967 AE 52 52         [ 2] 1674 	ldw	x, #0x5252
      00096A 88               [ 1] 1675 	push	a
      00096B F6               [ 1] 1676 	ld	a, (x)
      00096C A4 8F            [ 1] 1677 	and	a, #0x8f
      00096E 6B 02            [ 1] 1678 	ld	(0x02, sp), a
      000970 84               [ 1] 1679 	pop	a
      000971 1A 01            [ 1] 1680 	or	a, (0x01, sp)
      000973 C7 52 52         [ 1] 1681 	ld	0x5252, a
                                   1682 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 794: }
      000976 84               [ 1] 1683 	pop	a
      000977 81               [ 4] 1684 	ret
                                   1685 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 803: void TIM1_UpdateDisableConfig(FunctionalState NewState)
                                   1686 ;	-----------------------------------------
                                   1687 ;	 function TIM1_UpdateDisableConfig
                                   1688 ;	-----------------------------------------
      000978                       1689 _TIM1_UpdateDisableConfig:
      000978 88               [ 1] 1690 	push	a
                                   1691 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 806: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000979 6B 01            [ 1] 1692 	ld	(0x01, sp), a
      00097B 27 10            [ 1] 1693 	jreq	00107$
      00097D 0D 01            [ 1] 1694 	tnz	(0x01, sp)
      00097F 26 0C            [ 1] 1695 	jrne	00107$
      000981 4B 26            [ 1] 1696 	push	#0x26
      000983 4B 03            [ 1] 1697 	push	#0x03
      000985 5F               [ 1] 1698 	clrw	x
      000986 89               [ 2] 1699 	pushw	x
      000987 AEr00r00         [ 2] 1700 	ldw	x, #(___str_0+0)
      00098A CDr00r00         [ 4] 1701 	call	_assert_failed
      00098D                       1702 00107$:
                                   1703 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 811: TIM1->CR1 |= TIM1_CR1_UDIS;
      00098D C6 52 50         [ 1] 1704 	ld	a, 0x5250
                                   1705 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 809: if (NewState != DISABLE)
      000990 0D 01            [ 1] 1706 	tnz	(0x01, sp)
      000992 27 07            [ 1] 1707 	jreq	00102$
                                   1708 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 811: TIM1->CR1 |= TIM1_CR1_UDIS;
      000994 AA 02            [ 1] 1709 	or	a, #0x02
      000996 C7 52 50         [ 1] 1710 	ld	0x5250, a
      000999 20 05            [ 2] 1711 	jra	00104$
      00099B                       1712 00102$:
                                   1713 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 815: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_UDIS);
      00099B A4 FD            [ 1] 1714 	and	a, #0xfd
      00099D C7 52 50         [ 1] 1715 	ld	0x5250, a
      0009A0                       1716 00104$:
                                   1717 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 817: }
      0009A0 84               [ 1] 1718 	pop	a
      0009A1 81               [ 4] 1719 	ret
                                   1720 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 827: void TIM1_UpdateRequestConfig(TIM1_UpdateSource_TypeDef TIM1_UpdateSource)
                                   1721 ;	-----------------------------------------
                                   1722 ;	 function TIM1_UpdateRequestConfig
                                   1723 ;	-----------------------------------------
      0009A2                       1724 _TIM1_UpdateRequestConfig:
      0009A2 88               [ 1] 1725 	push	a
                                   1726 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 830: assert_param(IS_TIM1_UPDATE_SOURCE_OK(TIM1_UpdateSource));
      0009A3 6B 01            [ 1] 1727 	ld	(0x01, sp), a
      0009A5 27 10            [ 1] 1728 	jreq	00107$
      0009A7 0D 01            [ 1] 1729 	tnz	(0x01, sp)
      0009A9 26 0C            [ 1] 1730 	jrne	00107$
      0009AB 4B 3E            [ 1] 1731 	push	#0x3e
      0009AD 4B 03            [ 1] 1732 	push	#0x03
      0009AF 5F               [ 1] 1733 	clrw	x
      0009B0 89               [ 2] 1734 	pushw	x
      0009B1 AEr00r00         [ 2] 1735 	ldw	x, #(___str_0+0)
      0009B4 CDr00r00         [ 4] 1736 	call	_assert_failed
      0009B7                       1737 00107$:
                                   1738 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 835: TIM1->CR1 |= TIM1_CR1_URS;
      0009B7 C6 52 50         [ 1] 1739 	ld	a, 0x5250
                                   1740 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 833: if (TIM1_UpdateSource != TIM1_UPDATESOURCE_GLOBAL)
      0009BA 0D 01            [ 1] 1741 	tnz	(0x01, sp)
      0009BC 27 07            [ 1] 1742 	jreq	00102$
                                   1743 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 835: TIM1->CR1 |= TIM1_CR1_URS;
      0009BE AA 04            [ 1] 1744 	or	a, #0x04
      0009C0 C7 52 50         [ 1] 1745 	ld	0x5250, a
      0009C3 20 05            [ 2] 1746 	jra	00104$
      0009C5                       1747 00102$:
                                   1748 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 839: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_URS);
      0009C5 A4 FB            [ 1] 1749 	and	a, #0xfb
      0009C7 C7 52 50         [ 1] 1750 	ld	0x5250, a
      0009CA                       1751 00104$:
                                   1752 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 841: }
      0009CA 84               [ 1] 1753 	pop	a
      0009CB 81               [ 4] 1754 	ret
                                   1755 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 849: void TIM1_SelectHallSensor(FunctionalState NewState)
                                   1756 ;	-----------------------------------------
                                   1757 ;	 function TIM1_SelectHallSensor
                                   1758 ;	-----------------------------------------
      0009CC                       1759 _TIM1_SelectHallSensor:
      0009CC 88               [ 1] 1760 	push	a
                                   1761 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 852: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      0009CD 6B 01            [ 1] 1762 	ld	(0x01, sp), a
      0009CF 27 10            [ 1] 1763 	jreq	00107$
      0009D1 0D 01            [ 1] 1764 	tnz	(0x01, sp)
      0009D3 26 0C            [ 1] 1765 	jrne	00107$
      0009D5 4B 54            [ 1] 1766 	push	#0x54
      0009D7 4B 03            [ 1] 1767 	push	#0x03
      0009D9 5F               [ 1] 1768 	clrw	x
      0009DA 89               [ 2] 1769 	pushw	x
      0009DB AEr00r00         [ 2] 1770 	ldw	x, #(___str_0+0)
      0009DE CDr00r00         [ 4] 1771 	call	_assert_failed
      0009E1                       1772 00107$:
                                   1773 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 857: TIM1->CR2 |= TIM1_CR2_TI1S;
      0009E1 C6 52 51         [ 1] 1774 	ld	a, 0x5251
                                   1775 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 855: if (NewState != DISABLE)
      0009E4 0D 01            [ 1] 1776 	tnz	(0x01, sp)
      0009E6 27 07            [ 1] 1777 	jreq	00102$
                                   1778 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 857: TIM1->CR2 |= TIM1_CR2_TI1S;
      0009E8 AA 80            [ 1] 1779 	or	a, #0x80
      0009EA C7 52 51         [ 1] 1780 	ld	0x5251, a
      0009ED 20 05            [ 2] 1781 	jra	00104$
      0009EF                       1782 00102$:
                                   1783 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 861: TIM1->CR2 &= (uint8_t)(~TIM1_CR2_TI1S);
      0009EF A4 7F            [ 1] 1784 	and	a, #0x7f
      0009F1 C7 52 51         [ 1] 1785 	ld	0x5251, a
      0009F4                       1786 00104$:
                                   1787 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 863: }
      0009F4 84               [ 1] 1788 	pop	a
      0009F5 81               [ 4] 1789 	ret
                                   1790 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 873: void TIM1_SelectOnePulseMode(TIM1_OPMode_TypeDef TIM1_OPMode)
                                   1791 ;	-----------------------------------------
                                   1792 ;	 function TIM1_SelectOnePulseMode
                                   1793 ;	-----------------------------------------
      0009F6                       1794 _TIM1_SelectOnePulseMode:
      0009F6 88               [ 1] 1795 	push	a
                                   1796 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 876: assert_param(IS_TIM1_OPM_MODE_OK(TIM1_OPMode));
      0009F7 6B 01            [ 1] 1797 	ld	(0x01, sp), a
      0009F9 26 10            [ 1] 1798 	jrne	00107$
      0009FB 0D 01            [ 1] 1799 	tnz	(0x01, sp)
      0009FD 27 0C            [ 1] 1800 	jreq	00107$
      0009FF 4B 6C            [ 1] 1801 	push	#0x6c
      000A01 4B 03            [ 1] 1802 	push	#0x03
      000A03 5F               [ 1] 1803 	clrw	x
      000A04 89               [ 2] 1804 	pushw	x
      000A05 AEr00r00         [ 2] 1805 	ldw	x, #(___str_0+0)
      000A08 CDr00r00         [ 4] 1806 	call	_assert_failed
      000A0B                       1807 00107$:
                                   1808 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 881: TIM1->CR1 |= TIM1_CR1_OPM;
      000A0B C6 52 50         [ 1] 1809 	ld	a, 0x5250
                                   1810 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 879: if (TIM1_OPMode != TIM1_OPMODE_REPETITIVE)
      000A0E 0D 01            [ 1] 1811 	tnz	(0x01, sp)
      000A10 27 07            [ 1] 1812 	jreq	00102$
                                   1813 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 881: TIM1->CR1 |= TIM1_CR1_OPM;
      000A12 AA 08            [ 1] 1814 	or	a, #0x08
      000A14 C7 52 50         [ 1] 1815 	ld	0x5250, a
      000A17 20 05            [ 2] 1816 	jra	00104$
      000A19                       1817 00102$:
                                   1818 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 885: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_OPM);
      000A19 A4 F7            [ 1] 1819 	and	a, #0xf7
      000A1B C7 52 50         [ 1] 1820 	ld	0x5250, a
      000A1E                       1821 00104$:
                                   1822 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 888: }
      000A1E 84               [ 1] 1823 	pop	a
      000A1F 81               [ 4] 1824 	ret
                                   1825 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 903: void TIM1_SelectOutputTrigger(TIM1_TRGOSource_TypeDef TIM1_TRGOSource)
                                   1826 ;	-----------------------------------------
                                   1827 ;	 function TIM1_SelectOutputTrigger
                                   1828 ;	-----------------------------------------
      000A20                       1829 _TIM1_SelectOutputTrigger:
      000A20 88               [ 1] 1830 	push	a
                                   1831 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 906: assert_param(IS_TIM1_TRGO_SOURCE_OK(TIM1_TRGOSource));
      000A21 4D               [ 1] 1832 	tnz	a
      000A22 27 26            [ 1] 1833 	jreq	00104$
      000A24 A1 10            [ 1] 1834 	cp	a, #0x10
      000A26 27 22            [ 1] 1835 	jreq	00104$
      000A28 A1 20            [ 1] 1836 	cp	a, #0x20
      000A2A 27 1E            [ 1] 1837 	jreq	00104$
      000A2C A1 30            [ 1] 1838 	cp	a, #0x30
      000A2E 27 1A            [ 1] 1839 	jreq	00104$
      000A30 A1 40            [ 1] 1840 	cp	a, #0x40
      000A32 27 16            [ 1] 1841 	jreq	00104$
      000A34 A1 50            [ 1] 1842 	cp	a, #0x50
      000A36 27 12            [ 1] 1843 	jreq	00104$
      000A38 A1 60            [ 1] 1844 	cp	a, #0x60
      000A3A 27 0E            [ 1] 1845 	jreq	00104$
      000A3C 88               [ 1] 1846 	push	a
      000A3D 4B 8A            [ 1] 1847 	push	#0x8a
      000A3F 4B 03            [ 1] 1848 	push	#0x03
      000A41 5F               [ 1] 1849 	clrw	x
      000A42 89               [ 2] 1850 	pushw	x
      000A43 AEr00r00         [ 2] 1851 	ldw	x, #(___str_0+0)
      000A46 CDr00r00         [ 4] 1852 	call	_assert_failed
      000A49 84               [ 1] 1853 	pop	a
      000A4A                       1854 00104$:
                                   1855 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 909: TIM1->CR2 = (uint8_t)((uint8_t)(TIM1->CR2 & (uint8_t)(~TIM1_CR2_MMS)) | 
      000A4A AE 52 51         [ 2] 1856 	ldw	x, #0x5251
      000A4D 88               [ 1] 1857 	push	a
      000A4E F6               [ 1] 1858 	ld	a, (x)
      000A4F A4 8F            [ 1] 1859 	and	a, #0x8f
      000A51 6B 02            [ 1] 1860 	ld	(0x02, sp), a
      000A53 84               [ 1] 1861 	pop	a
                                   1862 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 910: (uint8_t) TIM1_TRGOSource);
      000A54 1A 01            [ 1] 1863 	or	a, (0x01, sp)
      000A56 C7 52 51         [ 1] 1864 	ld	0x5251, a
                                   1865 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 911: }
      000A59 84               [ 1] 1866 	pop	a
      000A5A 81               [ 4] 1867 	ret
                                   1868 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 923: void TIM1_SelectSlaveMode(TIM1_SlaveMode_TypeDef TIM1_SlaveMode)
                                   1869 ;	-----------------------------------------
                                   1870 ;	 function TIM1_SelectSlaveMode
                                   1871 ;	-----------------------------------------
      000A5B                       1872 _TIM1_SelectSlaveMode:
      000A5B 88               [ 1] 1873 	push	a
                                   1874 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 926: assert_param(IS_TIM1_SLAVE_MODE_OK(TIM1_SlaveMode));
      000A5C 6B 01            [ 1] 1875 	ld	(0x01, sp), a
      000A5E A1 04            [ 1] 1876 	cp	a, #0x04
      000A60 27 1E            [ 1] 1877 	jreq	00104$
      000A62 7B 01            [ 1] 1878 	ld	a, (0x01, sp)
      000A64 A1 05            [ 1] 1879 	cp	a, #0x05
      000A66 27 18            [ 1] 1880 	jreq	00104$
      000A68 7B 01            [ 1] 1881 	ld	a, (0x01, sp)
      000A6A A1 06            [ 1] 1882 	cp	a, #0x06
      000A6C 27 12            [ 1] 1883 	jreq	00104$
      000A6E 7B 01            [ 1] 1884 	ld	a, (0x01, sp)
      000A70 A1 07            [ 1] 1885 	cp	a, #0x07
      000A72 27 0C            [ 1] 1886 	jreq	00104$
      000A74 4B 9E            [ 1] 1887 	push	#0x9e
      000A76 4B 03            [ 1] 1888 	push	#0x03
      000A78 5F               [ 1] 1889 	clrw	x
      000A79 89               [ 2] 1890 	pushw	x
      000A7A AEr00r00         [ 2] 1891 	ldw	x, #(___str_0+0)
      000A7D CDr00r00         [ 4] 1892 	call	_assert_failed
      000A80                       1893 00104$:
                                   1894 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 929: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(~TIM1_SMCR_SMS)) |
      000A80 C6 52 52         [ 1] 1895 	ld	a, 0x5252
      000A83 A4 F8            [ 1] 1896 	and	a, #0xf8
                                   1897 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 930: (uint8_t)TIM1_SlaveMode);
      000A85 1A 01            [ 1] 1898 	or	a, (0x01, sp)
      000A87 C7 52 52         [ 1] 1899 	ld	0x5252, a
                                   1900 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 931: }
      000A8A 84               [ 1] 1901 	pop	a
      000A8B 81               [ 4] 1902 	ret
                                   1903 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 939: void TIM1_SelectMasterSlaveMode(FunctionalState NewState)
                                   1904 ;	-----------------------------------------
                                   1905 ;	 function TIM1_SelectMasterSlaveMode
                                   1906 ;	-----------------------------------------
      000A8C                       1907 _TIM1_SelectMasterSlaveMode:
      000A8C 88               [ 1] 1908 	push	a
                                   1909 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 942: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000A8D 6B 01            [ 1] 1910 	ld	(0x01, sp), a
      000A8F 27 10            [ 1] 1911 	jreq	00107$
      000A91 0D 01            [ 1] 1912 	tnz	(0x01, sp)
      000A93 26 0C            [ 1] 1913 	jrne	00107$
      000A95 4B AE            [ 1] 1914 	push	#0xae
      000A97 4B 03            [ 1] 1915 	push	#0x03
      000A99 5F               [ 1] 1916 	clrw	x
      000A9A 89               [ 2] 1917 	pushw	x
      000A9B AEr00r00         [ 2] 1918 	ldw	x, #(___str_0+0)
      000A9E CDr00r00         [ 4] 1919 	call	_assert_failed
      000AA1                       1920 00107$:
                                   1921 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 947: TIM1->SMCR |= TIM1_SMCR_MSM;
      000AA1 C6 52 52         [ 1] 1922 	ld	a, 0x5252
                                   1923 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 945: if (NewState != DISABLE)
      000AA4 0D 01            [ 1] 1924 	tnz	(0x01, sp)
      000AA6 27 07            [ 1] 1925 	jreq	00102$
                                   1926 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 947: TIM1->SMCR |= TIM1_SMCR_MSM;
      000AA8 AA 80            [ 1] 1927 	or	a, #0x80
      000AAA C7 52 52         [ 1] 1928 	ld	0x5252, a
      000AAD 20 05            [ 2] 1929 	jra	00104$
      000AAF                       1930 00102$:
                                   1931 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 951: TIM1->SMCR &= (uint8_t)(~TIM1_SMCR_MSM);
      000AAF A4 7F            [ 1] 1932 	and	a, #0x7f
      000AB1 C7 52 52         [ 1] 1933 	ld	0x5252, a
      000AB4                       1934 00104$:
                                   1935 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 953: }
      000AB4 84               [ 1] 1936 	pop	a
      000AB5 81               [ 4] 1937 	ret
                                   1938 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 975: void TIM1_EncoderInterfaceConfig(TIM1_EncoderMode_TypeDef TIM1_EncoderMode,
                                   1939 ;	-----------------------------------------
                                   1940 ;	 function TIM1_EncoderInterfaceConfig
                                   1941 ;	-----------------------------------------
      000AB6                       1942 _TIM1_EncoderInterfaceConfig:
      000AB6 88               [ 1] 1943 	push	a
                                   1944 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 980: assert_param(IS_TIM1_ENCODER_MODE_OK(TIM1_EncoderMode));
      000AB7 6B 01            [ 1] 1945 	ld	(0x01, sp), a
      000AB9 4A               [ 1] 1946 	dec	a
      000ABA 27 18            [ 1] 1947 	jreq	00110$
      000ABC 7B 01            [ 1] 1948 	ld	a, (0x01, sp)
      000ABE A1 02            [ 1] 1949 	cp	a, #0x02
      000AC0 27 12            [ 1] 1950 	jreq	00110$
      000AC2 7B 01            [ 1] 1951 	ld	a, (0x01, sp)
      000AC4 A1 03            [ 1] 1952 	cp	a, #0x03
      000AC6 27 0C            [ 1] 1953 	jreq	00110$
      000AC8 4B D4            [ 1] 1954 	push	#0xd4
      000ACA 4B 03            [ 1] 1955 	push	#0x03
      000ACC 5F               [ 1] 1956 	clrw	x
      000ACD 89               [ 2] 1957 	pushw	x
      000ACE AEr00r00         [ 2] 1958 	ldw	x, #(___str_0+0)
      000AD1 CDr00r00         [ 4] 1959 	call	_assert_failed
      000AD4                       1960 00110$:
                                   1961 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 981: assert_param(IS_TIM1_IC_POLARITY_OK(TIM1_IC1Polarity));
      000AD4 0D 04            [ 1] 1962 	tnz	(0x04, sp)
      000AD6 27 10            [ 1] 1963 	jreq	00118$
      000AD8 0D 04            [ 1] 1964 	tnz	(0x04, sp)
      000ADA 26 0C            [ 1] 1965 	jrne	00118$
      000ADC 4B D5            [ 1] 1966 	push	#0xd5
      000ADE 4B 03            [ 1] 1967 	push	#0x03
      000AE0 5F               [ 1] 1968 	clrw	x
      000AE1 89               [ 2] 1969 	pushw	x
      000AE2 AEr00r00         [ 2] 1970 	ldw	x, #(___str_0+0)
      000AE5 CDr00r00         [ 4] 1971 	call	_assert_failed
      000AE8                       1972 00118$:
                                   1973 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 982: assert_param(IS_TIM1_IC_POLARITY_OK(TIM1_IC2Polarity));
      000AE8 0D 05            [ 1] 1974 	tnz	(0x05, sp)
      000AEA 27 10            [ 1] 1975 	jreq	00123$
      000AEC 0D 05            [ 1] 1976 	tnz	(0x05, sp)
      000AEE 26 0C            [ 1] 1977 	jrne	00123$
      000AF0 4B D6            [ 1] 1978 	push	#0xd6
      000AF2 4B 03            [ 1] 1979 	push	#0x03
      000AF4 5F               [ 1] 1980 	clrw	x
      000AF5 89               [ 2] 1981 	pushw	x
      000AF6 AEr00r00         [ 2] 1982 	ldw	x, #(___str_0+0)
      000AF9 CDr00r00         [ 4] 1983 	call	_assert_failed
      000AFC                       1984 00123$:
                                   1985 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 987: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      000AFC C6 52 5C         [ 1] 1986 	ld	a, 0x525c
                                   1987 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 985: if (TIM1_IC1Polarity != TIM1_ICPOLARITY_RISING)
      000AFF 0D 04            [ 1] 1988 	tnz	(0x04, sp)
      000B01 27 07            [ 1] 1989 	jreq	00102$
                                   1990 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 987: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      000B03 AA 02            [ 1] 1991 	or	a, #0x02
      000B05 C7 52 5C         [ 1] 1992 	ld	0x525c, a
      000B08 20 05            [ 2] 1993 	jra	00103$
      000B0A                       1994 00102$:
                                   1995 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 991: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1P);
      000B0A A4 FD            [ 1] 1996 	and	a, #0xfd
      000B0C C7 52 5C         [ 1] 1997 	ld	0x525c, a
      000B0F                       1998 00103$:
                                   1999 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 987: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      000B0F C6 52 5C         [ 1] 2000 	ld	a, 0x525c
                                   2001 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 994: if (TIM1_IC2Polarity != TIM1_ICPOLARITY_RISING)
      000B12 0D 05            [ 1] 2002 	tnz	(0x05, sp)
      000B14 27 07            [ 1] 2003 	jreq	00105$
                                   2004 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 996: TIM1->CCER1 |= TIM1_CCER1_CC2P;
      000B16 AA 20            [ 1] 2005 	or	a, #0x20
      000B18 C7 52 5C         [ 1] 2006 	ld	0x525c, a
      000B1B 20 05            [ 2] 2007 	jra	00106$
      000B1D                       2008 00105$:
                                   2009 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1000: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2P);
      000B1D A4 DF            [ 1] 2010 	and	a, #0xdf
      000B1F C7 52 5C         [ 1] 2011 	ld	0x525c, a
      000B22                       2012 00106$:
                                   2013 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1003: TIM1->SMCR = (uint8_t)((uint8_t)(TIM1->SMCR & (uint8_t)(TIM1_SMCR_MSM | TIM1_SMCR_TS))
      000B22 C6 52 52         [ 1] 2014 	ld	a, 0x5252
      000B25 A4 F0            [ 1] 2015 	and	a, #0xf0
                                   2016 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1004: | (uint8_t) TIM1_EncoderMode);
      000B27 1A 01            [ 1] 2017 	or	a, (0x01, sp)
      000B29 C7 52 52         [ 1] 2018 	ld	0x5252, a
                                   2019 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1007: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_CCxS)) 
      000B2C C6 52 58         [ 1] 2020 	ld	a, 0x5258
      000B2F A4 FC            [ 1] 2021 	and	a, #0xfc
      000B31 AA 01            [ 1] 2022 	or	a, #0x01
      000B33 C7 52 58         [ 1] 2023 	ld	0x5258, a
                                   2024 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1009: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_CCxS))
      000B36 C6 52 59         [ 1] 2025 	ld	a, 0x5259
      000B39 A4 FC            [ 1] 2026 	and	a, #0xfc
      000B3B AA 01            [ 1] 2027 	or	a, #0x01
      000B3D C7 52 59         [ 1] 2028 	ld	0x5259, a
                                   2029 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1011: }
      000B40 1E 02            [ 2] 2030 	ldw	x, (2, sp)
      000B42 5B 05            [ 2] 2031 	addw	sp, #5
      000B44 FC               [ 2] 2032 	jp	(x)
                                   2033 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1023: void TIM1_PrescalerConfig(uint16_t Prescaler,
                                   2034 ;	-----------------------------------------
                                   2035 ;	 function TIM1_PrescalerConfig
                                   2036 ;	-----------------------------------------
      000B45                       2037 _TIM1_PrescalerConfig:
      000B45 88               [ 1] 2038 	push	a
                                   2039 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1027: assert_param(IS_TIM1_PRESCALER_RELOAD_OK(TIM1_PSCReloadMode));
      000B46 6B 01            [ 1] 2040 	ld	(0x01, sp), a
      000B48 27 14            [ 1] 2041 	jreq	00104$
      000B4A 0D 01            [ 1] 2042 	tnz	(0x01, sp)
      000B4C 26 10            [ 1] 2043 	jrne	00104$
      000B4E 89               [ 2] 2044 	pushw	x
      000B4F 4B 03            [ 1] 2045 	push	#0x03
      000B51 4B 04            [ 1] 2046 	push	#0x04
      000B53 4B 00            [ 1] 2047 	push	#0x00
      000B55 4B 00            [ 1] 2048 	push	#0x00
      000B57 AEr00r00         [ 2] 2049 	ldw	x, #(___str_0+0)
      000B5A CDr00r00         [ 4] 2050 	call	_assert_failed
      000B5D 85               [ 2] 2051 	popw	x
      000B5E                       2052 00104$:
                                   2053 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1030: TIM1->PSCRH = (uint8_t)(Prescaler >> 8);
      000B5E 9E               [ 1] 2054 	ld	a, xh
      000B5F C7 52 60         [ 1] 2055 	ld	0x5260, a
                                   2056 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1031: TIM1->PSCRL = (uint8_t)(Prescaler);
      000B62 9F               [ 1] 2057 	ld	a, xl
      000B63 C7 52 61         [ 1] 2058 	ld	0x5261, a
                                   2059 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1034: TIM1->EGR = (uint8_t)TIM1_PSCReloadMode;
      000B66 7B 01            [ 1] 2060 	ld	a, (0x01, sp)
      000B68 C7 52 57         [ 1] 2061 	ld	0x5257, a
                                   2062 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1035: }
      000B6B 84               [ 1] 2063 	pop	a
      000B6C 81               [ 4] 2064 	ret
                                   2065 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1048: void TIM1_CounterModeConfig(TIM1_CounterMode_TypeDef TIM1_CounterMode)
                                   2066 ;	-----------------------------------------
                                   2067 ;	 function TIM1_CounterModeConfig
                                   2068 ;	-----------------------------------------
      000B6D                       2069 _TIM1_CounterModeConfig:
      000B6D 88               [ 1] 2070 	push	a
                                   2071 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1051: assert_param(IS_TIM1_COUNTER_MODE_OK(TIM1_CounterMode));
      000B6E 6B 01            [ 1] 2072 	ld	(0x01, sp), a
      000B70 27 24            [ 1] 2073 	jreq	00104$
      000B72 7B 01            [ 1] 2074 	ld	a, (0x01, sp)
      000B74 A1 10            [ 1] 2075 	cp	a, #0x10
      000B76 27 1E            [ 1] 2076 	jreq	00104$
      000B78 7B 01            [ 1] 2077 	ld	a, (0x01, sp)
      000B7A A1 20            [ 1] 2078 	cp	a, #0x20
      000B7C 27 18            [ 1] 2079 	jreq	00104$
      000B7E 7B 01            [ 1] 2080 	ld	a, (0x01, sp)
      000B80 A1 40            [ 1] 2081 	cp	a, #0x40
      000B82 27 12            [ 1] 2082 	jreq	00104$
      000B84 7B 01            [ 1] 2083 	ld	a, (0x01, sp)
      000B86 A1 60            [ 1] 2084 	cp	a, #0x60
      000B88 27 0C            [ 1] 2085 	jreq	00104$
      000B8A 4B 1B            [ 1] 2086 	push	#0x1b
      000B8C 4B 04            [ 1] 2087 	push	#0x04
      000B8E 5F               [ 1] 2088 	clrw	x
      000B8F 89               [ 2] 2089 	pushw	x
      000B90 AEr00r00         [ 2] 2090 	ldw	x, #(___str_0+0)
      000B93 CDr00r00         [ 4] 2091 	call	_assert_failed
      000B96                       2092 00104$:
                                   2093 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1055: TIM1->CR1 = (uint8_t)((uint8_t)(TIM1->CR1 & (uint8_t)((uint8_t)(~TIM1_CR1_CMS) & (uint8_t)(~TIM1_CR1_DIR)))
      000B96 C6 52 50         [ 1] 2094 	ld	a, 0x5250
      000B99 A4 8F            [ 1] 2095 	and	a, #0x8f
                                   2096 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1056: | (uint8_t)TIM1_CounterMode);
      000B9B 1A 01            [ 1] 2097 	or	a, (0x01, sp)
      000B9D C7 52 50         [ 1] 2098 	ld	0x5250, a
                                   2099 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1057: }
      000BA0 84               [ 1] 2100 	pop	a
      000BA1 81               [ 4] 2101 	ret
                                   2102 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1067: void TIM1_ForcedOC1Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   2103 ;	-----------------------------------------
                                   2104 ;	 function TIM1_ForcedOC1Config
                                   2105 ;	-----------------------------------------
      000BA2                       2106 _TIM1_ForcedOC1Config:
      000BA2 88               [ 1] 2107 	push	a
                                   2108 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1070: assert_param(IS_TIM1_FORCED_ACTION_OK(TIM1_ForcedAction));
      000BA3 6B 01            [ 1] 2109 	ld	(0x01, sp), a
      000BA5 A1 50            [ 1] 2110 	cp	a, #0x50
      000BA7 27 12            [ 1] 2111 	jreq	00104$
      000BA9 7B 01            [ 1] 2112 	ld	a, (0x01, sp)
      000BAB A1 40            [ 1] 2113 	cp	a, #0x40
      000BAD 27 0C            [ 1] 2114 	jreq	00104$
      000BAF 4B 2E            [ 1] 2115 	push	#0x2e
      000BB1 4B 04            [ 1] 2116 	push	#0x04
      000BB3 5F               [ 1] 2117 	clrw	x
      000BB4 89               [ 2] 2118 	pushw	x
      000BB5 AEr00r00         [ 2] 2119 	ldw	x, #(___str_0+0)
      000BB8 CDr00r00         [ 4] 2120 	call	_assert_failed
      000BBB                       2121 00104$:
                                   2122 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1073: TIM1->CCMR1 =  (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_OCM))|
      000BBB C6 52 58         [ 1] 2123 	ld	a, 0x5258
      000BBE A4 8F            [ 1] 2124 	and	a, #0x8f
                                   2125 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1074: (uint8_t)TIM1_ForcedAction);
      000BC0 1A 01            [ 1] 2126 	or	a, (0x01, sp)
      000BC2 C7 52 58         [ 1] 2127 	ld	0x5258, a
                                   2128 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1075: }
      000BC5 84               [ 1] 2129 	pop	a
      000BC6 81               [ 4] 2130 	ret
                                   2131 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1085: void TIM1_ForcedOC2Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   2132 ;	-----------------------------------------
                                   2133 ;	 function TIM1_ForcedOC2Config
                                   2134 ;	-----------------------------------------
      000BC7                       2135 _TIM1_ForcedOC2Config:
      000BC7 88               [ 1] 2136 	push	a
                                   2137 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1088: assert_param(IS_TIM1_FORCED_ACTION_OK(TIM1_ForcedAction));
      000BC8 6B 01            [ 1] 2138 	ld	(0x01, sp), a
      000BCA A1 50            [ 1] 2139 	cp	a, #0x50
      000BCC 27 12            [ 1] 2140 	jreq	00104$
      000BCE 7B 01            [ 1] 2141 	ld	a, (0x01, sp)
      000BD0 A1 40            [ 1] 2142 	cp	a, #0x40
      000BD2 27 0C            [ 1] 2143 	jreq	00104$
      000BD4 4B 40            [ 1] 2144 	push	#0x40
      000BD6 4B 04            [ 1] 2145 	push	#0x04
      000BD8 5F               [ 1] 2146 	clrw	x
      000BD9 89               [ 2] 2147 	pushw	x
      000BDA AEr00r00         [ 2] 2148 	ldw	x, #(___str_0+0)
      000BDD CDr00r00         [ 4] 2149 	call	_assert_failed
      000BE0                       2150 00104$:
                                   2151 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1091: TIM1->CCMR2  =  (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_OCM))
      000BE0 C6 52 59         [ 1] 2152 	ld	a, 0x5259
      000BE3 A4 8F            [ 1] 2153 	and	a, #0x8f
                                   2154 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1092: | (uint8_t)TIM1_ForcedAction);
      000BE5 1A 01            [ 1] 2155 	or	a, (0x01, sp)
      000BE7 C7 52 59         [ 1] 2156 	ld	0x5259, a
                                   2157 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1093: }
      000BEA 84               [ 1] 2158 	pop	a
      000BEB 81               [ 4] 2159 	ret
                                   2160 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1104: void TIM1_ForcedOC3Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   2161 ;	-----------------------------------------
                                   2162 ;	 function TIM1_ForcedOC3Config
                                   2163 ;	-----------------------------------------
      000BEC                       2164 _TIM1_ForcedOC3Config:
      000BEC 88               [ 1] 2165 	push	a
                                   2166 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1107: assert_param(IS_TIM1_FORCED_ACTION_OK(TIM1_ForcedAction));
      000BED 6B 01            [ 1] 2167 	ld	(0x01, sp), a
      000BEF A1 50            [ 1] 2168 	cp	a, #0x50
      000BF1 27 12            [ 1] 2169 	jreq	00104$
      000BF3 7B 01            [ 1] 2170 	ld	a, (0x01, sp)
      000BF5 A1 40            [ 1] 2171 	cp	a, #0x40
      000BF7 27 0C            [ 1] 2172 	jreq	00104$
      000BF9 4B 53            [ 1] 2173 	push	#0x53
      000BFB 4B 04            [ 1] 2174 	push	#0x04
      000BFD 5F               [ 1] 2175 	clrw	x
      000BFE 89               [ 2] 2176 	pushw	x
      000BFF AEr00r00         [ 2] 2177 	ldw	x, #(___str_0+0)
      000C02 CDr00r00         [ 4] 2178 	call	_assert_failed
      000C05                       2179 00104$:
                                   2180 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1110: TIM1->CCMR3  =  (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_OCM))  
      000C05 C6 52 5A         [ 1] 2181 	ld	a, 0x525a
      000C08 A4 8F            [ 1] 2182 	and	a, #0x8f
                                   2183 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1111: | (uint8_t)TIM1_ForcedAction);
      000C0A 1A 01            [ 1] 2184 	or	a, (0x01, sp)
      000C0C C7 52 5A         [ 1] 2185 	ld	0x525a, a
                                   2186 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1112: }
      000C0F 84               [ 1] 2187 	pop	a
      000C10 81               [ 4] 2188 	ret
                                   2189 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1123: void TIM1_ForcedOC4Config(TIM1_ForcedAction_TypeDef TIM1_ForcedAction)
                                   2190 ;	-----------------------------------------
                                   2191 ;	 function TIM1_ForcedOC4Config
                                   2192 ;	-----------------------------------------
      000C11                       2193 _TIM1_ForcedOC4Config:
      000C11 88               [ 1] 2194 	push	a
                                   2195 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1126: assert_param(IS_TIM1_FORCED_ACTION_OK(TIM1_ForcedAction));
      000C12 6B 01            [ 1] 2196 	ld	(0x01, sp), a
      000C14 A1 50            [ 1] 2197 	cp	a, #0x50
      000C16 27 12            [ 1] 2198 	jreq	00104$
      000C18 7B 01            [ 1] 2199 	ld	a, (0x01, sp)
      000C1A A1 40            [ 1] 2200 	cp	a, #0x40
      000C1C 27 0C            [ 1] 2201 	jreq	00104$
      000C1E 4B 66            [ 1] 2202 	push	#0x66
      000C20 4B 04            [ 1] 2203 	push	#0x04
      000C22 5F               [ 1] 2204 	clrw	x
      000C23 89               [ 2] 2205 	pushw	x
      000C24 AEr00r00         [ 2] 2206 	ldw	x, #(___str_0+0)
      000C27 CDr00r00         [ 4] 2207 	call	_assert_failed
      000C2A                       2208 00104$:
                                   2209 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1129: TIM1->CCMR4  =  (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_OCM)) 
      000C2A C6 52 5B         [ 1] 2210 	ld	a, 0x525b
      000C2D A4 8F            [ 1] 2211 	and	a, #0x8f
                                   2212 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1130: | (uint8_t)TIM1_ForcedAction);
      000C2F 1A 01            [ 1] 2213 	or	a, (0x01, sp)
      000C31 C7 52 5B         [ 1] 2214 	ld	0x525b, a
                                   2215 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1131: }
      000C34 84               [ 1] 2216 	pop	a
      000C35 81               [ 4] 2217 	ret
                                   2218 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1139: void TIM1_ARRPreloadConfig(FunctionalState NewState)
                                   2219 ;	-----------------------------------------
                                   2220 ;	 function TIM1_ARRPreloadConfig
                                   2221 ;	-----------------------------------------
      000C36                       2222 _TIM1_ARRPreloadConfig:
      000C36 88               [ 1] 2223 	push	a
                                   2224 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1142: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000C37 6B 01            [ 1] 2225 	ld	(0x01, sp), a
      000C39 27 10            [ 1] 2226 	jreq	00107$
      000C3B 0D 01            [ 1] 2227 	tnz	(0x01, sp)
      000C3D 26 0C            [ 1] 2228 	jrne	00107$
      000C3F 4B 76            [ 1] 2229 	push	#0x76
      000C41 4B 04            [ 1] 2230 	push	#0x04
      000C43 5F               [ 1] 2231 	clrw	x
      000C44 89               [ 2] 2232 	pushw	x
      000C45 AEr00r00         [ 2] 2233 	ldw	x, #(___str_0+0)
      000C48 CDr00r00         [ 4] 2234 	call	_assert_failed
      000C4B                       2235 00107$:
                                   2236 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1147: TIM1->CR1 |= TIM1_CR1_ARPE;
      000C4B C6 52 50         [ 1] 2237 	ld	a, 0x5250
                                   2238 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1145: if (NewState != DISABLE)
      000C4E 0D 01            [ 1] 2239 	tnz	(0x01, sp)
      000C50 27 07            [ 1] 2240 	jreq	00102$
                                   2241 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1147: TIM1->CR1 |= TIM1_CR1_ARPE;
      000C52 AA 80            [ 1] 2242 	or	a, #0x80
      000C54 C7 52 50         [ 1] 2243 	ld	0x5250, a
      000C57 20 05            [ 2] 2244 	jra	00104$
      000C59                       2245 00102$:
                                   2246 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1151: TIM1->CR1 &= (uint8_t)(~TIM1_CR1_ARPE);
      000C59 A4 7F            [ 1] 2247 	and	a, #0x7f
      000C5B C7 52 50         [ 1] 2248 	ld	0x5250, a
      000C5E                       2249 00104$:
                                   2250 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1153: }
      000C5E 84               [ 1] 2251 	pop	a
      000C5F 81               [ 4] 2252 	ret
                                   2253 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1161: void TIM1_SelectCOM(FunctionalState NewState)
                                   2254 ;	-----------------------------------------
                                   2255 ;	 function TIM1_SelectCOM
                                   2256 ;	-----------------------------------------
      000C60                       2257 _TIM1_SelectCOM:
      000C60 88               [ 1] 2258 	push	a
                                   2259 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1164: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000C61 6B 01            [ 1] 2260 	ld	(0x01, sp), a
      000C63 27 10            [ 1] 2261 	jreq	00107$
      000C65 0D 01            [ 1] 2262 	tnz	(0x01, sp)
      000C67 26 0C            [ 1] 2263 	jrne	00107$
      000C69 4B 8C            [ 1] 2264 	push	#0x8c
      000C6B 4B 04            [ 1] 2265 	push	#0x04
      000C6D 5F               [ 1] 2266 	clrw	x
      000C6E 89               [ 2] 2267 	pushw	x
      000C6F AEr00r00         [ 2] 2268 	ldw	x, #(___str_0+0)
      000C72 CDr00r00         [ 4] 2269 	call	_assert_failed
      000C75                       2270 00107$:
                                   2271 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1169: TIM1->CR2 |= TIM1_CR2_COMS;
      000C75 C6 52 51         [ 1] 2272 	ld	a, 0x5251
                                   2273 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1167: if (NewState != DISABLE)
      000C78 0D 01            [ 1] 2274 	tnz	(0x01, sp)
      000C7A 27 07            [ 1] 2275 	jreq	00102$
                                   2276 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1169: TIM1->CR2 |= TIM1_CR2_COMS;
      000C7C AA 04            [ 1] 2277 	or	a, #0x04
      000C7E C7 52 51         [ 1] 2278 	ld	0x5251, a
      000C81 20 05            [ 2] 2279 	jra	00104$
      000C83                       2280 00102$:
                                   2281 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1173: TIM1->CR2 &= (uint8_t)(~TIM1_CR2_COMS);
      000C83 A4 FB            [ 1] 2282 	and	a, #0xfb
      000C85 C7 52 51         [ 1] 2283 	ld	0x5251, a
      000C88                       2284 00104$:
                                   2285 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1175: }
      000C88 84               [ 1] 2286 	pop	a
      000C89 81               [ 4] 2287 	ret
                                   2288 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1183: void TIM1_CCPreloadControl(FunctionalState NewState)
                                   2289 ;	-----------------------------------------
                                   2290 ;	 function TIM1_CCPreloadControl
                                   2291 ;	-----------------------------------------
      000C8A                       2292 _TIM1_CCPreloadControl:
      000C8A 88               [ 1] 2293 	push	a
                                   2294 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1186: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000C8B 6B 01            [ 1] 2295 	ld	(0x01, sp), a
      000C8D 27 10            [ 1] 2296 	jreq	00107$
      000C8F 0D 01            [ 1] 2297 	tnz	(0x01, sp)
      000C91 26 0C            [ 1] 2298 	jrne	00107$
      000C93 4B A2            [ 1] 2299 	push	#0xa2
      000C95 4B 04            [ 1] 2300 	push	#0x04
      000C97 5F               [ 1] 2301 	clrw	x
      000C98 89               [ 2] 2302 	pushw	x
      000C99 AEr00r00         [ 2] 2303 	ldw	x, #(___str_0+0)
      000C9C CDr00r00         [ 4] 2304 	call	_assert_failed
      000C9F                       2305 00107$:
                                   2306 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1191: TIM1->CR2 |= TIM1_CR2_CCPC;
      000C9F C6 52 51         [ 1] 2307 	ld	a, 0x5251
                                   2308 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1189: if (NewState != DISABLE)
      000CA2 0D 01            [ 1] 2309 	tnz	(0x01, sp)
      000CA4 27 07            [ 1] 2310 	jreq	00102$
                                   2311 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1191: TIM1->CR2 |= TIM1_CR2_CCPC;
      000CA6 AA 01            [ 1] 2312 	or	a, #0x01
      000CA8 C7 52 51         [ 1] 2313 	ld	0x5251, a
      000CAB 20 05            [ 2] 2314 	jra	00104$
      000CAD                       2315 00102$:
                                   2316 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1195: TIM1->CR2 &= (uint8_t)(~TIM1_CR2_CCPC);
      000CAD A4 FE            [ 1] 2317 	and	a, #0xfe
      000CAF C7 52 51         [ 1] 2318 	ld	0x5251, a
      000CB2                       2319 00104$:
                                   2320 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1197: }
      000CB2 84               [ 1] 2321 	pop	a
      000CB3 81               [ 4] 2322 	ret
                                   2323 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1205: void TIM1_OC1PreloadConfig(FunctionalState NewState)
                                   2324 ;	-----------------------------------------
                                   2325 ;	 function TIM1_OC1PreloadConfig
                                   2326 ;	-----------------------------------------
      000CB4                       2327 _TIM1_OC1PreloadConfig:
      000CB4 88               [ 1] 2328 	push	a
                                   2329 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1208: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000CB5 6B 01            [ 1] 2330 	ld	(0x01, sp), a
      000CB7 27 10            [ 1] 2331 	jreq	00107$
      000CB9 0D 01            [ 1] 2332 	tnz	(0x01, sp)
      000CBB 26 0C            [ 1] 2333 	jrne	00107$
      000CBD 4B B8            [ 1] 2334 	push	#0xb8
      000CBF 4B 04            [ 1] 2335 	push	#0x04
      000CC1 5F               [ 1] 2336 	clrw	x
      000CC2 89               [ 2] 2337 	pushw	x
      000CC3 AEr00r00         [ 2] 2338 	ldw	x, #(___str_0+0)
      000CC6 CDr00r00         [ 4] 2339 	call	_assert_failed
      000CC9                       2340 00107$:
                                   2341 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1213: TIM1->CCMR1 |= TIM1_CCMR_OCxPE;
      000CC9 C6 52 58         [ 1] 2342 	ld	a, 0x5258
                                   2343 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1211: if (NewState != DISABLE)
      000CCC 0D 01            [ 1] 2344 	tnz	(0x01, sp)
      000CCE 27 07            [ 1] 2345 	jreq	00102$
                                   2346 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1213: TIM1->CCMR1 |= TIM1_CCMR_OCxPE;
      000CD0 AA 08            [ 1] 2347 	or	a, #0x08
      000CD2 C7 52 58         [ 1] 2348 	ld	0x5258, a
      000CD5 20 05            [ 2] 2349 	jra	00104$
      000CD7                       2350 00102$:
                                   2351 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1217: TIM1->CCMR1 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      000CD7 A4 F7            [ 1] 2352 	and	a, #0xf7
      000CD9 C7 52 58         [ 1] 2353 	ld	0x5258, a
      000CDC                       2354 00104$:
                                   2355 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1219: }
      000CDC 84               [ 1] 2356 	pop	a
      000CDD 81               [ 4] 2357 	ret
                                   2358 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1227: void TIM1_OC2PreloadConfig(FunctionalState NewState)
                                   2359 ;	-----------------------------------------
                                   2360 ;	 function TIM1_OC2PreloadConfig
                                   2361 ;	-----------------------------------------
      000CDE                       2362 _TIM1_OC2PreloadConfig:
      000CDE 88               [ 1] 2363 	push	a
                                   2364 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1230: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000CDF 6B 01            [ 1] 2365 	ld	(0x01, sp), a
      000CE1 27 10            [ 1] 2366 	jreq	00107$
      000CE3 0D 01            [ 1] 2367 	tnz	(0x01, sp)
      000CE5 26 0C            [ 1] 2368 	jrne	00107$
      000CE7 4B CE            [ 1] 2369 	push	#0xce
      000CE9 4B 04            [ 1] 2370 	push	#0x04
      000CEB 5F               [ 1] 2371 	clrw	x
      000CEC 89               [ 2] 2372 	pushw	x
      000CED AEr00r00         [ 2] 2373 	ldw	x, #(___str_0+0)
      000CF0 CDr00r00         [ 4] 2374 	call	_assert_failed
      000CF3                       2375 00107$:
                                   2376 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1235: TIM1->CCMR2 |= TIM1_CCMR_OCxPE;
      000CF3 C6 52 59         [ 1] 2377 	ld	a, 0x5259
                                   2378 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1233: if (NewState != DISABLE)
      000CF6 0D 01            [ 1] 2379 	tnz	(0x01, sp)
      000CF8 27 07            [ 1] 2380 	jreq	00102$
                                   2381 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1235: TIM1->CCMR2 |= TIM1_CCMR_OCxPE;
      000CFA AA 08            [ 1] 2382 	or	a, #0x08
      000CFC C7 52 59         [ 1] 2383 	ld	0x5259, a
      000CFF 20 05            [ 2] 2384 	jra	00104$
      000D01                       2385 00102$:
                                   2386 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1239: TIM1->CCMR2 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      000D01 A4 F7            [ 1] 2387 	and	a, #0xf7
      000D03 C7 52 59         [ 1] 2388 	ld	0x5259, a
      000D06                       2389 00104$:
                                   2390 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1241: }
      000D06 84               [ 1] 2391 	pop	a
      000D07 81               [ 4] 2392 	ret
                                   2393 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1249: void TIM1_OC3PreloadConfig(FunctionalState NewState)
                                   2394 ;	-----------------------------------------
                                   2395 ;	 function TIM1_OC3PreloadConfig
                                   2396 ;	-----------------------------------------
      000D08                       2397 _TIM1_OC3PreloadConfig:
      000D08 88               [ 1] 2398 	push	a
                                   2399 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1252: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000D09 6B 01            [ 1] 2400 	ld	(0x01, sp), a
      000D0B 27 10            [ 1] 2401 	jreq	00107$
      000D0D 0D 01            [ 1] 2402 	tnz	(0x01, sp)
      000D0F 26 0C            [ 1] 2403 	jrne	00107$
      000D11 4B E4            [ 1] 2404 	push	#0xe4
      000D13 4B 04            [ 1] 2405 	push	#0x04
      000D15 5F               [ 1] 2406 	clrw	x
      000D16 89               [ 2] 2407 	pushw	x
      000D17 AEr00r00         [ 2] 2408 	ldw	x, #(___str_0+0)
      000D1A CDr00r00         [ 4] 2409 	call	_assert_failed
      000D1D                       2410 00107$:
                                   2411 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1257: TIM1->CCMR3 |= TIM1_CCMR_OCxPE;
      000D1D C6 52 5A         [ 1] 2412 	ld	a, 0x525a
                                   2413 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1255: if (NewState != DISABLE)
      000D20 0D 01            [ 1] 2414 	tnz	(0x01, sp)
      000D22 27 07            [ 1] 2415 	jreq	00102$
                                   2416 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1257: TIM1->CCMR3 |= TIM1_CCMR_OCxPE;
      000D24 AA 08            [ 1] 2417 	or	a, #0x08
      000D26 C7 52 5A         [ 1] 2418 	ld	0x525a, a
      000D29 20 05            [ 2] 2419 	jra	00104$
      000D2B                       2420 00102$:
                                   2421 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1261: TIM1->CCMR3 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      000D2B A4 F7            [ 1] 2422 	and	a, #0xf7
      000D2D C7 52 5A         [ 1] 2423 	ld	0x525a, a
      000D30                       2424 00104$:
                                   2425 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1263: }
      000D30 84               [ 1] 2426 	pop	a
      000D31 81               [ 4] 2427 	ret
                                   2428 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1271: void TIM1_OC4PreloadConfig(FunctionalState NewState)
                                   2429 ;	-----------------------------------------
                                   2430 ;	 function TIM1_OC4PreloadConfig
                                   2431 ;	-----------------------------------------
      000D32                       2432 _TIM1_OC4PreloadConfig:
      000D32 88               [ 1] 2433 	push	a
                                   2434 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1274: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000D33 6B 01            [ 1] 2435 	ld	(0x01, sp), a
      000D35 27 10            [ 1] 2436 	jreq	00107$
      000D37 0D 01            [ 1] 2437 	tnz	(0x01, sp)
      000D39 26 0C            [ 1] 2438 	jrne	00107$
      000D3B 4B FA            [ 1] 2439 	push	#0xfa
      000D3D 4B 04            [ 1] 2440 	push	#0x04
      000D3F 5F               [ 1] 2441 	clrw	x
      000D40 89               [ 2] 2442 	pushw	x
      000D41 AEr00r00         [ 2] 2443 	ldw	x, #(___str_0+0)
      000D44 CDr00r00         [ 4] 2444 	call	_assert_failed
      000D47                       2445 00107$:
                                   2446 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1279: TIM1->CCMR4 |= TIM1_CCMR_OCxPE;
      000D47 C6 52 5B         [ 1] 2447 	ld	a, 0x525b
                                   2448 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1277: if (NewState != DISABLE)
      000D4A 0D 01            [ 1] 2449 	tnz	(0x01, sp)
      000D4C 27 07            [ 1] 2450 	jreq	00102$
                                   2451 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1279: TIM1->CCMR4 |= TIM1_CCMR_OCxPE;
      000D4E AA 08            [ 1] 2452 	or	a, #0x08
      000D50 C7 52 5B         [ 1] 2453 	ld	0x525b, a
      000D53 20 05            [ 2] 2454 	jra	00104$
      000D55                       2455 00102$:
                                   2456 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1283: TIM1->CCMR4 &= (uint8_t)(~TIM1_CCMR_OCxPE);
      000D55 A4 F7            [ 1] 2457 	and	a, #0xf7
      000D57 C7 52 5B         [ 1] 2458 	ld	0x525b, a
      000D5A                       2459 00104$:
                                   2460 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1285: }
      000D5A 84               [ 1] 2461 	pop	a
      000D5B 81               [ 4] 2462 	ret
                                   2463 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1293: void TIM1_OC1FastConfig(FunctionalState NewState)
                                   2464 ;	-----------------------------------------
                                   2465 ;	 function TIM1_OC1FastConfig
                                   2466 ;	-----------------------------------------
      000D5C                       2467 _TIM1_OC1FastConfig:
      000D5C 88               [ 1] 2468 	push	a
                                   2469 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1296: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000D5D 6B 01            [ 1] 2470 	ld	(0x01, sp), a
      000D5F 27 10            [ 1] 2471 	jreq	00107$
      000D61 0D 01            [ 1] 2472 	tnz	(0x01, sp)
      000D63 26 0C            [ 1] 2473 	jrne	00107$
      000D65 4B 10            [ 1] 2474 	push	#0x10
      000D67 4B 05            [ 1] 2475 	push	#0x05
      000D69 5F               [ 1] 2476 	clrw	x
      000D6A 89               [ 2] 2477 	pushw	x
      000D6B AEr00r00         [ 2] 2478 	ldw	x, #(___str_0+0)
      000D6E CDr00r00         [ 4] 2479 	call	_assert_failed
      000D71                       2480 00107$:
                                   2481 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1301: TIM1->CCMR1 |= TIM1_CCMR_OCxFE;
      000D71 C6 52 58         [ 1] 2482 	ld	a, 0x5258
                                   2483 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1299: if (NewState != DISABLE)
      000D74 0D 01            [ 1] 2484 	tnz	(0x01, sp)
      000D76 27 07            [ 1] 2485 	jreq	00102$
                                   2486 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1301: TIM1->CCMR1 |= TIM1_CCMR_OCxFE;
      000D78 AA 04            [ 1] 2487 	or	a, #0x04
      000D7A C7 52 58         [ 1] 2488 	ld	0x5258, a
      000D7D 20 05            [ 2] 2489 	jra	00104$
      000D7F                       2490 00102$:
                                   2491 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1305: TIM1->CCMR1 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      000D7F A4 FB            [ 1] 2492 	and	a, #0xfb
      000D81 C7 52 58         [ 1] 2493 	ld	0x5258, a
      000D84                       2494 00104$:
                                   2495 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1307: }
      000D84 84               [ 1] 2496 	pop	a
      000D85 81               [ 4] 2497 	ret
                                   2498 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1315: void TIM1_OC2FastConfig(FunctionalState NewState)
                                   2499 ;	-----------------------------------------
                                   2500 ;	 function TIM1_OC2FastConfig
                                   2501 ;	-----------------------------------------
      000D86                       2502 _TIM1_OC2FastConfig:
      000D86 88               [ 1] 2503 	push	a
                                   2504 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1318: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000D87 6B 01            [ 1] 2505 	ld	(0x01, sp), a
      000D89 27 10            [ 1] 2506 	jreq	00107$
      000D8B 0D 01            [ 1] 2507 	tnz	(0x01, sp)
      000D8D 26 0C            [ 1] 2508 	jrne	00107$
      000D8F 4B 26            [ 1] 2509 	push	#0x26
      000D91 4B 05            [ 1] 2510 	push	#0x05
      000D93 5F               [ 1] 2511 	clrw	x
      000D94 89               [ 2] 2512 	pushw	x
      000D95 AEr00r00         [ 2] 2513 	ldw	x, #(___str_0+0)
      000D98 CDr00r00         [ 4] 2514 	call	_assert_failed
      000D9B                       2515 00107$:
                                   2516 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1323: TIM1->CCMR2 |= TIM1_CCMR_OCxFE;
      000D9B C6 52 59         [ 1] 2517 	ld	a, 0x5259
                                   2518 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1321: if (NewState != DISABLE)
      000D9E 0D 01            [ 1] 2519 	tnz	(0x01, sp)
      000DA0 27 07            [ 1] 2520 	jreq	00102$
                                   2521 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1323: TIM1->CCMR2 |= TIM1_CCMR_OCxFE;
      000DA2 AA 04            [ 1] 2522 	or	a, #0x04
      000DA4 C7 52 59         [ 1] 2523 	ld	0x5259, a
      000DA7 20 05            [ 2] 2524 	jra	00104$
      000DA9                       2525 00102$:
                                   2526 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1327: TIM1->CCMR2 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      000DA9 A4 FB            [ 1] 2527 	and	a, #0xfb
      000DAB C7 52 59         [ 1] 2528 	ld	0x5259, a
      000DAE                       2529 00104$:
                                   2530 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1329: }
      000DAE 84               [ 1] 2531 	pop	a
      000DAF 81               [ 4] 2532 	ret
                                   2533 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1337: void TIM1_OC3FastConfig(FunctionalState NewState)
                                   2534 ;	-----------------------------------------
                                   2535 ;	 function TIM1_OC3FastConfig
                                   2536 ;	-----------------------------------------
      000DB0                       2537 _TIM1_OC3FastConfig:
      000DB0 88               [ 1] 2538 	push	a
                                   2539 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1340: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000DB1 6B 01            [ 1] 2540 	ld	(0x01, sp), a
      000DB3 27 10            [ 1] 2541 	jreq	00107$
      000DB5 0D 01            [ 1] 2542 	tnz	(0x01, sp)
      000DB7 26 0C            [ 1] 2543 	jrne	00107$
      000DB9 4B 3C            [ 1] 2544 	push	#0x3c
      000DBB 4B 05            [ 1] 2545 	push	#0x05
      000DBD 5F               [ 1] 2546 	clrw	x
      000DBE 89               [ 2] 2547 	pushw	x
      000DBF AEr00r00         [ 2] 2548 	ldw	x, #(___str_0+0)
      000DC2 CDr00r00         [ 4] 2549 	call	_assert_failed
      000DC5                       2550 00107$:
                                   2551 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1345: TIM1->CCMR3 |= TIM1_CCMR_OCxFE;
      000DC5 C6 52 5A         [ 1] 2552 	ld	a, 0x525a
                                   2553 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1343: if (NewState != DISABLE)
      000DC8 0D 01            [ 1] 2554 	tnz	(0x01, sp)
      000DCA 27 07            [ 1] 2555 	jreq	00102$
                                   2556 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1345: TIM1->CCMR3 |= TIM1_CCMR_OCxFE;
      000DCC AA 04            [ 1] 2557 	or	a, #0x04
      000DCE C7 52 5A         [ 1] 2558 	ld	0x525a, a
      000DD1 20 05            [ 2] 2559 	jra	00104$
      000DD3                       2560 00102$:
                                   2561 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1349: TIM1->CCMR3 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      000DD3 A4 FB            [ 1] 2562 	and	a, #0xfb
      000DD5 C7 52 5A         [ 1] 2563 	ld	0x525a, a
      000DD8                       2564 00104$:
                                   2565 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1351: }
      000DD8 84               [ 1] 2566 	pop	a
      000DD9 81               [ 4] 2567 	ret
                                   2568 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1359: void TIM1_OC4FastConfig(FunctionalState NewState)
                                   2569 ;	-----------------------------------------
                                   2570 ;	 function TIM1_OC4FastConfig
                                   2571 ;	-----------------------------------------
      000DDA                       2572 _TIM1_OC4FastConfig:
      000DDA 88               [ 1] 2573 	push	a
                                   2574 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1362: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000DDB 6B 01            [ 1] 2575 	ld	(0x01, sp), a
      000DDD 27 10            [ 1] 2576 	jreq	00107$
      000DDF 0D 01            [ 1] 2577 	tnz	(0x01, sp)
      000DE1 26 0C            [ 1] 2578 	jrne	00107$
      000DE3 4B 52            [ 1] 2579 	push	#0x52
      000DE5 4B 05            [ 1] 2580 	push	#0x05
      000DE7 5F               [ 1] 2581 	clrw	x
      000DE8 89               [ 2] 2582 	pushw	x
      000DE9 AEr00r00         [ 2] 2583 	ldw	x, #(___str_0+0)
      000DEC CDr00r00         [ 4] 2584 	call	_assert_failed
      000DEF                       2585 00107$:
                                   2586 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1367: TIM1->CCMR4 |= TIM1_CCMR_OCxFE;
      000DEF C6 52 5B         [ 1] 2587 	ld	a, 0x525b
                                   2588 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1365: if (NewState != DISABLE)
      000DF2 0D 01            [ 1] 2589 	tnz	(0x01, sp)
      000DF4 27 07            [ 1] 2590 	jreq	00102$
                                   2591 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1367: TIM1->CCMR4 |= TIM1_CCMR_OCxFE;
      000DF6 AA 04            [ 1] 2592 	or	a, #0x04
      000DF8 C7 52 5B         [ 1] 2593 	ld	0x525b, a
      000DFB 20 05            [ 2] 2594 	jra	00104$
      000DFD                       2595 00102$:
                                   2596 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1371: TIM1->CCMR4 &= (uint8_t)(~TIM1_CCMR_OCxFE);
      000DFD A4 FB            [ 1] 2597 	and	a, #0xfb
      000DFF C7 52 5B         [ 1] 2598 	ld	0x525b, a
      000E02                       2599 00104$:
                                   2600 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1373: }
      000E02 84               [ 1] 2601 	pop	a
      000E03 81               [ 4] 2602 	ret
                                   2603 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1389: void TIM1_GenerateEvent(TIM1_EventSource_TypeDef TIM1_EventSource)
                                   2604 ;	-----------------------------------------
                                   2605 ;	 function TIM1_GenerateEvent
                                   2606 ;	-----------------------------------------
      000E04                       2607 _TIM1_GenerateEvent:
                                   2608 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1392: assert_param(IS_TIM1_EVENT_SOURCE_OK(TIM1_EventSource));
      000E04 4D               [ 1] 2609 	tnz	a
      000E05 26 0E            [ 1] 2610 	jrne	00104$
      000E07 88               [ 1] 2611 	push	a
      000E08 4B 70            [ 1] 2612 	push	#0x70
      000E0A 4B 05            [ 1] 2613 	push	#0x05
      000E0C 5F               [ 1] 2614 	clrw	x
      000E0D 89               [ 2] 2615 	pushw	x
      000E0E AEr00r00         [ 2] 2616 	ldw	x, #(___str_0+0)
      000E11 CDr00r00         [ 4] 2617 	call	_assert_failed
      000E14 84               [ 1] 2618 	pop	a
      000E15                       2619 00104$:
                                   2620 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1395: TIM1->EGR = (uint8_t)TIM1_EventSource;
      000E15 C7 52 57         [ 1] 2621 	ld	0x5257, a
                                   2622 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1396: }
      000E18 81               [ 4] 2623 	ret
                                   2624 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1406: void TIM1_OC1PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   2625 ;	-----------------------------------------
                                   2626 ;	 function TIM1_OC1PolarityConfig
                                   2627 ;	-----------------------------------------
      000E19                       2628 _TIM1_OC1PolarityConfig:
      000E19 88               [ 1] 2629 	push	a
                                   2630 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1409: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      000E1A 6B 01            [ 1] 2631 	ld	(0x01, sp), a
      000E1C 27 12            [ 1] 2632 	jreq	00107$
      000E1E 7B 01            [ 1] 2633 	ld	a, (0x01, sp)
      000E20 A1 22            [ 1] 2634 	cp	a, #0x22
      000E22 27 0C            [ 1] 2635 	jreq	00107$
      000E24 4B 81            [ 1] 2636 	push	#0x81
      000E26 4B 05            [ 1] 2637 	push	#0x05
      000E28 5F               [ 1] 2638 	clrw	x
      000E29 89               [ 2] 2639 	pushw	x
      000E2A AEr00r00         [ 2] 2640 	ldw	x, #(___str_0+0)
      000E2D CDr00r00         [ 4] 2641 	call	_assert_failed
      000E30                       2642 00107$:
                                   2643 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1414: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      000E30 C6 52 5C         [ 1] 2644 	ld	a, 0x525c
                                   2645 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1412: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      000E33 0D 01            [ 1] 2646 	tnz	(0x01, sp)
      000E35 27 07            [ 1] 2647 	jreq	00102$
                                   2648 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1414: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      000E37 AA 02            [ 1] 2649 	or	a, #0x02
      000E39 C7 52 5C         [ 1] 2650 	ld	0x525c, a
      000E3C 20 05            [ 2] 2651 	jra	00104$
      000E3E                       2652 00102$:
                                   2653 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1418: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1P);
      000E3E A4 FD            [ 1] 2654 	and	a, #0xfd
      000E40 C7 52 5C         [ 1] 2655 	ld	0x525c, a
      000E43                       2656 00104$:
                                   2657 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1420: }
      000E43 84               [ 1] 2658 	pop	a
      000E44 81               [ 4] 2659 	ret
                                   2660 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1430: void TIM1_OC1NPolarityConfig(TIM1_OCNPolarity_TypeDef TIM1_OCNPolarity)
                                   2661 ;	-----------------------------------------
                                   2662 ;	 function TIM1_OC1NPolarityConfig
                                   2663 ;	-----------------------------------------
      000E45                       2664 _TIM1_OC1NPolarityConfig:
      000E45 88               [ 1] 2665 	push	a
                                   2666 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1433: assert_param(IS_TIM1_OCN_POLARITY_OK(TIM1_OCNPolarity));
      000E46 6B 01            [ 1] 2667 	ld	(0x01, sp), a
      000E48 27 12            [ 1] 2668 	jreq	00107$
      000E4A 7B 01            [ 1] 2669 	ld	a, (0x01, sp)
      000E4C A1 88            [ 1] 2670 	cp	a, #0x88
      000E4E 27 0C            [ 1] 2671 	jreq	00107$
      000E50 4B 99            [ 1] 2672 	push	#0x99
      000E52 4B 05            [ 1] 2673 	push	#0x05
      000E54 5F               [ 1] 2674 	clrw	x
      000E55 89               [ 2] 2675 	pushw	x
      000E56 AEr00r00         [ 2] 2676 	ldw	x, #(___str_0+0)
      000E59 CDr00r00         [ 4] 2677 	call	_assert_failed
      000E5C                       2678 00107$:
                                   2679 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1438: TIM1->CCER1 |= TIM1_CCER1_CC1NP;
      000E5C C6 52 5C         [ 1] 2680 	ld	a, 0x525c
                                   2681 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1436: if (TIM1_OCNPolarity != TIM1_OCNPOLARITY_HIGH)
      000E5F 0D 01            [ 1] 2682 	tnz	(0x01, sp)
      000E61 27 07            [ 1] 2683 	jreq	00102$
                                   2684 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1438: TIM1->CCER1 |= TIM1_CCER1_CC1NP;
      000E63 AA 08            [ 1] 2685 	or	a, #0x08
      000E65 C7 52 5C         [ 1] 2686 	ld	0x525c, a
      000E68 20 05            [ 2] 2687 	jra	00104$
      000E6A                       2688 00102$:
                                   2689 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1442: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1NP);
      000E6A A4 F7            [ 1] 2690 	and	a, #0xf7
      000E6C C7 52 5C         [ 1] 2691 	ld	0x525c, a
      000E6F                       2692 00104$:
                                   2693 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1444: }
      000E6F 84               [ 1] 2694 	pop	a
      000E70 81               [ 4] 2695 	ret
                                   2696 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1454: void TIM1_OC2PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   2697 ;	-----------------------------------------
                                   2698 ;	 function TIM1_OC2PolarityConfig
                                   2699 ;	-----------------------------------------
      000E71                       2700 _TIM1_OC2PolarityConfig:
      000E71 88               [ 1] 2701 	push	a
                                   2702 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1457: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      000E72 6B 01            [ 1] 2703 	ld	(0x01, sp), a
      000E74 27 12            [ 1] 2704 	jreq	00107$
      000E76 7B 01            [ 1] 2705 	ld	a, (0x01, sp)
      000E78 A1 22            [ 1] 2706 	cp	a, #0x22
      000E7A 27 0C            [ 1] 2707 	jreq	00107$
      000E7C 4B B1            [ 1] 2708 	push	#0xb1
      000E7E 4B 05            [ 1] 2709 	push	#0x05
      000E80 5F               [ 1] 2710 	clrw	x
      000E81 89               [ 2] 2711 	pushw	x
      000E82 AEr00r00         [ 2] 2712 	ldw	x, #(___str_0+0)
      000E85 CDr00r00         [ 4] 2713 	call	_assert_failed
      000E88                       2714 00107$:
                                   2715 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1462: TIM1->CCER1 |= TIM1_CCER1_CC2P;
      000E88 C6 52 5C         [ 1] 2716 	ld	a, 0x525c
                                   2717 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1460: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      000E8B 0D 01            [ 1] 2718 	tnz	(0x01, sp)
      000E8D 27 07            [ 1] 2719 	jreq	00102$
                                   2720 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1462: TIM1->CCER1 |= TIM1_CCER1_CC2P;
      000E8F AA 20            [ 1] 2721 	or	a, #0x20
      000E91 C7 52 5C         [ 1] 2722 	ld	0x525c, a
      000E94 20 05            [ 2] 2723 	jra	00104$
      000E96                       2724 00102$:
                                   2725 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1466: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2P);
      000E96 A4 DF            [ 1] 2726 	and	a, #0xdf
      000E98 C7 52 5C         [ 1] 2727 	ld	0x525c, a
      000E9B                       2728 00104$:
                                   2729 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1468: }
      000E9B 84               [ 1] 2730 	pop	a
      000E9C 81               [ 4] 2731 	ret
                                   2732 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1478: void TIM1_OC2NPolarityConfig(TIM1_OCNPolarity_TypeDef TIM1_OCNPolarity)
                                   2733 ;	-----------------------------------------
                                   2734 ;	 function TIM1_OC2NPolarityConfig
                                   2735 ;	-----------------------------------------
      000E9D                       2736 _TIM1_OC2NPolarityConfig:
      000E9D 88               [ 1] 2737 	push	a
                                   2738 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1481: assert_param(IS_TIM1_OCN_POLARITY_OK(TIM1_OCNPolarity));
      000E9E 6B 01            [ 1] 2739 	ld	(0x01, sp), a
      000EA0 27 12            [ 1] 2740 	jreq	00107$
      000EA2 7B 01            [ 1] 2741 	ld	a, (0x01, sp)
      000EA4 A1 88            [ 1] 2742 	cp	a, #0x88
      000EA6 27 0C            [ 1] 2743 	jreq	00107$
      000EA8 4B C9            [ 1] 2744 	push	#0xc9
      000EAA 4B 05            [ 1] 2745 	push	#0x05
      000EAC 5F               [ 1] 2746 	clrw	x
      000EAD 89               [ 2] 2747 	pushw	x
      000EAE AEr00r00         [ 2] 2748 	ldw	x, #(___str_0+0)
      000EB1 CDr00r00         [ 4] 2749 	call	_assert_failed
      000EB4                       2750 00107$:
                                   2751 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1486: TIM1->CCER1 |= TIM1_CCER1_CC2NP;
      000EB4 C6 52 5C         [ 1] 2752 	ld	a, 0x525c
                                   2753 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1484: if (TIM1_OCNPolarity != TIM1_OCNPOLARITY_HIGH)
      000EB7 0D 01            [ 1] 2754 	tnz	(0x01, sp)
      000EB9 27 07            [ 1] 2755 	jreq	00102$
                                   2756 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1486: TIM1->CCER1 |= TIM1_CCER1_CC2NP;
      000EBB AA 80            [ 1] 2757 	or	a, #0x80
      000EBD C7 52 5C         [ 1] 2758 	ld	0x525c, a
      000EC0 20 05            [ 2] 2759 	jra	00104$
      000EC2                       2760 00102$:
                                   2761 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1490: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2NP);
      000EC2 A4 7F            [ 1] 2762 	and	a, #0x7f
      000EC4 C7 52 5C         [ 1] 2763 	ld	0x525c, a
      000EC7                       2764 00104$:
                                   2765 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1492: }
      000EC7 84               [ 1] 2766 	pop	a
      000EC8 81               [ 4] 2767 	ret
                                   2768 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1502: void TIM1_OC3PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   2769 ;	-----------------------------------------
                                   2770 ;	 function TIM1_OC3PolarityConfig
                                   2771 ;	-----------------------------------------
      000EC9                       2772 _TIM1_OC3PolarityConfig:
      000EC9 88               [ 1] 2773 	push	a
                                   2774 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1505: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      000ECA 6B 01            [ 1] 2775 	ld	(0x01, sp), a
      000ECC 27 12            [ 1] 2776 	jreq	00107$
      000ECE 7B 01            [ 1] 2777 	ld	a, (0x01, sp)
      000ED0 A1 22            [ 1] 2778 	cp	a, #0x22
      000ED2 27 0C            [ 1] 2779 	jreq	00107$
      000ED4 4B E1            [ 1] 2780 	push	#0xe1
      000ED6 4B 05            [ 1] 2781 	push	#0x05
      000ED8 5F               [ 1] 2782 	clrw	x
      000ED9 89               [ 2] 2783 	pushw	x
      000EDA AEr00r00         [ 2] 2784 	ldw	x, #(___str_0+0)
      000EDD CDr00r00         [ 4] 2785 	call	_assert_failed
      000EE0                       2786 00107$:
                                   2787 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1510: TIM1->CCER2 |= TIM1_CCER2_CC3P;
      000EE0 C6 52 5D         [ 1] 2788 	ld	a, 0x525d
                                   2789 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1508: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      000EE3 0D 01            [ 1] 2790 	tnz	(0x01, sp)
      000EE5 27 07            [ 1] 2791 	jreq	00102$
                                   2792 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1510: TIM1->CCER2 |= TIM1_CCER2_CC3P;
      000EE7 AA 02            [ 1] 2793 	or	a, #0x02
      000EE9 C7 52 5D         [ 1] 2794 	ld	0x525d, a
      000EEC 20 05            [ 2] 2795 	jra	00104$
      000EEE                       2796 00102$:
                                   2797 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1514: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3P);
      000EEE A4 FD            [ 1] 2798 	and	a, #0xfd
      000EF0 C7 52 5D         [ 1] 2799 	ld	0x525d, a
      000EF3                       2800 00104$:
                                   2801 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1516: }
      000EF3 84               [ 1] 2802 	pop	a
      000EF4 81               [ 4] 2803 	ret
                                   2804 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1527: void TIM1_OC3NPolarityConfig(TIM1_OCNPolarity_TypeDef TIM1_OCNPolarity)
                                   2805 ;	-----------------------------------------
                                   2806 ;	 function TIM1_OC3NPolarityConfig
                                   2807 ;	-----------------------------------------
      000EF5                       2808 _TIM1_OC3NPolarityConfig:
      000EF5 88               [ 1] 2809 	push	a
                                   2810 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1530: assert_param(IS_TIM1_OCN_POLARITY_OK(TIM1_OCNPolarity));
      000EF6 6B 01            [ 1] 2811 	ld	(0x01, sp), a
      000EF8 27 12            [ 1] 2812 	jreq	00107$
      000EFA 7B 01            [ 1] 2813 	ld	a, (0x01, sp)
      000EFC A1 88            [ 1] 2814 	cp	a, #0x88
      000EFE 27 0C            [ 1] 2815 	jreq	00107$
      000F00 4B FA            [ 1] 2816 	push	#0xfa
      000F02 4B 05            [ 1] 2817 	push	#0x05
      000F04 5F               [ 1] 2818 	clrw	x
      000F05 89               [ 2] 2819 	pushw	x
      000F06 AEr00r00         [ 2] 2820 	ldw	x, #(___str_0+0)
      000F09 CDr00r00         [ 4] 2821 	call	_assert_failed
      000F0C                       2822 00107$:
                                   2823 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1535: TIM1->CCER2 |= TIM1_CCER2_CC3NP;
      000F0C C6 52 5D         [ 1] 2824 	ld	a, 0x525d
                                   2825 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1533: if (TIM1_OCNPolarity != TIM1_OCNPOLARITY_HIGH)
      000F0F 0D 01            [ 1] 2826 	tnz	(0x01, sp)
      000F11 27 07            [ 1] 2827 	jreq	00102$
                                   2828 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1535: TIM1->CCER2 |= TIM1_CCER2_CC3NP;
      000F13 AA 08            [ 1] 2829 	or	a, #0x08
      000F15 C7 52 5D         [ 1] 2830 	ld	0x525d, a
      000F18 20 05            [ 2] 2831 	jra	00104$
      000F1A                       2832 00102$:
                                   2833 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1539: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3NP);
      000F1A A4 F7            [ 1] 2834 	and	a, #0xf7
      000F1C C7 52 5D         [ 1] 2835 	ld	0x525d, a
      000F1F                       2836 00104$:
                                   2837 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1541: }
      000F1F 84               [ 1] 2838 	pop	a
      000F20 81               [ 4] 2839 	ret
                                   2840 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1551: void TIM1_OC4PolarityConfig(TIM1_OCPolarity_TypeDef TIM1_OCPolarity)
                                   2841 ;	-----------------------------------------
                                   2842 ;	 function TIM1_OC4PolarityConfig
                                   2843 ;	-----------------------------------------
      000F21                       2844 _TIM1_OC4PolarityConfig:
      000F21 88               [ 1] 2845 	push	a
                                   2846 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1554: assert_param(IS_TIM1_OC_POLARITY_OK(TIM1_OCPolarity));
      000F22 6B 01            [ 1] 2847 	ld	(0x01, sp), a
      000F24 27 12            [ 1] 2848 	jreq	00107$
      000F26 7B 01            [ 1] 2849 	ld	a, (0x01, sp)
      000F28 A1 22            [ 1] 2850 	cp	a, #0x22
      000F2A 27 0C            [ 1] 2851 	jreq	00107$
      000F2C 4B 12            [ 1] 2852 	push	#0x12
      000F2E 4B 06            [ 1] 2853 	push	#0x06
      000F30 5F               [ 1] 2854 	clrw	x
      000F31 89               [ 2] 2855 	pushw	x
      000F32 AEr00r00         [ 2] 2856 	ldw	x, #(___str_0+0)
      000F35 CDr00r00         [ 4] 2857 	call	_assert_failed
      000F38                       2858 00107$:
                                   2859 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1559: TIM1->CCER2 |= TIM1_CCER2_CC4P;
      000F38 C6 52 5D         [ 1] 2860 	ld	a, 0x525d
                                   2861 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1557: if (TIM1_OCPolarity != TIM1_OCPOLARITY_HIGH)
      000F3B 0D 01            [ 1] 2862 	tnz	(0x01, sp)
      000F3D 27 07            [ 1] 2863 	jreq	00102$
                                   2864 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1559: TIM1->CCER2 |= TIM1_CCER2_CC4P;
      000F3F AA 20            [ 1] 2865 	or	a, #0x20
      000F41 C7 52 5D         [ 1] 2866 	ld	0x525d, a
      000F44 20 05            [ 2] 2867 	jra	00104$
      000F46                       2868 00102$:
                                   2869 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1563: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4P);
      000F46 A4 DF            [ 1] 2870 	and	a, #0xdf
      000F48 C7 52 5D         [ 1] 2871 	ld	0x525d, a
      000F4B                       2872 00104$:
                                   2873 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1565: }
      000F4B 84               [ 1] 2874 	pop	a
      000F4C 81               [ 4] 2875 	ret
                                   2876 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1579: void TIM1_CCxCmd(TIM1_Channel_TypeDef TIM1_Channel, FunctionalState NewState)
                                   2877 ;	-----------------------------------------
                                   2878 ;	 function TIM1_CCxCmd
                                   2879 ;	-----------------------------------------
      000F4D                       2880 _TIM1_CCxCmd:
      000F4D 89               [ 2] 2881 	pushw	x
                                   2882 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1582: assert_param(IS_TIM1_CHANNEL_OK(TIM1_Channel));
      000F4E A1 01            [ 1] 2883 	cp	a, #0x01
      000F50 26 07            [ 1] 2884 	jrne	00232$
      000F52 88               [ 1] 2885 	push	a
      000F53 A6 01            [ 1] 2886 	ld	a, #0x01
      000F55 6B 02            [ 1] 2887 	ld	(0x02, sp), a
      000F57 84               [ 1] 2888 	pop	a
      000F58 C5                    2889 	.byte 0xc5
      000F59                       2890 00232$:
      000F59 0F 01            [ 1] 2891 	clr	(0x01, sp)
      000F5B                       2892 00233$:
      000F5B A1 02            [ 1] 2893 	cp	a, #0x02
      000F5D 26 07            [ 1] 2894 	jrne	00235$
      000F5F 88               [ 1] 2895 	push	a
      000F60 A6 01            [ 1] 2896 	ld	a, #0x01
      000F62 6B 03            [ 1] 2897 	ld	(0x03, sp), a
      000F64 84               [ 1] 2898 	pop	a
      000F65 C5                    2899 	.byte 0xc5
      000F66                       2900 00235$:
      000F66 0F 02            [ 1] 2901 	clr	(0x02, sp)
      000F68                       2902 00236$:
      000F68 4D               [ 1] 2903 	tnz	a
      000F69 27 1A            [ 1] 2904 	jreq	00125$
      000F6B 0D 01            [ 1] 2905 	tnz	(0x01, sp)
      000F6D 26 16            [ 1] 2906 	jrne	00125$
      000F6F 0D 02            [ 1] 2907 	tnz	(0x02, sp)
      000F71 26 12            [ 1] 2908 	jrne	00125$
      000F73 A1 03            [ 1] 2909 	cp	a, #0x03
      000F75 27 0E            [ 1] 2910 	jreq	00125$
      000F77 88               [ 1] 2911 	push	a
      000F78 4B 2E            [ 1] 2912 	push	#0x2e
      000F7A 4B 06            [ 1] 2913 	push	#0x06
      000F7C 5F               [ 1] 2914 	clrw	x
      000F7D 89               [ 2] 2915 	pushw	x
      000F7E AEr00r00         [ 2] 2916 	ldw	x, #(___str_0+0)
      000F81 CDr00r00         [ 4] 2917 	call	_assert_failed
      000F84 84               [ 1] 2918 	pop	a
      000F85                       2919 00125$:
                                   2920 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1583: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      000F85 0D 05            [ 1] 2921 	tnz	(0x05, sp)
      000F87 27 12            [ 1] 2922 	jreq	00136$
      000F89 0D 05            [ 1] 2923 	tnz	(0x05, sp)
      000F8B 26 0E            [ 1] 2924 	jrne	00136$
      000F8D 88               [ 1] 2925 	push	a
      000F8E 4B 2F            [ 1] 2926 	push	#0x2f
      000F90 4B 06            [ 1] 2927 	push	#0x06
      000F92 5F               [ 1] 2928 	clrw	x
      000F93 89               [ 2] 2929 	pushw	x
      000F94 AEr00r00         [ 2] 2930 	ldw	x, #(___str_0+0)
      000F97 CDr00r00         [ 4] 2931 	call	_assert_failed
      000F9A 84               [ 1] 2932 	pop	a
      000F9B                       2933 00136$:
                                   2934 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1585: if (TIM1_Channel == TIM1_CHANNEL_1)
      000F9B 4D               [ 1] 2935 	tnz	a
      000F9C 26 15            [ 1] 2936 	jrne	00120$
                                   2937 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1590: TIM1->CCER1 |= TIM1_CCER1_CC1E;
      000F9E C6 52 5C         [ 1] 2938 	ld	a, 0x525c
                                   2939 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1588: if (NewState != DISABLE)
      000FA1 0D 05            [ 1] 2940 	tnz	(0x05, sp)
      000FA3 27 07            [ 1] 2941 	jreq	00102$
                                   2942 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1590: TIM1->CCER1 |= TIM1_CCER1_CC1E;
      000FA5 AA 01            [ 1] 2943 	or	a, #0x01
      000FA7 C7 52 5C         [ 1] 2944 	ld	0x525c, a
      000FAA 20 4E            [ 2] 2945 	jra	00122$
      000FAC                       2946 00102$:
                                   2947 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1594: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      000FAC A4 FE            [ 1] 2948 	and	a, #0xfe
      000FAE C7 52 5C         [ 1] 2949 	ld	0x525c, a
      000FB1 20 47            [ 2] 2950 	jra	00122$
      000FB3                       2951 00120$:
                                   2952 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1598: else if (TIM1_Channel == TIM1_CHANNEL_2)
      000FB3 7B 01            [ 1] 2953 	ld	a, (0x01, sp)
      000FB5 27 15            [ 1] 2954 	jreq	00117$
                                   2955 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1590: TIM1->CCER1 |= TIM1_CCER1_CC1E;
      000FB7 C6 52 5C         [ 1] 2956 	ld	a, 0x525c
                                   2957 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1601: if (NewState != DISABLE)
      000FBA 0D 05            [ 1] 2958 	tnz	(0x05, sp)
      000FBC 27 07            [ 1] 2959 	jreq	00105$
                                   2960 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1603: TIM1->CCER1 |= TIM1_CCER1_CC2E;
      000FBE AA 10            [ 1] 2961 	or	a, #0x10
      000FC0 C7 52 5C         [ 1] 2962 	ld	0x525c, a
      000FC3 20 35            [ 2] 2963 	jra	00122$
      000FC5                       2964 00105$:
                                   2965 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1607: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2E);
      000FC5 A4 EF            [ 1] 2966 	and	a, #0xef
      000FC7 C7 52 5C         [ 1] 2967 	ld	0x525c, a
      000FCA 20 2E            [ 2] 2968 	jra	00122$
      000FCC                       2969 00117$:
                                   2970 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1615: TIM1->CCER2 |= TIM1_CCER2_CC3E;
      000FCC C6 52 5D         [ 1] 2971 	ld	a, 0x525d
                                   2972 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1610: else if (TIM1_Channel == TIM1_CHANNEL_3)
      000FCF 41               [ 1] 2973 	exg	a, xl
      000FD0 7B 02            [ 1] 2974 	ld	a, (0x02, sp)
      000FD2 41               [ 1] 2975 	exg	a, xl
      000FD3 41               [ 1] 2976 	exg	a, xl
      000FD4 4D               [ 1] 2977 	tnz	a
      000FD5 41               [ 1] 2978 	exg	a, xl
      000FD6 27 12            [ 1] 2979 	jreq	00114$
                                   2980 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1613: if (NewState != DISABLE)
      000FD8 0D 05            [ 1] 2981 	tnz	(0x05, sp)
      000FDA 27 07            [ 1] 2982 	jreq	00108$
                                   2983 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1615: TIM1->CCER2 |= TIM1_CCER2_CC3E;
      000FDC AA 01            [ 1] 2984 	or	a, #0x01
      000FDE C7 52 5D         [ 1] 2985 	ld	0x525d, a
      000FE1 20 17            [ 2] 2986 	jra	00122$
      000FE3                       2987 00108$:
                                   2988 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1619: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3E);
      000FE3 A4 FE            [ 1] 2989 	and	a, #0xfe
      000FE5 C7 52 5D         [ 1] 2990 	ld	0x525d, a
      000FE8 20 10            [ 2] 2991 	jra	00122$
      000FEA                       2992 00114$:
                                   2993 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1625: if (NewState != DISABLE)
      000FEA 0D 05            [ 1] 2994 	tnz	(0x05, sp)
      000FEC 27 07            [ 1] 2995 	jreq	00111$
                                   2996 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1627: TIM1->CCER2 |= TIM1_CCER2_CC4E;
      000FEE AA 10            [ 1] 2997 	or	a, #0x10
      000FF0 C7 52 5D         [ 1] 2998 	ld	0x525d, a
      000FF3 20 05            [ 2] 2999 	jra	00122$
      000FF5                       3000 00111$:
                                   3001 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1631: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4E);
      000FF5 A4 EF            [ 1] 3002 	and	a, #0xef
      000FF7 C7 52 5D         [ 1] 3003 	ld	0x525d, a
      000FFA                       3004 00122$:
                                   3005 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1634: }
      000FFA 85               [ 2] 3006 	popw	x
      000FFB 85               [ 2] 3007 	popw	x
      000FFC 84               [ 1] 3008 	pop	a
      000FFD FC               [ 2] 3009 	jp	(x)
                                   3010 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1647: void TIM1_CCxNCmd(TIM1_Channel_TypeDef TIM1_Channel, FunctionalState NewState)
                                   3011 ;	-----------------------------------------
                                   3012 ;	 function TIM1_CCxNCmd
                                   3013 ;	-----------------------------------------
      000FFE                       3014 _TIM1_CCxNCmd:
      000FFE 88               [ 1] 3015 	push	a
                                   3016 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1650: assert_param(IS_TIM1_COMPLEMENTARY_CHANNEL_OK(TIM1_Channel));
      000FFF A1 01            [ 1] 3017 	cp	a, #0x01
      001001 26 07            [ 1] 3018 	jrne	00202$
      001003 88               [ 1] 3019 	push	a
      001004 A6 01            [ 1] 3020 	ld	a, #0x01
      001006 6B 02            [ 1] 3021 	ld	(0x02, sp), a
      001008 84               [ 1] 3022 	pop	a
      001009 C5                    3023 	.byte 0xc5
      00100A                       3024 00202$:
      00100A 0F 01            [ 1] 3025 	clr	(0x01, sp)
      00100C                       3026 00203$:
      00100C 4D               [ 1] 3027 	tnz	a
      00100D 27 16            [ 1] 3028 	jreq	00119$
      00100F 0D 01            [ 1] 3029 	tnz	(0x01, sp)
      001011 26 12            [ 1] 3030 	jrne	00119$
      001013 A1 02            [ 1] 3031 	cp	a, #0x02
      001015 27 0E            [ 1] 3032 	jreq	00119$
      001017 88               [ 1] 3033 	push	a
      001018 4B 72            [ 1] 3034 	push	#0x72
      00101A 4B 06            [ 1] 3035 	push	#0x06
      00101C 5F               [ 1] 3036 	clrw	x
      00101D 89               [ 2] 3037 	pushw	x
      00101E AEr00r00         [ 2] 3038 	ldw	x, #(___str_0+0)
      001021 CDr00r00         [ 4] 3039 	call	_assert_failed
      001024 84               [ 1] 3040 	pop	a
      001025                       3041 00119$:
                                   3042 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1651: assert_param(IS_FUNCTIONALSTATE_OK(NewState));
      001025 0D 04            [ 1] 3043 	tnz	(0x04, sp)
      001027 27 12            [ 1] 3044 	jreq	00127$
      001029 0D 04            [ 1] 3045 	tnz	(0x04, sp)
      00102B 26 0E            [ 1] 3046 	jrne	00127$
      00102D 88               [ 1] 3047 	push	a
      00102E 4B 73            [ 1] 3048 	push	#0x73
      001030 4B 06            [ 1] 3049 	push	#0x06
      001032 5F               [ 1] 3050 	clrw	x
      001033 89               [ 2] 3051 	pushw	x
      001034 AEr00r00         [ 2] 3052 	ldw	x, #(___str_0+0)
      001037 CDr00r00         [ 4] 3053 	call	_assert_failed
      00103A 84               [ 1] 3054 	pop	a
      00103B                       3055 00127$:
                                   3056 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1653: if (TIM1_Channel == TIM1_CHANNEL_1)
      00103B 4D               [ 1] 3057 	tnz	a
      00103C 26 15            [ 1] 3058 	jrne	00114$
                                   3059 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1658: TIM1->CCER1 |= TIM1_CCER1_CC1NE;
      00103E C6 52 5C         [ 1] 3060 	ld	a, 0x525c
                                   3061 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1656: if (NewState != DISABLE)
      001041 0D 04            [ 1] 3062 	tnz	(0x04, sp)
      001043 27 07            [ 1] 3063 	jreq	00102$
                                   3064 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1658: TIM1->CCER1 |= TIM1_CCER1_CC1NE;
      001045 AA 04            [ 1] 3065 	or	a, #0x04
      001047 C7 52 5C         [ 1] 3066 	ld	0x525c, a
      00104A 20 33            [ 2] 3067 	jra	00116$
      00104C                       3068 00102$:
                                   3069 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1662: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1NE);
      00104C A4 FB            [ 1] 3070 	and	a, #0xfb
      00104E C7 52 5C         [ 1] 3071 	ld	0x525c, a
      001051 20 2C            [ 2] 3072 	jra	00116$
      001053                       3073 00114$:
                                   3074 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1665: else if (TIM1_Channel == TIM1_CHANNEL_2)
      001053 7B 01            [ 1] 3075 	ld	a, (0x01, sp)
      001055 27 15            [ 1] 3076 	jreq	00111$
                                   3077 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1658: TIM1->CCER1 |= TIM1_CCER1_CC1NE;
      001057 C6 52 5C         [ 1] 3078 	ld	a, 0x525c
                                   3079 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1668: if (NewState != DISABLE)
      00105A 0D 04            [ 1] 3080 	tnz	(0x04, sp)
      00105C 27 07            [ 1] 3081 	jreq	00105$
                                   3082 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1670: TIM1->CCER1 |= TIM1_CCER1_CC2NE;
      00105E AA 40            [ 1] 3083 	or	a, #0x40
      001060 C7 52 5C         [ 1] 3084 	ld	0x525c, a
      001063 20 1A            [ 2] 3085 	jra	00116$
      001065                       3086 00105$:
                                   3087 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1674: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2NE);
      001065 A4 BF            [ 1] 3088 	and	a, #0xbf
      001067 C7 52 5C         [ 1] 3089 	ld	0x525c, a
      00106A 20 13            [ 2] 3090 	jra	00116$
      00106C                       3091 00111$:
                                   3092 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1682: TIM1->CCER2 |= TIM1_CCER2_CC3NE;
      00106C C6 52 5D         [ 1] 3093 	ld	a, 0x525d
                                   3094 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1680: if (NewState != DISABLE)
      00106F 0D 04            [ 1] 3095 	tnz	(0x04, sp)
      001071 27 07            [ 1] 3096 	jreq	00108$
                                   3097 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1682: TIM1->CCER2 |= TIM1_CCER2_CC3NE;
      001073 AA 04            [ 1] 3098 	or	a, #0x04
      001075 C7 52 5D         [ 1] 3099 	ld	0x525d, a
      001078 20 05            [ 2] 3100 	jra	00116$
      00107A                       3101 00108$:
                                   3102 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1686: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3NE);
      00107A A4 FB            [ 1] 3103 	and	a, #0xfb
      00107C C7 52 5D         [ 1] 3104 	ld	0x525d, a
      00107F                       3105 00116$:
                                   3106 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1689: }
      00107F 84               [ 1] 3107 	pop	a
      001080 85               [ 2] 3108 	popw	x
      001081 84               [ 1] 3109 	pop	a
      001082 FC               [ 2] 3110 	jp	(x)
                                   3111 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1712: void TIM1_SelectOCxM(TIM1_Channel_TypeDef TIM1_Channel, TIM1_OCMode_TypeDef TIM1_OCMode)
                                   3112 ;	-----------------------------------------
                                   3113 ;	 function TIM1_SelectOCxM
                                   3114 ;	-----------------------------------------
      001083                       3115 _TIM1_SelectOCxM:
      001083 52 03            [ 2] 3116 	sub	sp, #3
                                   3117 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1715: assert_param(IS_TIM1_CHANNEL_OK(TIM1_Channel));
      001085 6B 03            [ 1] 3118 	ld	(0x03, sp), a
      001087 4A               [ 1] 3119 	dec	a
      001088 26 05            [ 1] 3120 	jrne	00252$
      00108A A6 01            [ 1] 3121 	ld	a, #0x01
      00108C 6B 01            [ 1] 3122 	ld	(0x01, sp), a
      00108E C5                    3123 	.byte 0xc5
      00108F                       3124 00252$:
      00108F 0F 01            [ 1] 3125 	clr	(0x01, sp)
      001091                       3126 00253$:
      001091 7B 03            [ 1] 3127 	ld	a, (0x03, sp)
      001093 A0 02            [ 1] 3128 	sub	a, #0x02
      001095 26 04            [ 1] 3129 	jrne	00255$
      001097 4C               [ 1] 3130 	inc	a
      001098 6B 02            [ 1] 3131 	ld	(0x02, sp), a
      00109A C5                    3132 	.byte 0xc5
      00109B                       3133 00255$:
      00109B 0F 02            [ 1] 3134 	clr	(0x02, sp)
      00109D                       3135 00256$:
      00109D 0D 03            [ 1] 3136 	tnz	(0x03, sp)
      00109F 27 1A            [ 1] 3137 	jreq	00113$
      0010A1 0D 01            [ 1] 3138 	tnz	(0x01, sp)
      0010A3 26 16            [ 1] 3139 	jrne	00113$
      0010A5 0D 02            [ 1] 3140 	tnz	(0x02, sp)
      0010A7 26 12            [ 1] 3141 	jrne	00113$
      0010A9 7B 03            [ 1] 3142 	ld	a, (0x03, sp)
      0010AB A1 03            [ 1] 3143 	cp	a, #0x03
      0010AD 27 0C            [ 1] 3144 	jreq	00113$
      0010AF 4B B3            [ 1] 3145 	push	#0xb3
      0010B1 4B 06            [ 1] 3146 	push	#0x06
      0010B3 5F               [ 1] 3147 	clrw	x
      0010B4 89               [ 2] 3148 	pushw	x
      0010B5 AEr00r00         [ 2] 3149 	ldw	x, #(___str_0+0)
      0010B8 CDr00r00         [ 4] 3150 	call	_assert_failed
      0010BB                       3151 00113$:
                                   3152 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1716: assert_param(IS_TIM1_OCM_OK(TIM1_OCMode));
      0010BB 0D 06            [ 1] 3153 	tnz	(0x06, sp)
      0010BD 27 36            [ 1] 3154 	jreq	00124$
      0010BF 7B 06            [ 1] 3155 	ld	a, (0x06, sp)
      0010C1 A1 10            [ 1] 3156 	cp	a, #0x10
      0010C3 27 30            [ 1] 3157 	jreq	00124$
      0010C5 7B 06            [ 1] 3158 	ld	a, (0x06, sp)
      0010C7 A1 20            [ 1] 3159 	cp	a, #0x20
      0010C9 27 2A            [ 1] 3160 	jreq	00124$
      0010CB 7B 06            [ 1] 3161 	ld	a, (0x06, sp)
      0010CD A1 30            [ 1] 3162 	cp	a, #0x30
      0010CF 27 24            [ 1] 3163 	jreq	00124$
      0010D1 7B 06            [ 1] 3164 	ld	a, (0x06, sp)
      0010D3 A1 60            [ 1] 3165 	cp	a, #0x60
      0010D5 27 1E            [ 1] 3166 	jreq	00124$
      0010D7 7B 06            [ 1] 3167 	ld	a, (0x06, sp)
      0010D9 A1 70            [ 1] 3168 	cp	a, #0x70
      0010DB 27 18            [ 1] 3169 	jreq	00124$
      0010DD 7B 06            [ 1] 3170 	ld	a, (0x06, sp)
      0010DF A1 50            [ 1] 3171 	cp	a, #0x50
      0010E1 27 12            [ 1] 3172 	jreq	00124$
      0010E3 7B 06            [ 1] 3173 	ld	a, (0x06, sp)
      0010E5 A1 40            [ 1] 3174 	cp	a, #0x40
      0010E7 27 0C            [ 1] 3175 	jreq	00124$
      0010E9 4B B4            [ 1] 3176 	push	#0xb4
      0010EB 4B 06            [ 1] 3177 	push	#0x06
      0010ED 5F               [ 1] 3178 	clrw	x
      0010EE 89               [ 2] 3179 	pushw	x
      0010EF AEr00r00         [ 2] 3180 	ldw	x, #(___str_0+0)
      0010F2 CDr00r00         [ 4] 3181 	call	_assert_failed
      0010F5                       3182 00124$:
                                   3183 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1718: if (TIM1_Channel == TIM1_CHANNEL_1)
      0010F5 0D 03            [ 1] 3184 	tnz	(0x03, sp)
      0010F7 26 10            [ 1] 3185 	jrne	00108$
                                   3186 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1721: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      0010F9 72 11 52 5C      [ 1] 3187 	bres	0x525c, #0
                                   3188 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1724: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_OCM)) 
      0010FD C6 52 58         [ 1] 3189 	ld	a, 0x5258
      001100 A4 8F            [ 1] 3190 	and	a, #0x8f
                                   3191 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1725: | (uint8_t)TIM1_OCMode);
      001102 1A 06            [ 1] 3192 	or	a, (0x06, sp)
      001104 C7 52 58         [ 1] 3193 	ld	0x5258, a
      001107 20 3E            [ 2] 3194 	jra	00110$
      001109                       3195 00108$:
                                   3196 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1727: else if (TIM1_Channel == TIM1_CHANNEL_2)
      001109 7B 01            [ 1] 3197 	ld	a, (0x01, sp)
      00110B 27 10            [ 1] 3198 	jreq	00105$
                                   3199 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1730: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2E);
      00110D 72 19 52 5C      [ 1] 3200 	bres	0x525c, #4
                                   3201 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1733: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_OCM))
      001111 C6 52 59         [ 1] 3202 	ld	a, 0x5259
      001114 A4 8F            [ 1] 3203 	and	a, #0x8f
                                   3204 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1734: | (uint8_t)TIM1_OCMode);
      001116 1A 06            [ 1] 3205 	or	a, (0x06, sp)
      001118 C7 52 59         [ 1] 3206 	ld	0x5259, a
      00111B 20 2A            [ 2] 3207 	jra	00110$
      00111D                       3208 00105$:
                                   3209 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1739: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3E);
      00111D C6 52 5D         [ 1] 3210 	ld	a, 0x525d
      001120 97               [ 1] 3211 	ld	xl, a
                                   3212 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1736: else if (TIM1_Channel == TIM1_CHANNEL_3)
      001121 7B 02            [ 1] 3213 	ld	a, (0x02, sp)
      001123 27 12            [ 1] 3214 	jreq	00102$
                                   3215 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1739: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3E);
      001125 9F               [ 1] 3216 	ld	a, xl
      001126 A4 FE            [ 1] 3217 	and	a, #0xfe
      001128 C7 52 5D         [ 1] 3218 	ld	0x525d, a
                                   3219 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1742: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_OCM)) 
      00112B C6 52 5A         [ 1] 3220 	ld	a, 0x525a
      00112E A4 8F            [ 1] 3221 	and	a, #0x8f
                                   3222 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1743: | (uint8_t)TIM1_OCMode);
      001130 1A 06            [ 1] 3223 	or	a, (0x06, sp)
      001132 C7 52 5A         [ 1] 3224 	ld	0x525a, a
      001135 20 10            [ 2] 3225 	jra	00110$
      001137                       3226 00102$:
                                   3227 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1748: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4E);
      001137 9F               [ 1] 3228 	ld	a, xl
      001138 A4 EF            [ 1] 3229 	and	a, #0xef
      00113A C7 52 5D         [ 1] 3230 	ld	0x525d, a
                                   3231 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1751: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_OCM)) 
      00113D C6 52 5B         [ 1] 3232 	ld	a, 0x525b
      001140 A4 8F            [ 1] 3233 	and	a, #0x8f
                                   3234 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1752: | (uint8_t)TIM1_OCMode);
      001142 1A 06            [ 1] 3235 	or	a, (0x06, sp)
      001144 C7 52 5B         [ 1] 3236 	ld	0x525b, a
      001147                       3237 00110$:
                                   3238 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1754: }
      001147 5B 03            [ 2] 3239 	addw	sp, #3
      001149 85               [ 2] 3240 	popw	x
      00114A 84               [ 1] 3241 	pop	a
      00114B FC               [ 2] 3242 	jp	(x)
                                   3243 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1762: void TIM1_SetCounter(uint16_t Counter)
                                   3244 ;	-----------------------------------------
                                   3245 ;	 function TIM1_SetCounter
                                   3246 ;	-----------------------------------------
      00114C                       3247 _TIM1_SetCounter:
                                   3248 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1765: TIM1->CNTRH = (uint8_t)(Counter >> 8);
      00114C 9E               [ 1] 3249 	ld	a, xh
      00114D C7 52 5E         [ 1] 3250 	ld	0x525e, a
                                   3251 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1766: TIM1->CNTRL = (uint8_t)(Counter);
      001150 9F               [ 1] 3252 	ld	a, xl
      001151 C7 52 5F         [ 1] 3253 	ld	0x525f, a
                                   3254 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1767: }
      001154 81               [ 4] 3255 	ret
                                   3256 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1775: void TIM1_SetAutoreload(uint16_t Autoreload)
                                   3257 ;	-----------------------------------------
                                   3258 ;	 function TIM1_SetAutoreload
                                   3259 ;	-----------------------------------------
      001155                       3260 _TIM1_SetAutoreload:
                                   3261 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1778: TIM1->ARRH = (uint8_t)(Autoreload >> 8);
      001155 9E               [ 1] 3262 	ld	a, xh
      001156 C7 52 62         [ 1] 3263 	ld	0x5262, a
                                   3264 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1779: TIM1->ARRL = (uint8_t)(Autoreload);
      001159 9F               [ 1] 3265 	ld	a, xl
      00115A C7 52 63         [ 1] 3266 	ld	0x5263, a
                                   3267 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1780: }
      00115D 81               [ 4] 3268 	ret
                                   3269 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1788: void TIM1_SetCompare1(uint16_t Compare1)
                                   3270 ;	-----------------------------------------
                                   3271 ;	 function TIM1_SetCompare1
                                   3272 ;	-----------------------------------------
      00115E                       3273 _TIM1_SetCompare1:
                                   3274 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1791: TIM1->CCR1H = (uint8_t)(Compare1 >> 8);
      00115E 9E               [ 1] 3275 	ld	a, xh
      00115F C7 52 65         [ 1] 3276 	ld	0x5265, a
                                   3277 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1792: TIM1->CCR1L = (uint8_t)(Compare1);
      001162 9F               [ 1] 3278 	ld	a, xl
      001163 C7 52 66         [ 1] 3279 	ld	0x5266, a
                                   3280 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1793: }
      001166 81               [ 4] 3281 	ret
                                   3282 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1801: void TIM1_SetCompare2(uint16_t Compare2)
                                   3283 ;	-----------------------------------------
                                   3284 ;	 function TIM1_SetCompare2
                                   3285 ;	-----------------------------------------
      001167                       3286 _TIM1_SetCompare2:
                                   3287 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1804: TIM1->CCR2H = (uint8_t)(Compare2 >> 8);
      001167 9E               [ 1] 3288 	ld	a, xh
      001168 C7 52 67         [ 1] 3289 	ld	0x5267, a
                                   3290 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1805: TIM1->CCR2L = (uint8_t)(Compare2);
      00116B 9F               [ 1] 3291 	ld	a, xl
      00116C C7 52 68         [ 1] 3292 	ld	0x5268, a
                                   3293 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1806: }
      00116F 81               [ 4] 3294 	ret
                                   3295 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1814: void TIM1_SetCompare3(uint16_t Compare3)
                                   3296 ;	-----------------------------------------
                                   3297 ;	 function TIM1_SetCompare3
                                   3298 ;	-----------------------------------------
      001170                       3299 _TIM1_SetCompare3:
                                   3300 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1817: TIM1->CCR3H = (uint8_t)(Compare3 >> 8);
      001170 9E               [ 1] 3301 	ld	a, xh
      001171 C7 52 69         [ 1] 3302 	ld	0x5269, a
                                   3303 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1818: TIM1->CCR3L = (uint8_t)(Compare3);
      001174 9F               [ 1] 3304 	ld	a, xl
      001175 C7 52 6A         [ 1] 3305 	ld	0x526a, a
                                   3306 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1819: }
      001178 81               [ 4] 3307 	ret
                                   3308 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1827: void TIM1_SetCompare4(uint16_t Compare4)
                                   3309 ;	-----------------------------------------
                                   3310 ;	 function TIM1_SetCompare4
                                   3311 ;	-----------------------------------------
      001179                       3312 _TIM1_SetCompare4:
                                   3313 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1830: TIM1->CCR4H = (uint8_t)(Compare4 >> 8);
      001179 9E               [ 1] 3314 	ld	a, xh
      00117A C7 52 6B         [ 1] 3315 	ld	0x526b, a
                                   3316 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1831: TIM1->CCR4L = (uint8_t)(Compare4);
      00117D 9F               [ 1] 3317 	ld	a, xl
      00117E C7 52 6C         [ 1] 3318 	ld	0x526c, a
                                   3319 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1832: }
      001181 81               [ 4] 3320 	ret
                                   3321 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1844: void TIM1_SetIC1Prescaler(TIM1_ICPSC_TypeDef TIM1_IC1Prescaler)
                                   3322 ;	-----------------------------------------
                                   3323 ;	 function TIM1_SetIC1Prescaler
                                   3324 ;	-----------------------------------------
      001182                       3325 _TIM1_SetIC1Prescaler:
      001182 88               [ 1] 3326 	push	a
                                   3327 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1847: assert_param(IS_TIM1_IC_PRESCALER_OK(TIM1_IC1Prescaler));
      001183 6B 01            [ 1] 3328 	ld	(0x01, sp), a
      001185 27 1E            [ 1] 3329 	jreq	00104$
      001187 7B 01            [ 1] 3330 	ld	a, (0x01, sp)
      001189 A1 04            [ 1] 3331 	cp	a, #0x04
      00118B 27 18            [ 1] 3332 	jreq	00104$
      00118D 7B 01            [ 1] 3333 	ld	a, (0x01, sp)
      00118F A1 08            [ 1] 3334 	cp	a, #0x08
      001191 27 12            [ 1] 3335 	jreq	00104$
      001193 7B 01            [ 1] 3336 	ld	a, (0x01, sp)
      001195 A1 0C            [ 1] 3337 	cp	a, #0x0c
      001197 27 0C            [ 1] 3338 	jreq	00104$
      001199 4B 37            [ 1] 3339 	push	#0x37
      00119B 4B 07            [ 1] 3340 	push	#0x07
      00119D 5F               [ 1] 3341 	clrw	x
      00119E 89               [ 2] 3342 	pushw	x
      00119F AEr00r00         [ 2] 3343 	ldw	x, #(___str_0+0)
      0011A2 CDr00r00         [ 4] 3344 	call	_assert_failed
      0011A5                       3345 00104$:
                                   3346 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1850: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~TIM1_CCMR_ICxPSC)) 
      0011A5 C6 52 58         [ 1] 3347 	ld	a, 0x5258
      0011A8 A4 F3            [ 1] 3348 	and	a, #0xf3
                                   3349 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1851: | (uint8_t)TIM1_IC1Prescaler);
      0011AA 1A 01            [ 1] 3350 	or	a, (0x01, sp)
      0011AC C7 52 58         [ 1] 3351 	ld	0x5258, a
                                   3352 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1852: }
      0011AF 84               [ 1] 3353 	pop	a
      0011B0 81               [ 4] 3354 	ret
                                   3355 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1864: void TIM1_SetIC2Prescaler(TIM1_ICPSC_TypeDef TIM1_IC2Prescaler)
                                   3356 ;	-----------------------------------------
                                   3357 ;	 function TIM1_SetIC2Prescaler
                                   3358 ;	-----------------------------------------
      0011B1                       3359 _TIM1_SetIC2Prescaler:
      0011B1 88               [ 1] 3360 	push	a
                                   3361 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1868: assert_param(IS_TIM1_IC_PRESCALER_OK(TIM1_IC2Prescaler));
      0011B2 6B 01            [ 1] 3362 	ld	(0x01, sp), a
      0011B4 27 1E            [ 1] 3363 	jreq	00104$
      0011B6 7B 01            [ 1] 3364 	ld	a, (0x01, sp)
      0011B8 A1 04            [ 1] 3365 	cp	a, #0x04
      0011BA 27 18            [ 1] 3366 	jreq	00104$
      0011BC 7B 01            [ 1] 3367 	ld	a, (0x01, sp)
      0011BE A1 08            [ 1] 3368 	cp	a, #0x08
      0011C0 27 12            [ 1] 3369 	jreq	00104$
      0011C2 7B 01            [ 1] 3370 	ld	a, (0x01, sp)
      0011C4 A1 0C            [ 1] 3371 	cp	a, #0x0c
      0011C6 27 0C            [ 1] 3372 	jreq	00104$
      0011C8 4B 4C            [ 1] 3373 	push	#0x4c
      0011CA 4B 07            [ 1] 3374 	push	#0x07
      0011CC 5F               [ 1] 3375 	clrw	x
      0011CD 89               [ 2] 3376 	pushw	x
      0011CE AEr00r00         [ 2] 3377 	ldw	x, #(___str_0+0)
      0011D1 CDr00r00         [ 4] 3378 	call	_assert_failed
      0011D4                       3379 00104$:
                                   3380 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1871: TIM1->CCMR2 = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~TIM1_CCMR_ICxPSC))
      0011D4 C6 52 59         [ 1] 3381 	ld	a, 0x5259
      0011D7 A4 F3            [ 1] 3382 	and	a, #0xf3
                                   3383 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1872: | (uint8_t)TIM1_IC2Prescaler);
      0011D9 1A 01            [ 1] 3384 	or	a, (0x01, sp)
      0011DB C7 52 59         [ 1] 3385 	ld	0x5259, a
                                   3386 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1873: }
      0011DE 84               [ 1] 3387 	pop	a
      0011DF 81               [ 4] 3388 	ret
                                   3389 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1885: void TIM1_SetIC3Prescaler(TIM1_ICPSC_TypeDef TIM1_IC3Prescaler)
                                   3390 ;	-----------------------------------------
                                   3391 ;	 function TIM1_SetIC3Prescaler
                                   3392 ;	-----------------------------------------
      0011E0                       3393 _TIM1_SetIC3Prescaler:
      0011E0 88               [ 1] 3394 	push	a
                                   3395 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1889: assert_param(IS_TIM1_IC_PRESCALER_OK(TIM1_IC3Prescaler));
      0011E1 6B 01            [ 1] 3396 	ld	(0x01, sp), a
      0011E3 27 1E            [ 1] 3397 	jreq	00104$
      0011E5 7B 01            [ 1] 3398 	ld	a, (0x01, sp)
      0011E7 A1 04            [ 1] 3399 	cp	a, #0x04
      0011E9 27 18            [ 1] 3400 	jreq	00104$
      0011EB 7B 01            [ 1] 3401 	ld	a, (0x01, sp)
      0011ED A1 08            [ 1] 3402 	cp	a, #0x08
      0011EF 27 12            [ 1] 3403 	jreq	00104$
      0011F1 7B 01            [ 1] 3404 	ld	a, (0x01, sp)
      0011F3 A1 0C            [ 1] 3405 	cp	a, #0x0c
      0011F5 27 0C            [ 1] 3406 	jreq	00104$
      0011F7 4B 61            [ 1] 3407 	push	#0x61
      0011F9 4B 07            [ 1] 3408 	push	#0x07
      0011FB 5F               [ 1] 3409 	clrw	x
      0011FC 89               [ 2] 3410 	pushw	x
      0011FD AEr00r00         [ 2] 3411 	ldw	x, #(___str_0+0)
      001200 CDr00r00         [ 4] 3412 	call	_assert_failed
      001203                       3413 00104$:
                                   3414 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1892: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~TIM1_CCMR_ICxPSC)) | 
      001203 C6 52 5A         [ 1] 3415 	ld	a, 0x525a
      001206 A4 F3            [ 1] 3416 	and	a, #0xf3
                                   3417 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1893: (uint8_t)TIM1_IC3Prescaler);
      001208 1A 01            [ 1] 3418 	or	a, (0x01, sp)
      00120A C7 52 5A         [ 1] 3419 	ld	0x525a, a
                                   3420 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1894: }
      00120D 84               [ 1] 3421 	pop	a
      00120E 81               [ 4] 3422 	ret
                                   3423 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1906: void TIM1_SetIC4Prescaler(TIM1_ICPSC_TypeDef TIM1_IC4Prescaler)
                                   3424 ;	-----------------------------------------
                                   3425 ;	 function TIM1_SetIC4Prescaler
                                   3426 ;	-----------------------------------------
      00120F                       3427 _TIM1_SetIC4Prescaler:
      00120F 88               [ 1] 3428 	push	a
                                   3429 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1910: assert_param(IS_TIM1_IC_PRESCALER_OK(TIM1_IC4Prescaler));
      001210 6B 01            [ 1] 3430 	ld	(0x01, sp), a
      001212 27 1E            [ 1] 3431 	jreq	00104$
      001214 7B 01            [ 1] 3432 	ld	a, (0x01, sp)
      001216 A1 04            [ 1] 3433 	cp	a, #0x04
      001218 27 18            [ 1] 3434 	jreq	00104$
      00121A 7B 01            [ 1] 3435 	ld	a, (0x01, sp)
      00121C A1 08            [ 1] 3436 	cp	a, #0x08
      00121E 27 12            [ 1] 3437 	jreq	00104$
      001220 7B 01            [ 1] 3438 	ld	a, (0x01, sp)
      001222 A1 0C            [ 1] 3439 	cp	a, #0x0c
      001224 27 0C            [ 1] 3440 	jreq	00104$
      001226 4B 76            [ 1] 3441 	push	#0x76
      001228 4B 07            [ 1] 3442 	push	#0x07
      00122A 5F               [ 1] 3443 	clrw	x
      00122B 89               [ 2] 3444 	pushw	x
      00122C AEr00r00         [ 2] 3445 	ldw	x, #(___str_0+0)
      00122F CDr00r00         [ 4] 3446 	call	_assert_failed
      001232                       3447 00104$:
                                   3448 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1913: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~TIM1_CCMR_ICxPSC)) |
      001232 C6 52 5B         [ 1] 3449 	ld	a, 0x525b
      001235 A4 F3            [ 1] 3450 	and	a, #0xf3
                                   3451 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1914: (uint8_t)TIM1_IC4Prescaler);
      001237 1A 01            [ 1] 3452 	or	a, (0x01, sp)
      001239 C7 52 5B         [ 1] 3453 	ld	0x525b, a
                                   3454 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1915: }
      00123C 84               [ 1] 3455 	pop	a
      00123D 81               [ 4] 3456 	ret
                                   3457 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1922: uint16_t TIM1_GetCapture1(void)
                                   3458 ;	-----------------------------------------
                                   3459 ;	 function TIM1_GetCapture1
                                   3460 ;	-----------------------------------------
      00123E                       3461 _TIM1_GetCapture1:
      00123E 89               [ 2] 3462 	pushw	x
                                   3463 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1929: tmpccr1h = TIM1->CCR1H;
      00123F C6 52 65         [ 1] 3464 	ld	a, 0x5265
      001242 95               [ 1] 3465 	ld	xh, a
                                   3466 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1930: tmpccr1l = TIM1->CCR1L;
      001243 C6 52 66         [ 1] 3467 	ld	a, 0x5266
                                   3468 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1932: tmpccr1 = (uint16_t)(tmpccr1l);
      001246 97               [ 1] 3469 	ld	xl, a
                                   3470 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1933: tmpccr1 |= (uint16_t)((uint16_t)tmpccr1h << 8);
      001247 0F 02            [ 1] 3471 	clr	(0x02, sp)
                                   3472 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1935: return (uint16_t)tmpccr1;
                                   3473 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1936: }
      001249 5B 02            [ 2] 3474 	addw	sp, #2
      00124B 81               [ 4] 3475 	ret
                                   3476 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1943: uint16_t TIM1_GetCapture2(void)
                                   3477 ;	-----------------------------------------
                                   3478 ;	 function TIM1_GetCapture2
                                   3479 ;	-----------------------------------------
      00124C                       3480 _TIM1_GetCapture2:
      00124C 89               [ 2] 3481 	pushw	x
                                   3482 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1950: tmpccr2h = TIM1->CCR2H;
      00124D C6 52 67         [ 1] 3483 	ld	a, 0x5267
      001250 95               [ 1] 3484 	ld	xh, a
                                   3485 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1951: tmpccr2l = TIM1->CCR2L;
      001251 C6 52 68         [ 1] 3486 	ld	a, 0x5268
                                   3487 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1953: tmpccr2 = (uint16_t)(tmpccr2l);
      001254 97               [ 1] 3488 	ld	xl, a
                                   3489 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1954: tmpccr2 |= (uint16_t)((uint16_t)tmpccr2h << 8);
      001255 0F 02            [ 1] 3490 	clr	(0x02, sp)
                                   3491 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1956: return (uint16_t)tmpccr2;
                                   3492 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1957: }
      001257 5B 02            [ 2] 3493 	addw	sp, #2
      001259 81               [ 4] 3494 	ret
                                   3495 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1964: uint16_t TIM1_GetCapture3(void)
                                   3496 ;	-----------------------------------------
                                   3497 ;	 function TIM1_GetCapture3
                                   3498 ;	-----------------------------------------
      00125A                       3499 _TIM1_GetCapture3:
      00125A 89               [ 2] 3500 	pushw	x
                                   3501 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1970: tmpccr3h = TIM1->CCR3H;
      00125B C6 52 69         [ 1] 3502 	ld	a, 0x5269
      00125E 95               [ 1] 3503 	ld	xh, a
                                   3504 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1971: tmpccr3l = TIM1->CCR3L;
      00125F C6 52 6A         [ 1] 3505 	ld	a, 0x526a
                                   3506 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1973: tmpccr3 = (uint16_t)(tmpccr3l);
      001262 97               [ 1] 3507 	ld	xl, a
                                   3508 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1974: tmpccr3 |= (uint16_t)((uint16_t)tmpccr3h << 8);
      001263 0F 02            [ 1] 3509 	clr	(0x02, sp)
                                   3510 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1976: return (uint16_t)tmpccr3;
                                   3511 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1977: }
      001265 5B 02            [ 2] 3512 	addw	sp, #2
      001267 81               [ 4] 3513 	ret
                                   3514 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1984: uint16_t TIM1_GetCapture4(void)
                                   3515 ;	-----------------------------------------
                                   3516 ;	 function TIM1_GetCapture4
                                   3517 ;	-----------------------------------------
      001268                       3518 _TIM1_GetCapture4:
      001268 89               [ 2] 3519 	pushw	x
                                   3520 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1990: tmpccr4h = TIM1->CCR4H;
      001269 C6 52 6B         [ 1] 3521 	ld	a, 0x526b
      00126C 95               [ 1] 3522 	ld	xh, a
                                   3523 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1991: tmpccr4l = TIM1->CCR4L;
      00126D C6 52 6C         [ 1] 3524 	ld	a, 0x526c
                                   3525 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1993: tmpccr4 = (uint16_t)(tmpccr4l);
      001270 97               [ 1] 3526 	ld	xl, a
                                   3527 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1994: tmpccr4 |= (uint16_t)((uint16_t)tmpccr4h << 8);
      001271 0F 02            [ 1] 3528 	clr	(0x02, sp)
                                   3529 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1996: return (uint16_t)tmpccr4;
                                   3530 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 1997: }
      001273 5B 02            [ 2] 3531 	addw	sp, #2
      001275 81               [ 4] 3532 	ret
                                   3533 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2004: uint16_t TIM1_GetCounter(void)
                                   3534 ;	-----------------------------------------
                                   3535 ;	 function TIM1_GetCounter
                                   3536 ;	-----------------------------------------
      001276                       3537 _TIM1_GetCounter:
      001276 89               [ 2] 3538 	pushw	x
                                   3539 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2008: tmpcntr = ((uint16_t)TIM1->CNTRH << 8);
      001277 C6 52 5E         [ 1] 3540 	ld	a, 0x525e
      00127A 95               [ 1] 3541 	ld	xh, a
      00127B 0F 02            [ 1] 3542 	clr	(0x02, sp)
                                   3543 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2011: return (uint16_t)(tmpcntr | (uint16_t)(TIM1->CNTRL));
      00127D C6 52 5F         [ 1] 3544 	ld	a, 0x525f
      001280 97               [ 1] 3545 	ld	xl, a
                                   3546 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2012: }
      001281 5B 02            [ 2] 3547 	addw	sp, #2
      001283 81               [ 4] 3548 	ret
                                   3549 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2019: uint16_t TIM1_GetPrescaler(void)
                                   3550 ;	-----------------------------------------
                                   3551 ;	 function TIM1_GetPrescaler
                                   3552 ;	-----------------------------------------
      001284                       3553 _TIM1_GetPrescaler:
      001284 89               [ 2] 3554 	pushw	x
                                   3555 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2023: temp = ((uint16_t)TIM1->PSCRH << 8);
      001285 C6 52 60         [ 1] 3556 	ld	a, 0x5260
      001288 95               [ 1] 3557 	ld	xh, a
      001289 0F 02            [ 1] 3558 	clr	(0x02, sp)
                                   3559 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2026: return (uint16_t)( temp | (uint16_t)(TIM1->PSCRL));
      00128B C6 52 61         [ 1] 3560 	ld	a, 0x5261
      00128E 97               [ 1] 3561 	ld	xl, a
                                   3562 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2027: }
      00128F 5B 02            [ 2] 3563 	addw	sp, #2
      001291 81               [ 4] 3564 	ret
                                   3565 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2047: FlagStatus TIM1_GetFlagStatus(TIM1_FLAG_TypeDef TIM1_FLAG)
                                   3566 ;	-----------------------------------------
                                   3567 ;	 function TIM1_GetFlagStatus
                                   3568 ;	-----------------------------------------
      001292                       3569 _TIM1_GetFlagStatus:
      001292 52 03            [ 2] 3570 	sub	sp, #3
                                   3571 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2053: assert_param(IS_TIM1_GET_FLAG_OK(TIM1_FLAG));
      001294 1F 02            [ 2] 3572 	ldw	(0x02, sp), x
      001296 A3 00 01         [ 2] 3573 	cpw	x, #0x0001
      001299 27 47            [ 1] 3574 	jreq	00107$
      00129B A3 00 02         [ 2] 3575 	cpw	x, #0x0002
      00129E 27 42            [ 1] 3576 	jreq	00107$
      0012A0 A3 00 04         [ 2] 3577 	cpw	x, #0x0004
      0012A3 27 3D            [ 1] 3578 	jreq	00107$
      0012A5 A3 00 08         [ 2] 3579 	cpw	x, #0x0008
      0012A8 27 38            [ 1] 3580 	jreq	00107$
      0012AA A3 00 10         [ 2] 3581 	cpw	x, #0x0010
      0012AD 27 33            [ 1] 3582 	jreq	00107$
      0012AF A3 00 20         [ 2] 3583 	cpw	x, #0x0020
      0012B2 27 2E            [ 1] 3584 	jreq	00107$
      0012B4 A3 00 40         [ 2] 3585 	cpw	x, #0x0040
      0012B7 27 29            [ 1] 3586 	jreq	00107$
      0012B9 A3 00 80         [ 2] 3587 	cpw	x, #0x0080
      0012BC 27 24            [ 1] 3588 	jreq	00107$
      0012BE A3 02 00         [ 2] 3589 	cpw	x, #0x0200
      0012C1 27 1F            [ 1] 3590 	jreq	00107$
      0012C3 A3 04 00         [ 2] 3591 	cpw	x, #0x0400
      0012C6 27 1A            [ 1] 3592 	jreq	00107$
      0012C8 A3 08 00         [ 2] 3593 	cpw	x, #0x0800
      0012CB 27 15            [ 1] 3594 	jreq	00107$
      0012CD A3 10 00         [ 2] 3595 	cpw	x, #0x1000
      0012D0 27 10            [ 1] 3596 	jreq	00107$
      0012D2 89               [ 2] 3597 	pushw	x
      0012D3 4B 05            [ 1] 3598 	push	#0x05
      0012D5 4B 08            [ 1] 3599 	push	#0x08
      0012D7 4B 00            [ 1] 3600 	push	#0x00
      0012D9 4B 00            [ 1] 3601 	push	#0x00
      0012DB AEr00r00         [ 2] 3602 	ldw	x, #(___str_0+0)
      0012DE CDr00r00         [ 4] 3603 	call	_assert_failed
      0012E1 85               [ 2] 3604 	popw	x
      0012E2                       3605 00107$:
                                   3606 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2055: tim1_flag_l = (uint8_t)(TIM1->SR1 & (uint8_t)TIM1_FLAG);
      0012E2 C6 52 55         [ 1] 3607 	ld	a, 0x5255
      0012E5 6B 01            [ 1] 3608 	ld	(0x01, sp), a
      0012E7 7B 03            [ 1] 3609 	ld	a, (0x03, sp)
      0012E9 14 01            [ 1] 3610 	and	a, (0x01, sp)
      0012EB 6B 01            [ 1] 3611 	ld	(0x01, sp), a
                                   3612 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2056: tim1_flag_h = (uint8_t)((uint16_t)TIM1_FLAG >> 8);
                                   3613 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2058: if ((tim1_flag_l | (uint8_t)(TIM1->SR2 & tim1_flag_h)) != 0)
      0012ED C6 52 56         [ 1] 3614 	ld	a, 0x5256
      0012F0 89               [ 2] 3615 	pushw	x
      0012F1 14 01            [ 1] 3616 	and	a, (1, sp)
      0012F3 85               [ 2] 3617 	popw	x
      0012F4 1A 01            [ 1] 3618 	or	a, (0x01, sp)
      0012F6 27 03            [ 1] 3619 	jreq	00102$
                                   3620 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2060: bitstatus = SET;
      0012F8 A6 01            [ 1] 3621 	ld	a, #0x01
                                   3622 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2064: bitstatus = RESET;
      0012FA 21                    3623 	.byte 0x21
      0012FB                       3624 00102$:
      0012FB 4F               [ 1] 3625 	clr	a
      0012FC                       3626 00103$:
                                   3627 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2066: return (FlagStatus)(bitstatus);
                                   3628 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2067: }
      0012FC 5B 03            [ 2] 3629 	addw	sp, #3
      0012FE 81               [ 4] 3630 	ret
                                   3631 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2087: void TIM1_ClearFlag(TIM1_FLAG_TypeDef TIM1_FLAG)
                                   3632 ;	-----------------------------------------
                                   3633 ;	 function TIM1_ClearFlag
                                   3634 ;	-----------------------------------------
      0012FF                       3635 _TIM1_ClearFlag:
      0012FF 89               [ 2] 3636 	pushw	x
                                   3637 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2090: assert_param(IS_TIM1_CLEAR_FLAG_OK(TIM1_FLAG));
      001300 1F 01            [ 2] 3638 	ldw	(0x01, sp), x
      001302 7B 01            [ 1] 3639 	ld	a, (0x01, sp)
      001304 A5 E1            [ 1] 3640 	bcp	a, #0xe1
      001306 26 03            [ 1] 3641 	jrne	00103$
      001308 5D               [ 2] 3642 	tnzw	x
      001309 26 10            [ 1] 3643 	jrne	00104$
      00130B                       3644 00103$:
      00130B 89               [ 2] 3645 	pushw	x
      00130C 4B 2A            [ 1] 3646 	push	#0x2a
      00130E 4B 08            [ 1] 3647 	push	#0x08
      001310 4B 00            [ 1] 3648 	push	#0x00
      001312 4B 00            [ 1] 3649 	push	#0x00
      001314 AEr00r00         [ 2] 3650 	ldw	x, #(___str_0+0)
      001317 CDr00r00         [ 4] 3651 	call	_assert_failed
      00131A 85               [ 2] 3652 	popw	x
      00131B                       3653 00104$:
                                   3654 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2093: TIM1->SR1 = (uint8_t)(~(uint8_t)(TIM1_FLAG));
      00131B 9F               [ 1] 3655 	ld	a, xl
      00131C 43               [ 1] 3656 	cpl	a
      00131D C7 52 55         [ 1] 3657 	ld	0x5255, a
                                   3658 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2094: TIM1->SR2 = (uint8_t)((uint8_t)(~((uint8_t)((uint16_t)TIM1_FLAG >> 8))) & 
      001320 7B 01            [ 1] 3659 	ld	a, (0x01, sp)
      001322 43               [ 1] 3660 	cpl	a
      001323 A4 1E            [ 1] 3661 	and	a, #0x1e
      001325 C7 52 56         [ 1] 3662 	ld	0x5256, a
                                   3663 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2096: }
      001328 85               [ 2] 3664 	popw	x
      001329 81               [ 4] 3665 	ret
                                   3666 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2112: ITStatus TIM1_GetITStatus(TIM1_IT_TypeDef TIM1_IT)
                                   3667 ;	-----------------------------------------
                                   3668 ;	 function TIM1_GetITStatus
                                   3669 ;	-----------------------------------------
      00132A                       3670 _TIM1_GetITStatus:
      00132A 89               [ 2] 3671 	pushw	x
                                   3672 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2118: assert_param(IS_TIM1_GET_IT_OK(TIM1_IT));
      00132B A1 01            [ 1] 3673 	cp	a, #0x01
      00132D 27 2A            [ 1] 3674 	jreq	00108$
      00132F A1 02            [ 1] 3675 	cp	a, #0x02
      001331 27 26            [ 1] 3676 	jreq	00108$
      001333 A1 04            [ 1] 3677 	cp	a, #0x04
      001335 27 22            [ 1] 3678 	jreq	00108$
      001337 A1 08            [ 1] 3679 	cp	a, #0x08
      001339 27 1E            [ 1] 3680 	jreq	00108$
      00133B A1 10            [ 1] 3681 	cp	a, #0x10
      00133D 27 1A            [ 1] 3682 	jreq	00108$
      00133F A1 20            [ 1] 3683 	cp	a, #0x20
      001341 27 16            [ 1] 3684 	jreq	00108$
      001343 A1 40            [ 1] 3685 	cp	a, #0x40
      001345 27 12            [ 1] 3686 	jreq	00108$
      001347 A1 80            [ 1] 3687 	cp	a, #0x80
      001349 27 0E            [ 1] 3688 	jreq	00108$
      00134B 88               [ 1] 3689 	push	a
      00134C 4B 46            [ 1] 3690 	push	#0x46
      00134E 4B 08            [ 1] 3691 	push	#0x08
      001350 5F               [ 1] 3692 	clrw	x
      001351 89               [ 2] 3693 	pushw	x
      001352 AEr00r00         [ 2] 3694 	ldw	x, #(___str_0+0)
      001355 CDr00r00         [ 4] 3695 	call	_assert_failed
      001358 84               [ 1] 3696 	pop	a
      001359                       3697 00108$:
                                   3698 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2120: TIM1_itStatus = (uint8_t)(TIM1->SR1 & (uint8_t)TIM1_IT);
      001359 AE 52 55         [ 2] 3699 	ldw	x, #0x5255
      00135C 88               [ 1] 3700 	push	a
      00135D F6               [ 1] 3701 	ld	a, (x)
      00135E 6B 03            [ 1] 3702 	ld	(0x03, sp), a
      001360 84               [ 1] 3703 	pop	a
      001361 88               [ 1] 3704 	push	a
      001362 14 03            [ 1] 3705 	and	a, (0x03, sp)
      001364 6B 02            [ 1] 3706 	ld	(0x02, sp), a
      001366 84               [ 1] 3707 	pop	a
                                   3708 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2122: TIM1_itEnable = (uint8_t)(TIM1->IER & (uint8_t)TIM1_IT);
      001367 AE 52 54         [ 2] 3709 	ldw	x, #0x5254
      00136A 88               [ 1] 3710 	push	a
      00136B F6               [ 1] 3711 	ld	a, (x)
      00136C 6B 03            [ 1] 3712 	ld	(0x03, sp), a
      00136E 84               [ 1] 3713 	pop	a
      00136F 14 02            [ 1] 3714 	and	a, (0x02, sp)
                                   3715 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2124: if ((TIM1_itStatus != (uint8_t)RESET ) && (TIM1_itEnable != (uint8_t)RESET ))
      001371 0D 01            [ 1] 3716 	tnz	(0x01, sp)
      001373 27 06            [ 1] 3717 	jreq	00102$
      001375 4D               [ 1] 3718 	tnz	a
      001376 27 03            [ 1] 3719 	jreq	00102$
                                   3720 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2126: bitstatus = SET;
      001378 A6 01            [ 1] 3721 	ld	a, #0x01
                                   3722 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2130: bitstatus = RESET;
      00137A 21                    3723 	.byte 0x21
      00137B                       3724 00102$:
      00137B 4F               [ 1] 3725 	clr	a
      00137C                       3726 00103$:
                                   3727 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2132: return (ITStatus)(bitstatus);
                                   3728 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2133: }
      00137C 85               [ 2] 3729 	popw	x
      00137D 81               [ 4] 3730 	ret
                                   3731 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2149: void TIM1_ClearITPendingBit(TIM1_IT_TypeDef TIM1_IT)
                                   3732 ;	-----------------------------------------
                                   3733 ;	 function TIM1_ClearITPendingBit
                                   3734 ;	-----------------------------------------
      00137E                       3735 _TIM1_ClearITPendingBit:
                                   3736 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2152: assert_param(IS_TIM1_IT_OK(TIM1_IT));
      00137E 4D               [ 1] 3737 	tnz	a
      00137F 26 0E            [ 1] 3738 	jrne	00104$
      001381 88               [ 1] 3739 	push	a
      001382 4B 68            [ 1] 3740 	push	#0x68
      001384 4B 08            [ 1] 3741 	push	#0x08
      001386 5F               [ 1] 3742 	clrw	x
      001387 89               [ 2] 3743 	pushw	x
      001388 AEr00r00         [ 2] 3744 	ldw	x, #(___str_0+0)
      00138B CDr00r00         [ 4] 3745 	call	_assert_failed
      00138E 84               [ 1] 3746 	pop	a
      00138F                       3747 00104$:
                                   3748 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2155: TIM1->SR1 = (uint8_t)(~(uint8_t)TIM1_IT);
      00138F 43               [ 1] 3749 	cpl	a
      001390 C7 52 55         [ 1] 3750 	ld	0x5255, a
                                   3751 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2156: }
      001393 81               [ 4] 3752 	ret
                                   3753 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2174: static void TI1_Config(uint8_t TIM1_ICPolarity,
                                   3754 ;	-----------------------------------------
                                   3755 ;	 function TI1_Config
                                   3756 ;	-----------------------------------------
      001394                       3757 _TI1_Config:
      001394 89               [ 2] 3758 	pushw	x
      001395 6B 02            [ 1] 3759 	ld	(0x02, sp), a
                                   3760 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2179: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      001397 72 11 52 5C      [ 1] 3761 	bres	0x525c, #0
                                   3762 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2182: TIM1->CCMR1 = (uint8_t)((uint8_t)(TIM1->CCMR1 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF ))) | 
      00139B C6 52 58         [ 1] 3763 	ld	a, 0x5258
      00139E A4 0C            [ 1] 3764 	and	a, #0x0c
      0013A0 6B 01            [ 1] 3765 	ld	(0x01, sp), a
                                   3766 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2183: (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      0013A2 7B 06            [ 1] 3767 	ld	a, (0x06, sp)
      0013A4 4E               [ 1] 3768 	swap	a
      0013A5 A4 F0            [ 1] 3769 	and	a, #0xf0
      0013A7 1A 05            [ 1] 3770 	or	a, (0x05, sp)
      0013A9 1A 01            [ 1] 3771 	or	a, (0x01, sp)
      0013AB C7 52 58         [ 1] 3772 	ld	0x5258, a
                                   3773 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2179: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1E);
      0013AE C6 52 5C         [ 1] 3774 	ld	a, 0x525c
                                   3775 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2186: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      0013B1 0D 02            [ 1] 3776 	tnz	(0x02, sp)
      0013B3 27 07            [ 1] 3777 	jreq	00102$
                                   3778 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2188: TIM1->CCER1 |= TIM1_CCER1_CC1P;
      0013B5 AA 02            [ 1] 3779 	or	a, #0x02
      0013B7 C7 52 5C         [ 1] 3780 	ld	0x525c, a
      0013BA 20 05            [ 2] 3781 	jra	00103$
      0013BC                       3782 00102$:
                                   3783 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2192: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC1P);
      0013BC A4 FD            [ 1] 3784 	and	a, #0xfd
      0013BE C7 52 5C         [ 1] 3785 	ld	0x525c, a
      0013C1                       3786 00103$:
                                   3787 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2196: TIM1->CCER1 |=  TIM1_CCER1_CC1E;
      0013C1 C6 52 5C         [ 1] 3788 	ld	a, 0x525c
      0013C4 AA 01            [ 1] 3789 	or	a, #0x01
      0013C6 C7 52 5C         [ 1] 3790 	ld	0x525c, a
                                   3791 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2197: }
      0013C9 1E 03            [ 2] 3792 	ldw	x, (3, sp)
      0013CB 5B 06            [ 2] 3793 	addw	sp, #6
      0013CD FC               [ 2] 3794 	jp	(x)
                                   3795 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2215: static void TI2_Config(uint8_t TIM1_ICPolarity,
                                   3796 ;	-----------------------------------------
                                   3797 ;	 function TI2_Config
                                   3798 ;	-----------------------------------------
      0013CE                       3799 _TI2_Config:
      0013CE 89               [ 2] 3800 	pushw	x
      0013CF 6B 02            [ 1] 3801 	ld	(0x02, sp), a
                                   3802 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2220: TIM1->CCER1 &=  (uint8_t)(~TIM1_CCER1_CC2E);
      0013D1 72 19 52 5C      [ 1] 3803 	bres	0x525c, #4
                                   3804 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2223: TIM1->CCMR2  = (uint8_t)((uint8_t)(TIM1->CCMR2 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF ))) 
      0013D5 C6 52 59         [ 1] 3805 	ld	a, 0x5259
      0013D8 A4 0C            [ 1] 3806 	and	a, #0x0c
      0013DA 6B 01            [ 1] 3807 	ld	(0x01, sp), a
                                   3808 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2224: | (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      0013DC 7B 06            [ 1] 3809 	ld	a, (0x06, sp)
      0013DE 4E               [ 1] 3810 	swap	a
      0013DF A4 F0            [ 1] 3811 	and	a, #0xf0
      0013E1 1A 05            [ 1] 3812 	or	a, (0x05, sp)
      0013E3 1A 01            [ 1] 3813 	or	a, (0x01, sp)
      0013E5 C7 52 59         [ 1] 3814 	ld	0x5259, a
                                   3815 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2220: TIM1->CCER1 &=  (uint8_t)(~TIM1_CCER1_CC2E);
      0013E8 C6 52 5C         [ 1] 3816 	ld	a, 0x525c
                                   3817 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2226: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      0013EB 0D 02            [ 1] 3818 	tnz	(0x02, sp)
      0013ED 27 07            [ 1] 3819 	jreq	00102$
                                   3820 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2228: TIM1->CCER1 |= TIM1_CCER1_CC2P;
      0013EF AA 20            [ 1] 3821 	or	a, #0x20
      0013F1 C7 52 5C         [ 1] 3822 	ld	0x525c, a
      0013F4 20 05            [ 2] 3823 	jra	00103$
      0013F6                       3824 00102$:
                                   3825 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2232: TIM1->CCER1 &= (uint8_t)(~TIM1_CCER1_CC2P);
      0013F6 A4 DF            [ 1] 3826 	and	a, #0xdf
      0013F8 C7 52 5C         [ 1] 3827 	ld	0x525c, a
      0013FB                       3828 00103$:
                                   3829 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2235: TIM1->CCER1 |=  TIM1_CCER1_CC2E;
      0013FB C6 52 5C         [ 1] 3830 	ld	a, 0x525c
      0013FE AA 10            [ 1] 3831 	or	a, #0x10
      001400 C7 52 5C         [ 1] 3832 	ld	0x525c, a
                                   3833 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2236: }
      001403 1E 03            [ 2] 3834 	ldw	x, (3, sp)
      001405 5B 06            [ 2] 3835 	addw	sp, #6
      001407 FC               [ 2] 3836 	jp	(x)
                                   3837 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2254: static void TI3_Config(uint8_t TIM1_ICPolarity,
                                   3838 ;	-----------------------------------------
                                   3839 ;	 function TI3_Config
                                   3840 ;	-----------------------------------------
      001408                       3841 _TI3_Config:
      001408 89               [ 2] 3842 	pushw	x
      001409 6B 02            [ 1] 3843 	ld	(0x02, sp), a
                                   3844 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2259: TIM1->CCER2 &=  (uint8_t)(~TIM1_CCER2_CC3E);
      00140B C6 52 5D         [ 1] 3845 	ld	a, 0x525d
      00140E A4 FE            [ 1] 3846 	and	a, #0xfe
      001410 C7 52 5D         [ 1] 3847 	ld	0x525d, a
                                   3848 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2262: TIM1->CCMR3 = (uint8_t)((uint8_t)(TIM1->CCMR3 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF))) 
      001413 C6 52 5A         [ 1] 3849 	ld	a, 0x525a
      001416 A4 0C            [ 1] 3850 	and	a, #0x0c
      001418 6B 01            [ 1] 3851 	ld	(0x01, sp), a
                                   3852 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2263: | (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      00141A 7B 06            [ 1] 3853 	ld	a, (0x06, sp)
      00141C 4E               [ 1] 3854 	swap	a
      00141D A4 F0            [ 1] 3855 	and	a, #0xf0
      00141F 1A 05            [ 1] 3856 	or	a, (0x05, sp)
      001421 1A 01            [ 1] 3857 	or	a, (0x01, sp)
      001423 C7 52 5A         [ 1] 3858 	ld	0x525a, a
                                   3859 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2259: TIM1->CCER2 &=  (uint8_t)(~TIM1_CCER2_CC3E);
      001426 C6 52 5D         [ 1] 3860 	ld	a, 0x525d
                                   3861 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2266: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      001429 0D 02            [ 1] 3862 	tnz	(0x02, sp)
      00142B 27 07            [ 1] 3863 	jreq	00102$
                                   3864 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2268: TIM1->CCER2 |= TIM1_CCER2_CC3P;
      00142D AA 02            [ 1] 3865 	or	a, #0x02
      00142F C7 52 5D         [ 1] 3866 	ld	0x525d, a
      001432 20 05            [ 2] 3867 	jra	00103$
      001434                       3868 00102$:
                                   3869 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2272: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC3P);
      001434 A4 FD            [ 1] 3870 	and	a, #0xfd
      001436 C7 52 5D         [ 1] 3871 	ld	0x525d, a
      001439                       3872 00103$:
                                   3873 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2275: TIM1->CCER2 |=  TIM1_CCER2_CC3E;
      001439 C6 52 5D         [ 1] 3874 	ld	a, 0x525d
      00143C AA 01            [ 1] 3875 	or	a, #0x01
      00143E C7 52 5D         [ 1] 3876 	ld	0x525d, a
                                   3877 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2276: }
      001441 1E 03            [ 2] 3878 	ldw	x, (3, sp)
      001443 5B 06            [ 2] 3879 	addw	sp, #6
      001445 FC               [ 2] 3880 	jp	(x)
                                   3881 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2294: static void TI4_Config(uint8_t TIM1_ICPolarity,
                                   3882 ;	-----------------------------------------
                                   3883 ;	 function TI4_Config
                                   3884 ;	-----------------------------------------
      001446                       3885 _TI4_Config:
      001446 89               [ 2] 3886 	pushw	x
      001447 6B 02            [ 1] 3887 	ld	(0x02, sp), a
                                   3888 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2299: TIM1->CCER2 &=  (uint8_t)(~TIM1_CCER2_CC4E);
      001449 72 19 52 5D      [ 1] 3889 	bres	0x525d, #4
                                   3890 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2302: TIM1->CCMR4 = (uint8_t)((uint8_t)(TIM1->CCMR4 & (uint8_t)(~(uint8_t)( TIM1_CCMR_CCxS | TIM1_CCMR_ICxF )))
      00144D C6 52 5B         [ 1] 3891 	ld	a, 0x525b
      001450 A4 0C            [ 1] 3892 	and	a, #0x0c
      001452 6B 01            [ 1] 3893 	ld	(0x01, sp), a
                                   3894 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2303: | (uint8_t)(( (TIM1_ICSelection)) | ((uint8_t)( TIM1_ICFilter << 4))));
      001454 7B 06            [ 1] 3895 	ld	a, (0x06, sp)
      001456 4E               [ 1] 3896 	swap	a
      001457 A4 F0            [ 1] 3897 	and	a, #0xf0
      001459 1A 05            [ 1] 3898 	or	a, (0x05, sp)
      00145B 1A 01            [ 1] 3899 	or	a, (0x01, sp)
      00145D C7 52 5B         [ 1] 3900 	ld	0x525b, a
                                   3901 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2299: TIM1->CCER2 &=  (uint8_t)(~TIM1_CCER2_CC4E);
      001460 C6 52 5D         [ 1] 3902 	ld	a, 0x525d
                                   3903 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2306: if (TIM1_ICPolarity != TIM1_ICPOLARITY_RISING)
      001463 0D 02            [ 1] 3904 	tnz	(0x02, sp)
      001465 27 07            [ 1] 3905 	jreq	00102$
                                   3906 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2308: TIM1->CCER2 |= TIM1_CCER2_CC4P;
      001467 AA 20            [ 1] 3907 	or	a, #0x20
      001469 C7 52 5D         [ 1] 3908 	ld	0x525d, a
      00146C 20 05            [ 2] 3909 	jra	00103$
      00146E                       3910 00102$:
                                   3911 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2312: TIM1->CCER2 &= (uint8_t)(~TIM1_CCER2_CC4P);
      00146E A4 DF            [ 1] 3912 	and	a, #0xdf
      001470 C7 52 5D         [ 1] 3913 	ld	0x525d, a
      001473                       3914 00103$:
                                   3915 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2316: TIM1->CCER2 |=  TIM1_CCER2_CC4E;
      001473 C6 52 5D         [ 1] 3916 	ld	a, 0x525d
      001476 AA 10            [ 1] 3917 	or	a, #0x10
      001478 C7 52 5D         [ 1] 3918 	ld	0x525d, a
                                   3919 ;	./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/stm8s_tim1.c: 2317: }
      00147B 1E 03            [ 2] 3920 	ldw	x, (3, sp)
      00147D 5B 06            [ 2] 3921 	addw	sp, #6
      00147F FC               [ 2] 3922 	jp	(x)
                                   3923 	.area CODE
                                   3924 	.area CONST
                                   3925 	.area CONST
      000000                       3926 ___str_0:
      000000 2E 2F 53 54 4D 38 53  3927 	.ascii "./STM8S_StdPeriph_Lib/Libraries/STM8S_StdPeriph_Driver/src/s"
             5F 53 74 64 50 65 72
             69 70 68 5F 4C 69 62
             2F 4C 69 62 72 61 72
             69 65 73 2F 53 54 4D
             38 53 5F 53 74 64 50
             65 72 69 70 68 5F 44
             72 69 76 65 72 2F 73
             72 63 2F 73
      00003C 74 6D 38 73 5F 74 69  3928 	.ascii "tm8s_tim1.c"
             6D 31 2E 63
      000047 00                    3929 	.db 0x00
                                   3930 	.area CODE
                                   3931 	.area INITIALIZER
                                   3932 	.area CABS (ABS)
